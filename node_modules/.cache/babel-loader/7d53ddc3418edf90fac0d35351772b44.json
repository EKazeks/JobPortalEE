{"ast":null,"code":"import React from 'react';\nexport const customURL = function () {\n  let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'https://www.tootukassa.ee/et/toopakkumised';\n  let type = arguments.length > 1 ? arguments[1] : undefined;\n\n  // url comes from our db - 'https://www.tootukassa.ee/et/toopakkumised/Nordic-C-Creditor-Oy/67289/valvetootaja-655362'\n  // url comes from backend in this format - \"https://vpt-ui-dev.azurewebsites.net/tyopaikat/Nordic-C-Creditor-Oy/67289/Kirjanpitäjä-Controller/14\"\n  // const pathname = url && url.split('/tyopaikat/')[0];\n  // const splittedPath = pathname && pathname.split('/');\n  // const slicedPath= splittedPath.slice(4);\n  // const path = slicedPath[0].split('-');\n  // const connectString = path[0] + '/' + path[1];\n  // // const companyName = splittedPath && splittedPath[0]\n  // const companyId = splittedPath && splittedPath[1];\n  // const jobTitle = connectString && connectString[0];\n  // const postId = splittedPath && splittedPath[2];\n  // const pathname = url && url.split('/toopakkumised/')[1]; // work\n  // const splittedPath = pathname && pathname.split('/'); // work\n  // const slicedPath= splittedPath.slice(2); // work\n  // const path = slicedPath[0].split('-'); // work\n  // const connectString = path[0] + '/' + path[1]; // work\n  // const companyId = splittedPath && splittedPath[1]; // work \n  // const jobTitle = path && path[0]; // work\n  // const postId = path && path[1]; // work\n  switch (type) {\n    case 'internal':\n      // For admins and companies, url path is jobpost/jobTitle/postId\n      return `/jobpost/${connectString}`;\n\n    case 'external':\n      // For public, url path is tyopaikat/companyName/companyId/jobTitle/postId\n      return `/tyopaikat/${connectString}`;\n\n    case 'application':\n      // For application form component\n      return `/tyopaikat/${jobTitle}/${companyId}JP${postId}/hae`;\n\n    case 'campaign':\n      // For campaign component\n      return `/${jobTitle}/${postId}/campaign`;\n\n    default:\n      break;\n  }\n};\nexport const convertJobTypeToStr = (t, type) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, type === '12' && t('jobtype:jobType12'), type === '13' && t('jobtype:jobType13'), type === '14' && t('jobtype:jobType14'), type === '15' && t('jobtype:jobType15'));\n};\nexport const convertJobHoursToStr = (t, type) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, type === '31' && t('jobhours:jobHours31'), type === '32' && t('jobhours:jobHours32'), type === '33' && t('jobhours:jobHours33'), type === '34' && t('jobhours:jobHours34'));\n};\nexport const convertJobWorksStartToStr = (t, type) => {\n  let check = false;\n  let byAgreement = false;\n  let immediately = false;\n  let workWillBegin = false;\n  let asSoonAs = false;\n  let heti = false;\n  let description = false;\n  let agreeStartTime = false;\n  let summerWork = false;\n  let asSoonAsPossible = false;\n  let valueDate = type.split(',')[0];\n  let valueAgremment = type.split(',')[1];\n  let dateCheck = false;\n  let valueWithNewDate;\n\n  if (type === 'Mahdollisimman pian') {\n    asSoonAsPossible = true;\n    check = true;\n  }\n\n  if (type === 'Kesällä') {\n    summerWork = true;\n    check = true;\n  }\n\n  if (type === 'Alkamisajankohta sovittaissa') {\n    agreeStartTime = true;\n    check = true;\n  }\n\n  if (type === 'HETI' || type === 'Heti') {\n    heti = true;\n    check = true;\n  }\n\n  if (type === 'Katso kuvaus') {\n    description = true;\n    check = true;\n  }\n\n  if (type === 'Sopimuksen mukaan' || type === 'sopimuksen mukaan' || type === 'sopimuksen mukaan.' || type === 'Sopimuksen mukaan.') {\n    byAgreement = true;\n    check = true;\n  }\n\n  if (type === 'heti tai sopimuksen mukaan') {\n    immediately = true;\n    check = true;\n  }\n\n  if (type === 'Työ alkaa heti sopivan henkilön löydytt') {\n    workWillBegin = true;\n    check = true;\n  }\n\n  if (type.toLowerCase() === 'heti sopivan henkilön löydyttyä') {\n    asSoonAs = true;\n    check = true;\n  }\n\n  if (valueAgremment === ' tai sopimuksen mukaan') {\n    dateCheck = true;\n    check = true;\n    valueWithNewDate = valueDate && valueDate + ', ' + t('workStartLabelDate:orByAgreement');\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, byAgreement && t('workStartLabelDate:byAgreement'), immediately && t('workStartLabelDate:immediately'), workWillBegin && t('workStartLabelDate:workWillBegin'), asSoonAs && t('workStartLabelDate:asSoonAs'), asSoonAsPossible && t('workStartLabelDate:As soon as possible'), heti && t('workStartLabelDate:immediate'), agreeStartTime && t('workStartLabelDate:agreeStartTime'), description && t('workStartLabelDate:description'), summerWork && t('workStartLabelDate:summerWork'), dateCheck && valueWithNewDate, check === false ? type : null);\n}; // To scroll the page on top when paginating\n\nexport const scrollToTop = () => {\n  window.scrollTo({\n    top: 250,\n    behavior: 'smooth'\n  });\n};\nexport const formatToFinnishCurrency = amount => {\n  return new Intl.NumberFormat('fi-FI', {\n    style: 'currency',\n    currency: 'EUR'\n  }).format(amount);\n};\nexport const setCurrencyColor = (paymentRef, paymentStatus) => {\n  if (!!paymentRef) {\n    if (!paymentStatus) return 'red';\n    if (paymentStatus === 1) return 'green';\n  } else return 'gray';\n};\nexport const isToDisableCheckBox = (paymentRef, paymentMethod) => {\n  if (!paymentRef || paymentMethod === 'online') return true;else return false;\n};","map":{"version":3,"names":["React","customURL","url","type","connectString","jobTitle","companyId","postId","convertJobTypeToStr","t","convertJobHoursToStr","convertJobWorksStartToStr","check","byAgreement","immediately","workWillBegin","asSoonAs","heti","description","agreeStartTime","summerWork","asSoonAsPossible","valueDate","split","valueAgremment","dateCheck","valueWithNewDate","toLowerCase","scrollToTop","window","scrollTo","top","behavior","formatToFinnishCurrency","amount","Intl","NumberFormat","style","currency","format","setCurrencyColor","paymentRef","paymentStatus","isToDisableCheckBox","paymentMethod"],"sources":["C:/Users/Eduard/Desktop/EeJobPortal/src/utils/helperFunctions.js"],"sourcesContent":["import React from 'react';\r\n\r\nexport const customURL = (url='https://www.tootukassa.ee/et/toopakkumised', type) => {\r\n  // url comes from our db - 'https://www.tootukassa.ee/et/toopakkumised/Nordic-C-Creditor-Oy/67289/valvetootaja-655362'\r\n  // url comes from backend in this format - \"https://vpt-ui-dev.azurewebsites.net/tyopaikat/Nordic-C-Creditor-Oy/67289/Kirjanpitäjä-Controller/14\"\r\n\r\n  // const pathname = url && url.split('/tyopaikat/')[0];\r\n  // const splittedPath = pathname && pathname.split('/');\r\n  // const slicedPath= splittedPath.slice(4);\r\n  // const path = slicedPath[0].split('-');\r\n  // const connectString = path[0] + '/' + path[1];\r\n  // // const companyName = splittedPath && splittedPath[0]\r\n  // const companyId = splittedPath && splittedPath[1];\r\n  // const jobTitle = connectString && connectString[0];\r\n  // const postId = splittedPath && splittedPath[2];\r\n\r\n  // const pathname = url && url.split('/toopakkumised/')[1]; // work\r\n  // const splittedPath = pathname && pathname.split('/'); // work\r\n  // const slicedPath= splittedPath.slice(2); // work\r\n  // const path = slicedPath[0].split('-'); // work\r\n  // const connectString = path[0] + '/' + path[1]; // work\r\n\r\n  // const companyId = splittedPath && splittedPath[1]; // work \r\n  // const jobTitle = path && path[0]; // work\r\n  // const postId = path && path[1]; // work\r\n  \r\n  switch (type) {\r\n    case 'internal': // For admins and companies, url path is jobpost/jobTitle/postId\r\n      return `/jobpost/${connectString}`;\r\n\r\n    case 'external': // For public, url path is tyopaikat/companyName/companyId/jobTitle/postId\r\n      return `/tyopaikat/${connectString}`;\r\n\r\n    case 'application': // For application form component\r\n      return `/tyopaikat/${jobTitle}/${companyId}JP${postId}/hae`;\r\n\r\n    case 'campaign': // For campaign component\r\n      return `/${jobTitle}/${postId}/campaign`;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const convertJobTypeToStr = (t, type) => {\r\n  return (\r\n    <>\r\n      {type === '12' && t('jobtype:jobType12')}\r\n      {type === '13' && t('jobtype:jobType13')}\r\n      {type === '14' && t('jobtype:jobType14')}\r\n      {type === '15' && t('jobtype:jobType15')}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const convertJobHoursToStr = (t, type) => {\r\n  return (\r\n    <>\r\n      {type === '31' && t('jobhours:jobHours31')}\r\n      {type === '32' && t('jobhours:jobHours32')}\r\n      {type === '33' && t('jobhours:jobHours33')}\r\n      {type === '34' && t('jobhours:jobHours34')}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const convertJobWorksStartToStr = (t, type) => {\r\n  let check = false;\r\n  let byAgreement = false;\r\n  let immediately = false;\r\n  let workWillBegin = false;\r\n  let asSoonAs = false;\r\n  let heti = false;\r\n  let description = false;\r\n  let agreeStartTime = false;\r\n  let summerWork = false;\r\n  let asSoonAsPossible = false;\r\n  let valueDate = type.split(',')[0];\r\n  let valueAgremment = type.split(',')[1];\r\n  let dateCheck = false;\r\n  let valueWithNewDate;\r\n  if (type === 'Mahdollisimman pian') {\r\n    asSoonAsPossible = true;\r\n    check = true;\r\n  }\r\n  if (type === 'Kesällä') {\r\n    summerWork = true;\r\n    check = true;\r\n  }\r\n  if (type === 'Alkamisajankohta sovittaissa') {\r\n    agreeStartTime = true;\r\n    check = true;\r\n  }\r\n  if (type === 'HETI' || type === 'Heti') {\r\n    heti = true;\r\n    check = true;\r\n  }\r\n  if (type === 'Katso kuvaus') {\r\n    description = true;\r\n    check = true;\r\n  }\r\n  if (type === 'Sopimuksen mukaan' || type === 'sopimuksen mukaan' || type === 'sopimuksen mukaan.' || type === 'Sopimuksen mukaan.') {\r\n    byAgreement = true;\r\n    check = true;\r\n  }\r\n  if (type === 'heti tai sopimuksen mukaan') {\r\n    immediately = true;\r\n    check = true;\r\n  }\r\n  if (type === 'Työ alkaa heti sopivan henkilön löydytt') {\r\n    workWillBegin = true;\r\n    check = true;\r\n  }\r\n  if (type.toLowerCase() === 'heti sopivan henkilön löydyttyä') {\r\n    asSoonAs = true;\r\n    check = true;\r\n  }\r\n  if (valueAgremment === ' tai sopimuksen mukaan') {\r\n    dateCheck = true;\r\n    check = true;\r\n    valueWithNewDate = valueDate && valueDate + ', ' + t('workStartLabelDate:orByAgreement');\r\n  }\r\n  return (\r\n    <>\r\n      {byAgreement && t('workStartLabelDate:byAgreement')}\r\n      {immediately && t('workStartLabelDate:immediately')}\r\n      {workWillBegin && t('workStartLabelDate:workWillBegin')}\r\n      {asSoonAs && t('workStartLabelDate:asSoonAs')}\r\n      {asSoonAsPossible && t('workStartLabelDate:As soon as possible')}\r\n      {heti && t('workStartLabelDate:immediate')}\r\n      {agreeStartTime && t('workStartLabelDate:agreeStartTime')}\r\n      {description && t('workStartLabelDate:description')}\r\n      {summerWork && t('workStartLabelDate:summerWork')}\r\n      {dateCheck && valueWithNewDate}\r\n      {check === false ? type : null}\r\n    </>\r\n  );\r\n};\r\n\r\n// To scroll the page on top when paginating\r\nexport const scrollToTop = () => {\r\n  window.scrollTo({\r\n    top: 250,\r\n    behavior: 'smooth',\r\n  });\r\n};\r\n\r\nexport const formatToFinnishCurrency = amount => {\r\n  return new Intl.NumberFormat('fi-FI', {\r\n    style: 'currency',\r\n    currency: 'EUR',\r\n  }).format(amount);\r\n};\r\n\r\nexport const setCurrencyColor = (paymentRef, paymentStatus) => {\r\n  if (!!paymentRef) {\r\n    if (!paymentStatus) return 'red';\r\n    if (paymentStatus === 1) return 'green';\r\n  } else return 'gray';\r\n};\r\n\r\nexport const isToDisableCheckBox = (paymentRef, paymentMethod) => {\r\n  if (!paymentRef || paymentMethod === 'online') return true;\r\n  else return false;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}