{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport { hideSpinner, openAdToSeeAdInfo, saveAndPublishAdvertisementFailed, saveAndPublishAdvertisementSuccess, saveNewCampaignSuccess, showFailedSnackbar, showSuccessSnackbar } from '../actions';\nimport { API_SERVER, SEND_INVOICE_TO_TALOUS } from '../constants';\nimport store from '../store';\nimport { apiManualPost } from '../utils/request';\n\nfunction* sendInvoiceToTalousSaga(_ref) {\n  let {\n    detail\n  } = _ref;\n  const url = `${API_SERVER}/SendJobPostInvoice`;\n  const isToChangeCampaign = store.getState().advertisement.isToChangeCampaign;\n  const {\n    company_id,\n    company_name,\n    business_id,\n    firstname,\n    lastname,\n    email,\n    address,\n    zip_code,\n    city,\n    description,\n    totalSum,\n    amount,\n    post_id,\n    order_id,\n    marketing_budget,\n    mkt_description,\n    isSameCampaign,\n    selectedCampaign,\n    postIdToFetch\n  } = detail;\n\n  try {\n    const invoiceBody = {\n      user_type: 'Yritys',\n      contact_person_name: 'Jobportal',\n      company_name: 'Jobportal Oy',\n      business_id: '3213073-1',\n      phone: '020 734 6902',\n      email: 'asiakaspalvelu@jobportal.fi',\n      bank_name: 'Nordea Pankki',\n      account_number: 'FI19 1745 3000 2744 17',\n      address: 'Salomonkatu 17B',\n      zip_code: '00100',\n      city: 'Helsinki',\n      customer: [{\n        company_id,\n        //Needed for Jobportal Backend\n        post_id,\n        //Needed for Jobportal Backend\n        company_name,\n        business_id,\n        person_to_contact: `${firstname} ${lastname}`,\n        person_to_contact_email: email,\n        customer_type: 'Yritys',\n        delivery_method: 'Sähköposti',\n        country: 'Suomi',\n        delivery_address: address,\n        zip_code,\n        city,\n        payment_control: 'Maksuvalvonta',\n        Invoice: [{\n          description: 'Työpaikkailmoitus',\n          order_id,\n          //invoice_reference: order_id?.toString(),\n          billing_date: new Date(),\n          overdue: selectedCampaign.includes_mktbudget ? 7 : 14,\n          invoice_price_selection: 0,\n          total_sum: totalSum,\n          status: 1,\n          post_id,\n          rows: []\n        }]\n      }]\n    };\n\n    if (isSameCampaign) {\n      invoiceBody.customer[0].Invoice[0].rows[0] = {\n        description: mkt_description,\n        quantity: '1',\n        unit: 'kpl',\n        quantity_price: marketing_budget,\n        vat_percent: 24,\n        sum_tax_free: marketing_budget,\n        vat: marketing_budget * 0.24\n      };\n    } else {\n      invoiceBody.customer[0].Invoice[0].rows[0] = {\n        description,\n        quantity: '1',\n        unit: 'kpl',\n        quantity_price: amount,\n        vat_percent: 24,\n        sum_tax_free: amount,\n        vat: amount * 0.24\n      };\n\n      if (!!marketing_budget) {\n        invoiceBody.customer[0].Invoice[0].rows.push({\n          description: mkt_description,\n          quantity: '1',\n          unit: 'kpl',\n          quantity_price: marketing_budget,\n          vat_percent: 24,\n          sum_tax_free: marketing_budget,\n          vat: marketing_budget * 0.24\n        });\n      }\n    }\n\n    if (!!amount || !!marketing_budget) {\n      const response = yield call(apiManualPost, url, JSON.stringify({ ...invoiceBody\n      }));\n      const campaign_id = selectedCampaign.id;\n\n      if (response.data === 'Invoice added and sent to the customer') {\n        if (isToChangeCampaign) {\n          yield put(showSuccessSnackbar());\n          yield put(openAdToSeeAdInfo(postIdToFetch));\n          yield put(saveNewCampaignSuccess());\n        } else {\n          yield put(saveAndPublishAdvertisementSuccess());\n        }\n\n        if (selectedCampaign.includes_mktbudget) {\n          sendInvoicePaymentReminderEmail({\n            company_name,\n            campaign_id,\n            email\n          });\n        }\n      } else {\n        if (isToChangeCampaign) {\n          yield put(showFailedSnackbar());\n          yield put(hideSpinner());\n        } else {\n          yield put(saveAndPublishAdvertisementFailed());\n        }\n      }\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport const sendInvoicePaymentReminderEmail = async function (detail) {\n  const url = `${API_SERVER}/SendInvoicePaymentReminderEmail`;\n\n  try {\n    await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(detail)\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport function* watchSendInvoiceToTalousSaga() {\n  yield takeEvery(SEND_INVOICE_TO_TALOUS, sendInvoiceToTalousSaga);\n}","map":{"version":3,"names":["takeEvery","put","call","hideSpinner","openAdToSeeAdInfo","saveAndPublishAdvertisementFailed","saveAndPublishAdvertisementSuccess","saveNewCampaignSuccess","showFailedSnackbar","showSuccessSnackbar","API_SERVER","SEND_INVOICE_TO_TALOUS","store","apiManualPost","sendInvoiceToTalousSaga","detail","url","isToChangeCampaign","getState","advertisement","company_id","company_name","business_id","firstname","lastname","email","address","zip_code","city","description","totalSum","amount","post_id","order_id","marketing_budget","mkt_description","isSameCampaign","selectedCampaign","postIdToFetch","invoiceBody","user_type","contact_person_name","phone","bank_name","account_number","customer","person_to_contact","person_to_contact_email","customer_type","delivery_method","country","delivery_address","payment_control","Invoice","billing_date","Date","overdue","includes_mktbudget","invoice_price_selection","total_sum","status","rows","quantity","unit","quantity_price","vat_percent","sum_tax_free","vat","push","response","JSON","stringify","campaign_id","id","data","sendInvoicePaymentReminderEmail","e","console","log","fetch","method","body","watchSendInvoiceToTalousSaga"],"sources":["/Users/eduardkazeks/Documents/GitHub/EeJobPortal/src/sagas/invoice.saga.js"],"sourcesContent":["import { takeEvery, put, call } from 'redux-saga/effects';\nimport {\n  hideSpinner,\n  openAdToSeeAdInfo,\n  saveAndPublishAdvertisementFailed,\n  saveAndPublishAdvertisementSuccess,\n  saveNewCampaignSuccess,\n  showFailedSnackbar,\n  showSuccessSnackbar,\n} from '../actions';\nimport { API_SERVER, SEND_INVOICE_TO_TALOUS } from '../constants';\nimport store from '../store';\nimport { apiManualPost } from '../utils/request';\n\nfunction* sendInvoiceToTalousSaga({ detail }) {\n  const url = `${API_SERVER}/SendJobPostInvoice`;\n  const isToChangeCampaign = store.getState().advertisement.isToChangeCampaign;\n\n  const {\n    company_id,\n    company_name,\n    business_id,\n    firstname,\n    lastname,\n    email,\n    address,\n    zip_code,\n    city,\n    description,\n    totalSum,\n    amount,\n    post_id,\n    order_id,\n    marketing_budget,\n    mkt_description,\n    isSameCampaign,\n    selectedCampaign,\n    postIdToFetch,\n  } = detail;\n\n  try {\n    const invoiceBody = {\n      user_type: 'Yritys',\n      contact_person_name: 'Jobportal',\n      company_name: 'Jobportal Oy',\n      business_id: '3213073-1',\n      phone: '020 734 6902',\n      email: 'asiakaspalvelu@jobportal.fi',\n      bank_name: 'Nordea Pankki',\n      account_number: 'FI19 1745 3000 2744 17',\n      address: 'Salomonkatu 17B',\n      zip_code: '00100',\n      city: 'Helsinki',\n      customer: [\n        {\n          company_id, //Needed for Jobportal Backend\n          post_id, //Needed for Jobportal Backend\n          company_name,\n          business_id,\n          person_to_contact: `${firstname} ${lastname}`,\n          person_to_contact_email: email,\n          customer_type: 'Yritys',\n          delivery_method: 'Sähköposti',\n          country: 'Suomi',\n          delivery_address: address,\n          zip_code,\n          city,\n          payment_control: 'Maksuvalvonta',\n          Invoice: [\n            {\n              description: 'Työpaikkailmoitus',\n              order_id,\n              //invoice_reference: order_id?.toString(),\n              billing_date: new Date(),\n              overdue: selectedCampaign.includes_mktbudget ? 7 : 14,\n              invoice_price_selection: 0,\n              total_sum: totalSum,\n              status: 1,\n              post_id,\n              rows: [],\n            },\n          ],\n        },\n      ],\n    };\n\n    if (isSameCampaign) {\n      invoiceBody.customer[0].Invoice[0].rows[0] = {\n        description: mkt_description,\n        quantity: '1',\n        unit: 'kpl',\n        quantity_price: marketing_budget,\n        vat_percent: 24,\n        sum_tax_free: marketing_budget,\n        vat: marketing_budget * 0.24,\n      };\n    } else {\n      invoiceBody.customer[0].Invoice[0].rows[0] = {\n        description,\n        quantity: '1',\n        unit: 'kpl',\n        quantity_price: amount,\n        vat_percent: 24,\n        sum_tax_free: amount,\n        vat: amount * 0.24,\n      };\n      if (!!marketing_budget) {\n        invoiceBody.customer[0].Invoice[0].rows.push({\n          description: mkt_description,\n          quantity: '1',\n          unit: 'kpl',\n          quantity_price: marketing_budget,\n          vat_percent: 24,\n          sum_tax_free: marketing_budget,\n          vat: marketing_budget * 0.24,\n        });\n      }\n    }\n\n    if (!!amount || !!marketing_budget) {\n      const response = yield call(apiManualPost, url, JSON.stringify({ ...invoiceBody }));\n      const campaign_id = selectedCampaign.id;\n      if (response.data === 'Invoice added and sent to the customer') {\n        if (isToChangeCampaign) {\n          yield put(showSuccessSnackbar());\n          yield put(openAdToSeeAdInfo(postIdToFetch));\n          yield put(saveNewCampaignSuccess());\n        } else {\n          yield put(saveAndPublishAdvertisementSuccess());\n        }\n        if (selectedCampaign.includes_mktbudget) {\n          sendInvoicePaymentReminderEmail({ company_name, campaign_id, email });\n        }\n      } else {\n        if (isToChangeCampaign) {\n          yield put(showFailedSnackbar());\n          yield put(hideSpinner());\n        } else {\n          yield put(saveAndPublishAdvertisementFailed());\n        }\n      }\n    }\n  } catch (e) {\n    console.log(e);\n  }\n}\n\nexport const sendInvoicePaymentReminderEmail = async function(detail) {\n  const url = `${API_SERVER}/SendInvoicePaymentReminderEmail`;\n\n  try {\n    await fetch(url, { method: 'POST', body: JSON.stringify(detail) });\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport function* watchSendInvoiceToTalousSaga() {\n  yield takeEvery(SEND_INVOICE_TO_TALOUS, sendInvoiceToTalousSaga);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}