{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { getFormValues } from 'redux-form';\nimport CryptoJS from 'crypto-js';\nimport { SIGNUP_FORM_SUBMIT, VPT_IDENTITY_SERVER } from '../constants';\nimport store from '../store';\nimport { registerPost } from '../utils/request';\nimport { signUpFormSubmitSuccess, signUpFormSubmitUserExistError, signUpFormSubmitFailed } from '../actions';\n\nfunction* signUpSaga() {\n  try {\n    const url = `${VPT_IDENTITY_SERVER}/RegisterUser`;\n    const formValues = getFormValues('signup')(store.getState());\n    const hashedPassword = CryptoJS.SHA256(formValues.password).toString();\n    const body = JSON.stringify({\n      FirstName: formValues.firstName,\n      Lastname: formValues.lastName,\n      email: formValues.email,\n      password: hashedPassword,\n      user_type: formValues.user_type,\n      SubjectId: formValues.email\n    });\n    const result = yield call(registerPost, url, body);\n\n    if (result.data.Server === 'Success') {\n      yield put(signUpFormSubmitSuccess(result.data.Server));\n    } else if (result.data.Server === 'UserExist') {\n      yield put(signUpFormSubmitUserExistError(result.data.Server));\n    } else {\n      yield put(signUpFormSubmitFailed(result.data.Server));\n    }\n  } catch (error) {\n    yield put(signUpFormSubmitFailed(error));\n  }\n}\n\nexport function* watchSignUpSaga() {\n  yield takeEvery(SIGNUP_FORM_SUBMIT, signUpSaga);\n}","map":{"version":3,"names":["call","put","takeEvery","getFormValues","CryptoJS","SIGNUP_FORM_SUBMIT","VPT_IDENTITY_SERVER","store","registerPost","signUpFormSubmitSuccess","signUpFormSubmitUserExistError","signUpFormSubmitFailed","signUpSaga","url","formValues","getState","hashedPassword","SHA256","password","toString","body","JSON","stringify","FirstName","firstName","Lastname","lastName","email","user_type","SubjectId","result","data","Server","error","watchSignUpSaga"],"sources":["/Users/eduardkazeks/Documents/GitHub/JobPortalEE/src/sagas/signUp.saga.js"],"sourcesContent":["import { call, put, takeEvery } from 'redux-saga/effects';\nimport { getFormValues } from 'redux-form';\nimport CryptoJS from 'crypto-js';\nimport { SIGNUP_FORM_SUBMIT, VPT_IDENTITY_SERVER } from '../constants';\nimport store from '../store';\nimport { registerPost } from '../utils/request';\nimport { signUpFormSubmitSuccess, signUpFormSubmitUserExistError, signUpFormSubmitFailed } from '../actions';\n\nfunction* signUpSaga() {\n  try {\n    const url = `${VPT_IDENTITY_SERVER}/RegisterUser`;\n    const formValues = getFormValues('signup')(store.getState());\n    const hashedPassword = CryptoJS.SHA256(formValues.password).toString();\n\n    const body = JSON.stringify({\n      FirstName: formValues.firstName,\n      Lastname: formValues.lastName,\n      email: formValues.email,\n      password: hashedPassword,\n      user_type: formValues.user_type,\n      SubjectId: formValues.email,\n    });\n    const result = yield call(registerPost, url, body);\n    if (result.data.Server === 'Success') {\n      yield put(signUpFormSubmitSuccess(result.data.Server));\n    } else if (result.data.Server === 'UserExist') {\n      yield put(signUpFormSubmitUserExistError(result.data.Server));\n    } else {\n      yield put(signUpFormSubmitFailed(result.data.Server));\n    }\n  } catch (error) {\n    yield put(signUpFormSubmitFailed(error));\n  }\n}\n\nexport function* watchSignUpSaga() {\n  yield takeEvery(SIGNUP_FORM_SUBMIT, signUpSaga);\n}\n"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAASC,aAAT,QAA8B,YAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,kBAAT,EAA6BC,mBAA7B,QAAwD,cAAxD;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,uBAAT,EAAkCC,8BAAlC,EAAkEC,sBAAlE,QAAgG,YAAhG;;AAEA,UAAUC,UAAV,GAAuB;EACrB,IAAI;IACF,MAAMC,GAAG,GAAI,GAAEP,mBAAoB,eAAnC;IACA,MAAMQ,UAAU,GAAGX,aAAa,CAAC,QAAD,CAAb,CAAwBI,KAAK,CAACQ,QAAN,EAAxB,CAAnB;IACA,MAAMC,cAAc,GAAGZ,QAAQ,CAACa,MAAT,CAAgBH,UAAU,CAACI,QAA3B,EAAqCC,QAArC,EAAvB;IAEA,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;MAC1BC,SAAS,EAAET,UAAU,CAACU,SADI;MAE1BC,QAAQ,EAAEX,UAAU,CAACY,QAFK;MAG1BC,KAAK,EAAEb,UAAU,CAACa,KAHQ;MAI1BT,QAAQ,EAAEF,cAJgB;MAK1BY,SAAS,EAAEd,UAAU,CAACc,SALI;MAM1BC,SAAS,EAAEf,UAAU,CAACa;IANI,CAAf,CAAb;IAQA,MAAMG,MAAM,GAAG,MAAM9B,IAAI,CAACQ,YAAD,EAAeK,GAAf,EAAoBO,IAApB,CAAzB;;IACA,IAAIU,MAAM,CAACC,IAAP,CAAYC,MAAZ,KAAuB,SAA3B,EAAsC;MACpC,MAAM/B,GAAG,CAACQ,uBAAuB,CAACqB,MAAM,CAACC,IAAP,CAAYC,MAAb,CAAxB,CAAT;IACD,CAFD,MAEO,IAAIF,MAAM,CAACC,IAAP,CAAYC,MAAZ,KAAuB,WAA3B,EAAwC;MAC7C,MAAM/B,GAAG,CAACS,8BAA8B,CAACoB,MAAM,CAACC,IAAP,CAAYC,MAAb,CAA/B,CAAT;IACD,CAFM,MAEA;MACL,MAAM/B,GAAG,CAACU,sBAAsB,CAACmB,MAAM,CAACC,IAAP,CAAYC,MAAb,CAAvB,CAAT;IACD;EACF,CArBD,CAqBE,OAAOC,KAAP,EAAc;IACd,MAAMhC,GAAG,CAACU,sBAAsB,CAACsB,KAAD,CAAvB,CAAT;EACD;AACF;;AAED,OAAO,UAAUC,eAAV,GAA4B;EACjC,MAAMhC,SAAS,CAACG,kBAAD,EAAqBO,UAArB,CAAf;AACD"},"metadata":{},"sourceType":"module"}