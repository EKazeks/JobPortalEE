{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shuli\\\\OneDrive\\\\Desktop\\\\Work\\\\JobportalN\\\\JobPortalEE\\\\src\\\\components\\\\jobs\\\\jobDetails.component.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Grid, Divider, Snackbar, Hidden } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { MySnackbarContentWrapper } from \"../../utils/snackbar.utils\";\nimport { FavBtn } from \"../../utils/favBtn.js\";\nimport { convertJobHoursToStr, convertJobTypeToStr, convertJobWorksStartToStr, customURL, dateFormat } from \"../../utils/helperFunctions\";\nimport CustomizedDialogs from \"../../utils/customizedDialog\";\nimport Loader from \"../../utils/loader\";\nimport { SEO } from \"../seo/metaInfo.component\";\nimport { mol_page_url } from \"../../constants\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { isRteEmpty } from \"../../containers/validate\";\nimport NotFoundPage from \"../../utils/notFoundPage\";\n\nconst styles = theme => ({\n  addMargin: {\n    margin: \"20px auto 20px auto\"\n  },\n  backBtnContainer: {\n    margin: \"16px auto\"\n  },\n  backBtnText: {\n    color: theme.palette.secondary.main,\n    \"&:hover\": {\n      textDecoration: \"none\",\n      color: theme.palette.primary.main\n    }\n  },\n  companyImage: {\n    minHeight: 420,\n    maxHeight: 600,\n    maxWidth: \"100%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      minHeight: 190,\n      maxHeight: 190,\n      width: \"100%\"\n    },\n    [theme.breakpoints.only(\"sm\")]: {\n      minHeight: 360,\n      maxHeight: 420,\n      width: \"100%\"\n    }\n  },\n  companyImgFrame: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  companyLogo: {\n    minHeight: 80,\n    minWidth: 150,\n    backgroundSize: \"contain\",\n    backgroundRepeat: \"no-repeat\"\n  },\n  jobDetail: {\n    margin: \"20px 0 50px 0\",\n    padding: \"0 0 50px\",\n    border: \"1px solid lightgray\"\n  },\n  jobDesc: {\n    padding: \"20px 40px\"\n  },\n  additionalInfo: {\n    padding: \"10px 40px\"\n  },\n  sourceInfo: {\n    padding: \"10px 40px\",\n    float: \"right\"\n  },\n  metaData: {\n    color: theme.palette.secondary.main\n  },\n  metaDataTitle: {\n    color: theme.palette.primary.main\n  },\n  ctaBtn: {\n    marginBottom: 20,\n    [theme.breakpoints.up(\"md\")]: {\n      justifyContent: \"flex-end\",\n      marginBottom: 50\n    }\n  }\n});\n\nconst JobDetailsComponent = _ref => {\n  let {\n    jobDetails,\n    workStart,\n    toggleFavoriteJobs,\n    favBtnstatus,\n    showSuccessSnackbar,\n    showFailedSnackbar,\n    closeSnackbar,\n    showDialog,\n    showSpinner,\n    classes,\n    changePagination\n  } = _ref;\n  const [jobsToRender, setJobsToRender] = useState([]);\n  const {\n    id\n  } = useSelector(state => state.jobs);\n  const [dateOfApplication, setDateOfApplication] = useState();\n  const [address, setAddress] = useState(); // const [urlToApplyJob, setUrlToApplyJob] = useState()\n\n  const [jobDuration, setJobDuration] = useState(['Valid until further notice', 'Temporary']);\n  const [jobType, setJobType] = useState(['shift work', 'Evening and weekend work', '']);\n  useEffect(() => {\n    axios.get(`https://localhost:7262/jobsEn/${id}`).then(res => {\n      setJobsToRender(res.data);\n      setDateOfApplication(dateFormat(res.data.dateOfApplication));\n      setAddress(res.data.jobPostAddress.address);\n      setJobDuration(res.data.isPermanentPlace[0]);\n      setJobType(res.data.isNightShift[1]); // setUrlToApplyJob(res.data.url)\n    });\n  }, []);\n  const {\n    t\n  } = useTranslation(\"jobDetails\", \"jobhours\", \"jobtype\");\n  const heroImage = jobsToRender.logo && jobsToRender.logo[0].path;\n  const title = `${jobsToRender === null || jobsToRender === void 0 ? void 0 : jobsToRender.jobName} - ${jobsToRender === null || jobsToRender === void 0 ? void 0 : jobsToRender.companyName} | Avoimet tyÃ¶paikat`;\n  const selectedPage = 1;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SEO, {\n    title: title,\n    location: jobsToRender === null || jobsToRender === void 0 ? void 0 : jobsToRender.url,\n    heroImage: jobsToRender === null || jobsToRender === void 0 ? void 0 : jobsToRender.logo // Incase we want to use post specific image..Right now, we are using same default image for all posts as marketing wanted.\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.addMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.backBtnContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    onClick: () => changePagination(false),\n    to: {\n      pathname: \"/tyopaikat\"\n    },\n    className: classes.backBtnText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }), \" \", t(\"backToJobList\"))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"ad_title_1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 19\n    }\n  }, `${jobsToRender.jobName},${address}`), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: classes.metaDataTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 23\n    }\n  }, t(\"applyPeriod\"), \": \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.metaData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 23\n    }\n  }, dateOfApplication))), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: classes.metaDataTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 23\n    }\n  }, t(\"jobtype:jobTypeLabel\"), \": \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.metaData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 23\n    }\n  }, jobDuration))), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: classes.metaDataTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 23\n    }\n  }, t(\"jobhours:jobHoursLabel\"), \": \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.metaData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 23\n    }\n  }, convertJobHoursToStr(t, jobType)))), workStart != null ? /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: classes.metaDataTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 25\n    }\n  }, t(\"jobhours:workStartLabel\"), \": \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.metaData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  }, convertJobWorksStartToStr(t, workStart)))) : null, jobsToRender.status === 2 && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, t(\"inactiveBtn\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, jobsToRender.status === 1 && /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.ctaBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(FavBtn, {\n    isFav: !!jobsToRender.favourite // handleFav={() =>\n    //   toggleFavoriteJobs(\n    //     jobsToRender.companyBusinessId,\n    //     jobsToRender.id,\n    //     !favBtnstatus\n    //   )\n    // }\n    ,\n    btnText: !jobsToRender.favourite ? t(\"addFav\") : t(\"deleteFav\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 23\n    }\n  }, jobsToRender.url ? /*#__PURE__*/React.createElement(\"a\", {\n    className: \"btnLink\",\n    href: jobsToRender.url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(DescriptionIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 35\n    }\n  }, t(\"applyBtn\")))) : /*#__PURE__*/React.createElement(Link, {\n    className: \"btnLink\",\n    to: customURL('link', \"application\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(DescriptionIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 35\n    }\n  }, t(\"applyBtn\")))))))), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: \"15px 0 0 0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: jobsToRender.logo ? classes.logo : null,\n    style: {\n      backgroundImage: `url(${jobsToRender.logo ? jobsToRender.logo[0].path : null})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.jobDetail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.jobDesc,\n    dangerouslySetInnerHTML: {\n      __html: jobsToRender.jobDescription\n    } // To convert rte string into html\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 15\n    }\n  }), jobsToRender.companyDescription && !isRteEmpty(jobsToRender.companyDescription) && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.additionalInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 23\n    }\n  }, t(\"aboutUs\"))), /*#__PURE__*/React.createElement(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: jobDetails.companyDescription\n    } // To convert rte string into html\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 21\n    }\n  })), jobsToRender.companyPageUrl && /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.additionalInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, `${t(\"readMore\")} : `, /*#__PURE__*/React.createElement(\"a\", {\n    href: jobsToRender.companyPageUrl,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 19\n    }\n  }, `${jobsToRender.companyPageUrl}`)), !!(jobsToRender === null || jobsToRender === void 0 ? void 0 : jobsToRender.url) && /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.sourceInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 19\n    }\n  }, t(\"source\"), /*#__PURE__*/React.createElement(\"a\", {\n    href: `${jobsToRender === null || jobsToRender === void 0 ? void 0 : jobsToRender.url}`,\n    className: classes.metaData,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 21\n    }\n  }, t(\"mol\"))))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    sm: 12,\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 15\n    }\n  }, jobDetails.status === 1 && /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    className: classes.ctaBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 23\n    }\n  }, t('shareBtn'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FavBtn, {\n    isFav: !!jobsToRender.favourite,\n    handleFav: () => toggleFavoriteJobs(jobsToRender.companyBusinessId, jobsToRender.id, !favBtnstatus),\n    btnText: !jobsToRender.favourite ? t(\"addFav\") : t(\"deleteFav\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 21\n    }\n  }, jobsToRender.url ? /*#__PURE__*/React.createElement(\"a\", {\n    className: \"btnLink\",\n    href: jobsToRender.url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(DescriptionIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 29\n    }\n  }, t(\"applyBtn\")))) : /*#__PURE__*/React.createElement(Link, {\n    className: \"btnLink\",\n    to: customURL('link', \"application\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(DescriptionIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 29\n    }\n  }, t(\"applyBtn\"))))))))), \")\", /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    open: showSuccessSnackbar,\n    autoHideDuration: 2000,\n    onClose: () => {\n      closeSnackbar();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper, {\n    variant: \"success\",\n    message: t(\"successMsg\"),\n    onClose: () => {\n      closeSnackbar();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: \"bottom\",\n      horizontal: \"center\"\n    },\n    open: showFailedSnackbar,\n    autoHideDuration: 2000,\n    onClose: () => {\n      closeSnackbar();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper, {\n    onClose: () => {\n      closeSnackbar();\n    },\n    variant: \"error\",\n    message: t(\"failedMsg\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(CustomizedDialogs, {\n    showDialog: showDialog,\n    dialogText: t(\"loginText\"),\n    loginModal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 11\n    }\n  }));\n};\n\nexport default withStyles(styles)(JobDetailsComponent);","map":{"version":3,"names":["React","useEffect","useState","Button","Grid","Divider","Snackbar","Hidden","withStyles","useTranslation","Link","DescriptionIcon","ArrowBackIosIcon","MySnackbarContentWrapper","FavBtn","convertJobHoursToStr","convertJobTypeToStr","convertJobWorksStartToStr","customURL","dateFormat","CustomizedDialogs","Loader","SEO","mol_page_url","axios","useSelector","isRteEmpty","NotFoundPage","styles","theme","addMargin","margin","backBtnContainer","backBtnText","color","palette","secondary","main","textDecoration","primary","companyImage","minHeight","maxHeight","maxWidth","breakpoints","down","width","only","companyImgFrame","display","alignItems","justifyContent","companyLogo","minWidth","backgroundSize","backgroundRepeat","jobDetail","padding","border","jobDesc","additionalInfo","sourceInfo","float","metaData","metaDataTitle","ctaBtn","marginBottom","up","JobDetailsComponent","jobDetails","workStart","toggleFavoriteJobs","favBtnstatus","showSuccessSnackbar","showFailedSnackbar","closeSnackbar","showDialog","showSpinner","classes","changePagination","jobsToRender","setJobsToRender","id","state","jobs","dateOfApplication","setDateOfApplication","address","setAddress","jobDuration","setJobDuration","jobType","setJobType","get","then","res","data","jobPostAddress","isPermanentPlace","isNightShift","t","heroImage","logo","path","title","jobName","companyName","selectedPage","url","pathname","status","favourite","marginLeft","backgroundImage","__html","jobDescription","companyDescription","companyPageUrl","companyBusinessId","vertical","horizontal"],"sources":["C:/Users/shuli/OneDrive/Desktop/Work/JobportalN/JobPortalEE/src/components/jobs/jobDetails.component.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Divider, Snackbar, Hidden } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Link } from \"react-router-dom\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { MySnackbarContentWrapper } from \"../../utils/snackbar.utils\";\r\nimport { FavBtn } from \"../../utils/favBtn.js\";\r\nimport {\r\n  convertJobHoursToStr,\r\n  convertJobTypeToStr,\r\n  convertJobWorksStartToStr,\r\n  customURL,\r\n  dateFormat,\r\n} from \"../../utils/helperFunctions\";\r\nimport CustomizedDialogs from \"../../utils/customizedDialog\";\r\nimport Loader from \"../../utils/loader\";\r\nimport { SEO } from \"../seo/metaInfo.component\";\r\nimport { mol_page_url } from \"../../constants\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { isRteEmpty } from \"../../containers/validate\";\r\nimport NotFoundPage from \"../../utils/notFoundPage\";\r\n\r\nconst styles = (theme) => ({\r\n  addMargin: {\r\n    margin: \"20px auto 20px auto\",\r\n  },\r\n  backBtnContainer: {\r\n    margin: \"16px auto\",\r\n  },\r\n  backBtnText: {\r\n    color: theme.palette.secondary.main,\r\n    \"&:hover\": {\r\n      textDecoration: \"none\",\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n\r\n  companyImage: {\r\n    minHeight: 420,\r\n    maxHeight: 600,\r\n    maxWidth: \"100%\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      minHeight: 190,\r\n      maxHeight: 190,\r\n      width: \"100%\",\r\n    },\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      minHeight: 360,\r\n      maxHeight: 420,\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  companyImgFrame: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  companyLogo: {\r\n    minHeight: 80,\r\n    minWidth: 150,\r\n    backgroundSize: \"contain\",\r\n    backgroundRepeat: \"no-repeat\",\r\n  },\r\n  jobDetail: {\r\n    margin: \"20px 0 50px 0\",\r\n    padding: \"0 0 50px\",\r\n    border: \"1px solid lightgray\",\r\n  },\r\n  jobDesc: {\r\n    padding: \"20px 40px\",\r\n  },\r\n  additionalInfo: {\r\n    padding: \"10px 40px\",\r\n  },\r\n  sourceInfo: {\r\n    padding: \"10px 40px\",\r\n    float: \"right\",\r\n  },\r\n  metaData: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  metaDataTitle: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n\r\n  ctaBtn: {\r\n    marginBottom: 20,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      justifyContent: \"flex-end\",\r\n      marginBottom: 50,\r\n    },\r\n  },\r\n});\r\n\r\nconst JobDetailsComponent = ({\r\n  jobDetails,\r\n  workStart,\r\n  toggleFavoriteJobs,\r\n  favBtnstatus,\r\n  showSuccessSnackbar,\r\n  showFailedSnackbar,\r\n  closeSnackbar,\r\n  showDialog,\r\n  showSpinner,\r\n  classes,\r\n  changePagination,\r\n}) => {\r\n  const [jobsToRender, setJobsToRender] = useState([]);\r\n  const { id } = useSelector((state) => state.jobs);\r\n  const [dateOfApplication, setDateOfApplication] = useState();\r\n  const [address, setAddress] = useState();\r\n // const [urlToApplyJob, setUrlToApplyJob] = useState()\r\n  const [jobDuration, setJobDuration] = useState([\r\n    'Valid until further notice', 'Temporary'\r\n  ]);\r\n  const [jobType, setJobType] = useState([\r\n    'shift work','Evening and weekend work',''\r\n  ])\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://localhost:7262/jobsEn/${id}`).then((res) => {\r\n      setJobsToRender(res.data)\r\n      setDateOfApplication(dateFormat(res.data.dateOfApplication))\r\n      setAddress(res.data.jobPostAddress.address)\r\n      setJobDuration(res.data.isPermanentPlace[0])\r\n      setJobType(res.data.isNightShift[1])\r\n     // setUrlToApplyJob(res.data.url)\r\n    });\r\n  }, []);\r\n\r\n  const { t } = useTranslation(\"jobDetails\", \"jobhours\", \"jobtype\");\r\n  const heroImage = jobsToRender.logo && jobsToRender.logo[0].path;\r\n  const title = `${jobsToRender?.jobName} - ${jobsToRender?.companyName} | Avoimet tyÃ¶paikat`;\r\n  const selectedPage = 1;\r\n  \r\n      return (\r\n        <div>\r\n          <div className=\"container\">\r\n            <SEO\r\n              title={title}\r\n              location={jobsToRender?.url}\r\n              heroImage={jobsToRender?.logo} // Incase we want to use post specific image..Right now, we are using same default image for all posts as marketing wanted.\r\n            />\r\n            <div className={classes.addMargin}>\r\n              <div className={classes.backBtnContainer}>\r\n                <Link\r\n                  onClick={() => changePagination(false)}\r\n                  to={{\r\n                    pathname: \"/tyopaikat\",\r\n                  }}\r\n                  className={classes.backBtnText}\r\n                >\r\n                  <ArrowBackIosIcon /> {t(\"backToJobList\")}\r\n                </Link>\r\n              </div>\r\n              <Grid container spacing={4} alignItems=\"center\">\r\n                <Grid item sm={12} md={7}>\r\n                  <h2 className=\"ad_title_1\">{`${jobsToRender.jobName},${address}`}</h2>\r\n                  <h6>\r\n                    <strong className={classes.metaDataTitle}>\r\n                      <span>{t(\"applyPeriod\")}: </span>\r\n                      <span className={classes.metaData}>\r\n                        {dateOfApplication}\r\n                      </span>\r\n                    </strong>\r\n                  </h6>\r\n                  <h6>\r\n                    <strong className={classes.metaDataTitle}>\r\n                      <span>{t(\"jobtype:jobTypeLabel\")}: </span>\r\n                      <span className={classes.metaData}>\r\n                        {jobDuration}\r\n                      </span>\r\n                    </strong>\r\n                  </h6>\r\n                  <h6>\r\n                    <strong className={classes.metaDataTitle}>\r\n                      <span>{t(\"jobhours:jobHoursLabel\")}: </span>\r\n                      <span className={classes.metaData}>\r\n                        {convertJobHoursToStr(t, jobType)}\r\n                      </span>\r\n                    </strong>\r\n                  </h6>\r\n                  {workStart != null ? (\r\n                    <h6>\r\n                      <strong className={classes.metaDataTitle}>\r\n                        <span>{t(\"jobhours:workStartLabel\")}: </span>\r\n                        <span className={classes.metaData}>\r\n                          {convertJobWorksStartToStr(t, workStart)}\r\n                        </span>\r\n                      </strong>\r\n                    </h6>\r\n                  ) : null}\r\n                  {jobsToRender.status === 2 && (\r\n                    <p style={{ color: \"red\" }}>{t(\"inactiveBtn\")}</p>\r\n                  )}\r\n                </Grid>\r\n                <Grid item sm={12} md={5}>\r\n                  {jobsToRender.status === 1 && (\r\n                    <Grid container spacing={2} className={classes.ctaBtn}>\r\n                      {/* <Grid item>\r\n                        <Button color=\"primary\" variant=\"outlined\">\r\n                          {t(\"shareBtn\")}\r\n                        </Button>src/components/jobs/jobDetails.component.js\r\n                      </Grid> */}\r\n                      <Grid item>\r\n                        <FavBtn\r\n                          isFav={!!jobsToRender.favourite}\r\n                          // handleFav={() =>\r\n                          //   toggleFavoriteJobs(\r\n                          //     jobsToRender.companyBusinessId,\r\n                          //     jobsToRender.id,\r\n                          //     !favBtnstatus\r\n                          //   )\r\n                          // }\r\n                          btnText={\r\n                            !jobsToRender.favourite ? t(\"addFav\") : t(\"deleteFav\")\r\n                          }\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        {jobsToRender.url ? (\r\n                              <a\r\n                                className=\"btnLink\"\r\n                                href={jobsToRender.url}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                              >\r\n                                <Button color=\"primary\" variant=\"contained\">\r\n                                  <DescriptionIcon />\r\n                                  <span style={{ marginLeft: 8 }}>{t(\"applyBtn\")}</span>\r\n                                </Button>\r\n                              </a>\r\n                            ) : (\r\n                              <Link\r\n                                className=\"btnLink\"\r\n                                to={customURL('link', \"application\")}\r\n                              >\r\n                                <Button color=\"primary\" variant=\"contained\">\r\n                                  <DescriptionIcon />\r\n                                  <span style={{ marginLeft: 8 }}>{t(\"applyBtn\")}</span>\r\n                                </Button>\r\n                              </Link>\r\n                            )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Divider style={{ margin: \"15px 0 0 0\" }} />\r\n            </div>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <div\r\n                className={jobsToRender.logo ? classes.logo : null}\r\n                style={{\r\n                  backgroundImage: `url(${\r\n                    jobsToRender.logo ? jobsToRender.logo[0].path : null\r\n                  })`,\r\n                }}\r\n              />\r\n            </Grid>\r\n            <div className={classes.jobDetail}>\r\n              {/* {jobsToRender.logo && (\r\n                <div className={classes.companyImgFrame}>\r\n                  <img\r\n                    src={heroImage}\r\n                    alt=\"company-img\"\r\n                    className={jobsToRender.logo ? classes.companyImage : \"\"}\r\n                  />\r\n                </div>\r\n              )} */}\r\n              <div\r\n                className={classes.jobDesc}\r\n                dangerouslySetInnerHTML={{ __html: jobsToRender.jobDescription }} // To convert rte string into html\r\n              />\r\n              {jobsToRender.companyDescription &&\r\n                !isRteEmpty(jobsToRender.companyDescription) && (\r\n                  <div className={classes.additionalInfo}>\r\n                    <p>\r\n                      <strong>{t(\"aboutUs\")}</strong>\r\n                    </p>\r\n                    <div\r\n                      dangerouslySetInnerHTML={{\r\n                        __html: jobDetails.companyDescription,\r\n                      }} // To convert rte string into html\r\n                    />\r\n                  </div>\r\n                )}\r\n              {jobsToRender.companyPageUrl && (\r\n                <p className={classes.additionalInfo}>\r\n                  {`${t(\"readMore\")} : `}\r\n                  <a\r\n                    href={jobsToRender.companyPageUrl}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                  >\r\n                    {`${jobsToRender.companyPageUrl}`}\r\n                  </a>\r\n                </p>\r\n              )}\r\n              {!!jobsToRender?.url && (\r\n                <p className={classes.sourceInfo}>\r\n                  <em>\r\n                    {t(\"source\")}\r\n                    <a\r\n                      href={`${jobsToRender?.url}`}\r\n                      className={classes.metaData}\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      {t(\"mol\")}\r\n                    </a>\r\n                  </em>\r\n                </p>\r\n              )}\r\n            </div>\r\n            <Grid container spacing={4} alignItems=\"center\">\r\n              <Hidden smDown>\r\n                <Grid item sm={12} md={7} />\r\n              </Hidden>\r\n              <Grid item sm={12} md={5}>\r\n                {jobDetails.status === 1 && (\r\n                  <Grid container spacing={2} className={classes.ctaBtn}>\r\n                    <Grid item>\r\n                      <Button color='primary' variant='outlined'>\r\n                        {t('shareBtn')}\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <FavBtn\r\n                        isFav={!!jobsToRender.favourite}\r\n                        handleFav={() =>\r\n                          toggleFavoriteJobs(\r\n                            jobsToRender.companyBusinessId,\r\n                            jobsToRender.id,\r\n                            !favBtnstatus\r\n                          )\r\n                        }\r\n                        btnText={\r\n                          !jobsToRender.favourite ? t(\"addFav\") : t(\"deleteFav\")\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      {jobsToRender.url ? (\r\n                        <a\r\n                          className=\"btnLink\"\r\n                          href={jobsToRender.url}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                        >\r\n                          <Button color=\"primary\" variant=\"contained\">\r\n                            <DescriptionIcon />\r\n                            <span style={{ marginLeft: 8 }}>{t(\"applyBtn\")}</span>\r\n                          </Button>\r\n                        </a>\r\n                      ) : (\r\n                        <Link\r\n                          className=\"btnLink\"\r\n                          to={customURL('link', \"application\")}\r\n                        >\r\n                          <Button color=\"primary\" variant=\"contained\">\r\n                            <DescriptionIcon />\r\n                            <span style={{ marginLeft: 8 }}>{t(\"applyBtn\")}</span>\r\n                          </Button>\r\n                        </Link>\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          )\r\n          {/* Display structure for mol ads --Copy code from molAds.js if needed in future otherwise delete that file */}\r\n          {/* <Loader showSpinner={showSpinner} /> */}\r\n          <Snackbar\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\",\r\n            }}\r\n            open={showSuccessSnackbar}\r\n            autoHideDuration={2000}\r\n            onClose={() => {\r\n              closeSnackbar();\r\n            }}\r\n          >\r\n            <MySnackbarContentWrapper\r\n              variant=\"success\"\r\n              message={t(\"successMsg\")}\r\n              onClose={() => {\r\n                closeSnackbar();\r\n              }}\r\n            />\r\n          </Snackbar>\r\n          <Snackbar\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\",\r\n            }}\r\n            open={showFailedSnackbar}\r\n            autoHideDuration={2000}\r\n            onClose={() => {\r\n              closeSnackbar();\r\n            }}\r\n          >\r\n            <MySnackbarContentWrapper\r\n              onClose={() => {\r\n                closeSnackbar();\r\n              }}\r\n              variant=\"error\"\r\n              message={t(\"failedMsg\")}\r\n            />\r\n          </Snackbar>\r\n          <CustomizedDialogs\r\n            showDialog={showDialog}\r\n            dialogText={t(\"loginText\")}\r\n            loginModal\r\n          />\r\n        </div>\r\n      );\r\n    };\r\n  \r\nexport default withStyles(styles)(JobDetailsComponent);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}