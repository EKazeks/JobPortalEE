{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shuli\\\\OneDrive\\\\Desktop\\\\Work\\\\JobportalN\\\\JobPortalEE\\\\src\\\\components\\\\companies\\\\ads\\\\adDetails.component.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Divider, Grid, Button, Snackbar } from \"@material-ui/core\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport store from \"../../../store\";\nimport { customURL } from \"../../../utils/helperFunctions\";\nimport { updateAdvertisement, changeCampaign, populateVacancyForm, changeActivePostToInactive, closeSnackbar } from \"../../../actions\";\nimport { MySnackbarContentWrapper } from \"../../../utils/snackbar.utils\";\nimport { customTranslateCampaign, customTranslateStatus } from \"../../../utils/customTranslate\";\nimport Loader from \"../../../utils/loader\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst styles = theme => ({\n  titleMargin: {\n    margin: \"20px auto 24px auto\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 4\n    }\n  },\n  companyLogo: {\n    minHeight: 80,\n    minWidth: 150,\n    backgroundSize: \"contain\",\n    backgroundRepeat: \"no-repeat\",\n    marginBottom: 6\n  },\n  companyImgFrame: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  companyImage: {\n    minHeight: 420,\n    maxHeight: 600,\n    maxWidth: \"100%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      minHeight: 190,\n      maxHeight: 190,\n      width: \"100%\"\n    },\n    [theme.breakpoints.only(\"sm\")]: {\n      minHeight: 360,\n      maxHeight: 420,\n      width: \"100%\"\n    }\n  },\n  adDetail: {\n    margin: \"0px 0 50px 0\",\n    padding: \"0 0 50px\",\n    border: \"1px solid lightgray\"\n  },\n  jobDesc: {\n    padding: 40\n  },\n  ctaBtn: {\n    marginBottom: 50,\n    [theme.breakpoints.up(\"md\")]: {\n      justifyContent: \"flex-end\"\n    }\n  },\n  backBtnText: {\n    color: theme.palette.secondary.main,\n    \"&:hover\": {\n      textDecoration: \"none\",\n      color: theme.palette.primary.main\n    }\n  },\n  backBtnContainer: {\n    marginTop: 2\n  },\n  campaignType: {\n    marginRight: 16\n  }\n});\n\nconst AdDetails = _ref => {\n  let {\n    classes,\n    viewSelectedAd,\n    userRole,\n    showSuccessSnackbar,\n    showFailedSnackbar,\n    showSpinner,\n    selectedPage,\n    campaignsList,\n    props\n  } = _ref;\n  const {\n    t\n  } = useTranslation(\"adDetails\");\n  const dispatch = useDispatch();\n  const {\n    jobPostNumber\n  } = useSelector(state => state.jobs);\n  const [jobsToRender, setJobsToRender] = useState([]);\n  selectedPage = 1;\n  useEffect(() => {\n    axios.get(`https://localhost:7262/jobsEn/${jobPostNumber}`).then(res => {\n      setJobsToRender(res.data);\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <div>\n    //     <Grid>\n    //       <div>\n    //         <h1>\n    //           {jobsToRender.jobPostNumber}\n    //           {jobsToRender.jobName}\n    //           {console.log(jobsToRender.jobPostNumber)}\n    //         </h1>\n    //       </div>\n    //     </Grid>\n    //   </div>\n    //   <h1>Test</h1>\n    // </div>\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      key: jobsToRender.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.backBtnContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: userRole === \"company\" ? \"/omat-ilmoitukseni\" : \"/tyopaikat\",\n      className: classes.backBtnText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 13\n      }\n    }), \" \", t(\"jobs:backButton\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.titleMargin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"ad_title_1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, jobsToRender.jobName, \",\", jobsToRender.jobPostAsukohaAddress.map(item => {\n      item.address;\n    })), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"ad_title_2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, `${jobsToRender.status === 0 ? t(\"draft\") : jobsToRender.status === 1 ? t(\"active\") : t(\"inactive\")}`, \":\"), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, jobsToRender.dateOfApplication))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      className: classes.ctaBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, jobsToRender.campaignType === \"Free\" ? /*#__PURE__*/React.createElement(Link, {\n      to: \"/tyopaikkailmoitus/\",\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => {\n        store.dispatch(populateVacancyForm(jobsToRender.jobPostNumber, false));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 23\n      }\n    }, t(\"common:copyBtn\"))) : jobsToRender.campaignType === \"Free\" ? /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => {\n        // alert('updateJOBPOSTSTATUS');\n        store.dispatch(changeActivePostToInactive(userRole === \"admin\" ? `${jobsToRender.jobPostNumber}admin${jobsToRender.companyBusinessId}` : jobsToRender.jobPostNumber));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    }, t(\"common:inactiveBtn\")) : \"\"), jobsToRender.campaignType === \"Free\" && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/tyopaikkailmoitus/${jobsToRender.jobPostNumber}`,\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => store.dispatch(updateAdvertisement()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 23\n      }\n    }, t(\"editBtn\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }, jobsToRender.jobName && /*#__PURE__*/React.createElement(Link, {\n      to: customURL(jobsToRender.url, \"campaign\"),\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => store.dispatch(changeCampaign(campaignsList.find(campaign => campaign.id === jobsToRender.campaignType))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 23\n      }\n    }, t(\"boostBtn\"))))))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.addMargin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.campaignType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 19\n      }\n    }, t(\"postType\"), \": \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 19\n      }\n    }, jobsToRender.campaignType)), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 19\n      }\n    }, t(\"postStatus\"), \": \"), `Active`))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 4,\n      style: {\n        display: \"flex\",\n        justifyContent: \"flex-end\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.companyLogo,\n      style: {\n        backgroundImage: `url(${jobsToRender.logo ? jobsToRender.logo[0].path : \"\"})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.adDetail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.companyImgFrame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: jobsToRender.logo && jobsToRender.logo[0].path,\n      alt: jobsToRender.logo ? `${jobsToRender.jobName} Company-Image` : \"\",\n      className: jobsToRender.company_image ? classes.companyImage : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.jobDesc,\n      dangerouslySetInnerHTML: {\n        __html: jobsToRender.jobDescription\n      } // To convert rte string into html\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      className: classes.ctaBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 15\n      }\n    }, jobsToRender.campaignType === \"Free\" ? /*#__PURE__*/React.createElement(Link, {\n      to: \"/tyopaikkailmoitus/\",\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => {\n        store.dispatch(populateVacancyForm(jobsToRender.jobPostNumber, false));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }\n    }, t(\"common:copyBtn\"))) : jobsToRender.campaignType === \"Free\" ? /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => {\n        store.dispatch(changeActivePostToInactive(userRole === \"admin\" ? `${jobsToRender.jobPostNumber}admin${jobsToRender.companyBusinessId}` : jobsToRender.jobPostNumber));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 19\n      }\n    }, t(\"common:inactiveBtn\")) : \"\"), jobsToRender.campaignType === \"Free\" && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/tyopaikkailmoitus/${jobsToRender.jobPostNumber}`,\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => store.dispatch(updateAdvertisement()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 21\n      }\n    }, t(\"editBtn\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 15\n      }\n    }, jobsToRender.jobName && /*#__PURE__*/React.createElement(Link, {\n      to: customURL(jobsToRender.url, \"campaign\"),\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => store.dispatch(changeCampaign(campaignsList.find(campaign => campaign.id === jobsToRender.campaign_id))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 21\n      }\n    }, t(\"boostBtn\")))))))), /*#__PURE__*/React.createElement(Loader, {\n      showSpinner: showSpinner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      open: showSuccessSnackbar,\n      autoHideDuration: 2000,\n      onClose: () => store.dispatch(closeSnackbar()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper, {\n      onClose: () => store.dispatch(closeSnackbar()),\n      variant: \"success\",\n      message: t(\"successMsg\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      open: showFailedSnackbar,\n      autoHideDuration: 2000,\n      onClose: () => store.dispatch(closeSnackbar()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper, {\n      onClose: () => store.dispatch(closeSnackbar()),\n      variant: \"error\",\n      message: t(\"failedMsg\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }\n    })))\n  );\n};\n\nexport default withStyles(styles)(AdDetails);","map":{"version":3,"names":["React","useEffect","useState","withStyles","Divider","Grid","Button","Snackbar","ArrowBackIosIcon","Link","useTranslation","store","customURL","updateAdvertisement","changeCampaign","populateVacancyForm","changeActivePostToInactive","closeSnackbar","MySnackbarContentWrapper","customTranslateCampaign","customTranslateStatus","Loader","axios","useDispatch","useSelector","styles","theme","titleMargin","margin","breakpoints","down","marginTop","companyLogo","minHeight","minWidth","backgroundSize","backgroundRepeat","marginBottom","companyImgFrame","display","alignItems","justifyContent","companyImage","maxHeight","maxWidth","width","only","adDetail","padding","border","jobDesc","ctaBtn","up","backBtnText","color","palette","secondary","main","textDecoration","primary","backBtnContainer","campaignType","marginRight","AdDetails","classes","viewSelectedAd","userRole","showSuccessSnackbar","showFailedSnackbar","showSpinner","selectedPage","campaignsList","props","t","dispatch","jobPostNumber","state","jobs","jobsToRender","setJobsToRender","get","then","res","data","id","jobName","jobPostAsukohaAddress","map","item","address","status","dateOfApplication","companyBusinessId","url","find","campaign","addMargin","backgroundImage","logo","path","company_image","__html","jobDescription","campaign_id","vertical","horizontal"],"sources":["C:/Users/shuli/OneDrive/Desktop/Work/JobportalN/JobPortalEE/src/components/companies/ads/adDetails.component.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Divider, Grid, Button, Snackbar } from \"@material-ui/core\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport store from \"../../../store\";\r\nimport { customURL } from \"../../../utils/helperFunctions\";\r\nimport {\r\n  updateAdvertisement,\r\n  changeCampaign,\r\n  populateVacancyForm,\r\n  changeActivePostToInactive,\r\n  closeSnackbar,\r\n} from \"../../../actions\";\r\nimport { MySnackbarContentWrapper } from \"../../../utils/snackbar.utils\";\r\nimport {\r\n  customTranslateCampaign,\r\n  customTranslateStatus,\r\n} from \"../../../utils/customTranslate\";\r\nimport Loader from \"../../../utils/loader\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst styles = (theme) => ({\r\n  titleMargin: {\r\n    margin: \"20px auto 24px auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: 4,\r\n    },\r\n  },\r\n  companyLogo: {\r\n    minHeight: 80,\r\n    minWidth: 150,\r\n    backgroundSize: \"contain\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    marginBottom: 6,\r\n  },\r\n  companyImgFrame: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  companyImage: {\r\n    minHeight: 420,\r\n    maxHeight: 600,\r\n    maxWidth: \"100%\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      minHeight: 190,\r\n      maxHeight: 190,\r\n      width: \"100%\",\r\n    },\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      minHeight: 360,\r\n      maxHeight: 420,\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  adDetail: {\r\n    margin: \"0px 0 50px 0\",\r\n    padding: \"0 0 50px\",\r\n    border: \"1px solid lightgray\",\r\n  },\r\n  jobDesc: {\r\n    padding: 40,\r\n  },\r\n  ctaBtn: {\r\n    marginBottom: 50,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      justifyContent: \"flex-end\",\r\n    },\r\n  },\r\n  backBtnText: {\r\n    color: theme.palette.secondary.main,\r\n    \"&:hover\": {\r\n      textDecoration: \"none\",\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n  backBtnContainer: {\r\n    marginTop: 2,\r\n  },\r\n  campaignType: {\r\n    marginRight: 16,\r\n  },\r\n});\r\n\r\nconst AdDetails = ({\r\n  classes,\r\n  viewSelectedAd,\r\n  userRole,\r\n  showSuccessSnackbar,\r\n  showFailedSnackbar,\r\n  showSpinner,\r\n  selectedPage,\r\n  campaignsList,\r\n  props,\r\n}) => {\r\n  const { t } = useTranslation(\"adDetails\");\r\n  const dispatch = useDispatch();\r\n  const { jobPostNumber } = useSelector((state) => state.jobs);\r\n  const [jobsToRender, setJobsToRender] = useState([]);\r\n  selectedPage = 1;\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://localhost:7262/jobsEn/${jobPostNumber}`).then((res) => {\r\n      setJobsToRender(res.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    // <div>\r\n    //   <div>\r\n    //     <Grid>\r\n    //       <div>\r\n    //         <h1>\r\n    //           {jobsToRender.jobPostNumber}\r\n    //           {jobsToRender.jobName}\r\n    //           {console.log(jobsToRender.jobPostNumber)}\r\n    //         </h1>\r\n    //       </div>\r\n    //     </Grid>\r\n    //   </div>\r\n\r\n    //   <h1>Test</h1>\r\n    // </div>\r\n    <div>\r\n      <div className=\"container\" key={jobsToRender.id}>\r\n        <div className={classes.backBtnContainer}>\r\n          <Link\r\n            to={userRole === \"company\" ? \"/omat-ilmoitukseni\" : \"/tyopaikat\"}\r\n            className={classes.backBtnText}\r\n          >\r\n            <ArrowBackIosIcon /> {t(\"jobs:backButton\")}\r\n          </Link>\r\n        </div>\r\n        <div className={classes.titleMargin}>\r\n          <Grid container>\r\n            <Grid item sm={12} md={7}>\r\n              <h2 className=\"ad_title_1\">\r\n                {/* {`${jobsToRender.jobName}, ${jobsToRender.jobPostAsukohaAddress.map(address => {\r\n                    {\r\n                      if (address.address[17]) {\r\n                        return address.address\r\n                          .split(',')\r\n                          .splice(1)\r\n                          .toString();\r\n                      } else return address.address;\r\n                    }\r\n                  })}`} */}\r\n                {jobsToRender.jobName}, \r\n                {jobsToRender.jobPostAsukohaAddress.map(item => {item.address})}\r\n              </h2>\r\n              <h6 className=\"ad_title_2\">\r\n                <strong style={{ marginRight: 10 }}>\r\n                  {`${\r\n                    jobsToRender.status === 0\r\n                      ? t(\"draft\")\r\n                      : jobsToRender.status === 1\r\n                      ? t(\"active\")\r\n                      : t(\"inactive\")\r\n                  }`}\r\n                  :\r\n                </strong>\r\n                <strong>{jobsToRender.dateOfApplication}</strong>\r\n              </h6>\r\n            </Grid>\r\n            <Grid item sm={12} md={5}>\r\n              <Grid container spacing={2} className={classes.ctaBtn}>\r\n                <Grid item>\r\n                  {/* If post is active post, show Inactive btn. If it is inactive post, show copy btn in Addetails */}\r\n                  {jobsToRender.campaignType === \"Free\" ? (\r\n                    <Link to=\"/tyopaikkailmoitus/\" className=\"btnLink\">\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          store.dispatch(\r\n                            populateVacancyForm(\r\n                              jobsToRender.jobPostNumber,\r\n                              false\r\n                            )\r\n                          );\r\n                        }}\r\n                      >\r\n                        {t(\"common:copyBtn\")}\r\n                      </Button>\r\n                    </Link>\r\n                  ) : jobsToRender.campaignType === \"Free\" ? (\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        // alert('updateJOBPOSTSTATUS');\r\n                        store.dispatch(\r\n                          changeActivePostToInactive(\r\n                            userRole === \"admin\"\r\n                              ? `${jobsToRender.jobPostNumber}admin${jobsToRender.companyBusinessId}`\r\n                              : jobsToRender.jobPostNumber\r\n                          )\r\n                        );\r\n                      }}\r\n                    >\r\n                      {t(\"common:inactiveBtn\")}\r\n                    </Button>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </Grid>\r\n                {jobsToRender.campaignType === \"Free\" && (\r\n                  <Grid item>\r\n                    <Link\r\n                      to={`/tyopaikkailmoitus/${jobsToRender.jobPostNumber}`}\r\n                      className=\"btnLink\"\r\n                    >\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={() => store.dispatch(updateAdvertisement())}\r\n                      >\r\n                        {t(\"editBtn\")}\r\n                      </Button>\r\n                    </Link>\r\n                  </Grid>\r\n                )}\r\n                <Grid item>\r\n                  {/* To avoid errors when viewSelectedAd is empty array */}\r\n                  {jobsToRender.jobName && (\r\n                    <Link\r\n                      to={customURL(jobsToRender.url, \"campaign\")}\r\n                      className=\"btnLink\"\r\n                    >\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={() =>\r\n                          store.dispatch(\r\n                            changeCampaign(\r\n                              campaignsList.find(\r\n                                (campaign) =>\r\n                                  campaign.id === jobsToRender.campaignType\r\n                              )\r\n                            )\r\n                          )\r\n                        }\r\n                      >\r\n                        {t(\"boostBtn\")}\r\n                      </Button>\r\n                    </Link>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n          <Divider />\r\n        </div>\r\n        <div className={classes.addMargin}>\r\n          <Grid container>\r\n            <Grid item sm={8}>\r\n              <div className={classes.campaignType}>\r\n                <h6>\r\n                  <strong>{t(\"postType\")}: </strong>\r\n                  {/* <span>{customTranslateCampaign(item.campaignType)}</span> */}\r\n                  <span>{jobsToRender.campaignType}</span>\r\n                </h6>\r\n                <h6>\r\n                  <strong>{t(\"postStatus\")}: </strong>\r\n                  {/* {customTranslateStatus(item.campaignType)} */}\r\n                  {`Active`}\r\n                </h6>\r\n              </div>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              sm={4}\r\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n            >\r\n              <div\r\n                className={classes.companyLogo}\r\n                style={{\r\n                  backgroundImage: `url(${\r\n                    jobsToRender.logo ? jobsToRender.logo[0].path : \"\"\r\n                  })`,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        <div className={classes.adDetail}>\r\n          <div className={classes.companyImgFrame}>\r\n            <img\r\n              src={jobsToRender.logo && jobsToRender.logo[0].path}\r\n              alt={\r\n                jobsToRender.logo ? `${jobsToRender.jobName} Company-Image` : \"\"\r\n              }\r\n              className={jobsToRender.company_image ? classes.companyImage : \"\"}\r\n            />\r\n          </div>\r\n          <div\r\n            className={classes.jobDesc}\r\n            dangerouslySetInnerHTML={{\r\n              __html: jobsToRender.jobDescription,\r\n            }} // To convert rte string into html\r\n          />\r\n        </div>\r\n        <Grid container>\r\n          <Grid item sm={12} md={6} />\r\n          <Grid item sm={12} md={6}>\r\n            <Grid container spacing={2} className={classes.ctaBtn}>\r\n              <Grid item>\r\n                {/* If post is active post, show Inactive btn. If it is inactive post, show copy btn in Addetails */}\r\n                {jobsToRender.campaignType === \"Free\" ? (\r\n                  <Link to=\"/tyopaikkailmoitus/\" className=\"btnLink\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        store.dispatch(\r\n                          populateVacancyForm(jobsToRender.jobPostNumber, false)\r\n                        );\r\n                      }}\r\n                    >\r\n                      {t(\"common:copyBtn\")}\r\n                    </Button>\r\n                  </Link>\r\n                ) : jobsToRender.campaignType === \"Free\" ? (\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    onClick={() => {\r\n                      store.dispatch(\r\n                        changeActivePostToInactive(\r\n                          userRole === \"admin\"\r\n                            ? `${jobsToRender.jobPostNumber}admin${jobsToRender.companyBusinessId}`\r\n                            : jobsToRender.jobPostNumber\r\n                        )\r\n                      );\r\n                    }}\r\n                  >\r\n                    {t(\"common:inactiveBtn\")}\r\n                  </Button>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Grid>\r\n              {jobsToRender.campaignType === \"Free\" && (\r\n                <Grid item>\r\n                  <Link\r\n                    to={`/tyopaikkailmoitus/${jobsToRender.jobPostNumber}`}\r\n                    className=\"btnLink\"\r\n                  >\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      onClick={() => store.dispatch(updateAdvertisement())}\r\n                    >\r\n                      {t(\"editBtn\")}\r\n                    </Button>\r\n                  </Link>\r\n                </Grid>\r\n              )}\r\n              <Grid item>\r\n                {/* To avoid errors when viewSelectedAd is empty array */}\r\n                {jobsToRender.jobName && (\r\n                  <Link\r\n                    to={customURL(jobsToRender.url, \"campaign\")}\r\n                    className=\"btnLink\"\r\n                  >\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={() =>\r\n                        store.dispatch(\r\n                          changeCampaign(\r\n                            campaignsList.find(\r\n                              (campaign) =>\r\n                                campaign.id === jobsToRender.campaign_id\r\n                            )\r\n                          )\r\n                        )\r\n                      }\r\n                    >\r\n                      {t(\"boostBtn\")}\r\n                    </Button>\r\n                  </Link>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <Loader showSpinner={showSpinner} />\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        open={showSuccessSnackbar}\r\n        autoHideDuration={2000}\r\n        onClose={() => store.dispatch(closeSnackbar())}\r\n      >\r\n        <MySnackbarContentWrapper\r\n          onClose={() => store.dispatch(closeSnackbar())}\r\n          variant=\"success\"\r\n          message={t(\"successMsg\")}\r\n        />\r\n      </Snackbar>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        open={showFailedSnackbar}\r\n        autoHideDuration={2000}\r\n        onClose={() => store.dispatch(closeSnackbar())}\r\n      >\r\n        <MySnackbarContentWrapper\r\n          onClose={() => store.dispatch(closeSnackbar())}\r\n          variant=\"error\"\r\n          message={t(\"failedMsg\")}\r\n        />\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(AdDetails);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}