{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shuli\\\\OneDrive\\\\Desktop\\\\Work\\\\JobportalN\\\\JobPortalEE\\\\src\\\\utils\\\\dropzone.js\";\nimport React from 'react';\nimport Dropzone from 'react-dropzone';\nimport { connect } from 'react-redux';\nimport { Button } from '@material-ui/core';\nimport i18next from 'i18next';\nimport Placeholder from './placeholder';\nimport store from '../store';\nimport { retrieveImageInfo, retrieveLogoInfo, retrieveProfilePicInfo, retrieveDocumentInfo } from '../actions';\n\nconst renderDropzoneField = function (_ref) {\n  let {\n    input,\n    name,\n    imagefile,\n    btnText,\n    cvBtnLabel,\n    isLogo,\n    isImage,\n    isProfilePic,\n    isCV,\n    CV,\n    uploadedDocument,\n    meta: {\n      touched,\n      error\n    }\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    multiple: true,\n    name: name,\n    accept: !isCV ? 'image/png,image/jpg,image/jpeg' : '.doc,.docx,.pdf',\n    onDrop: filesToUpload => {\n      const file = filesToUpload[0];\n\n      if (!!file) {\n        if (isImage) {\n          if (file.size > 2210000) {\n            alert(i18next.t('dropzone:fileMaxSizeMsg'));\n            return;\n          } else {\n            store.dispatch(retrieveImageInfo(file));\n          }\n        } else if (isLogo) {\n          if (file.size > 2210000) {\n            alert(i18next.t('dropzone:fileMaxSizeMsg'));\n            return;\n          } else {\n            store.dispatch(retrieveLogoInfo(file));\n          }\n        } else if (isProfilePic) {\n          if (file.size > 2210000) {\n            alert(i18next.t('dropzone:fileMaxSizeMsg'));\n            return;\n          } else {\n            store.dispatch(retrieveProfilePicInfo(file));\n          }\n        } else {\n          store.dispatch(retrieveDocumentInfo(file));\n        }\n\n        const reader = new FileReader();\n\n        reader.onload = event => {\n          input.onChange(event.target.result);\n        };\n\n        reader.readAsDataURL(file);\n      } else {\n        alert(!isCV ? i18next.t('dropzone:invalidImage') : i18next.t('dropzone:invalidCV'));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, _ref2 => {\n    let {\n      getRootProps,\n      getInputProps\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    })), isCV ? !uploadedDocument.name ? /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }, cvBtnLabel) : CV !== '' ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      style: {\n        marginRight: 5\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, cvBtnLabel), uploadedDocument.name) : /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, cvBtnLabel) : /*#__PURE__*/React.createElement(Placeholder, {\n      error: error,\n      touched: touched,\n      btnText: btnText,\n      imagefile: imagefile,\n      isLogo: isLogo,\n      isImage: isImage,\n      isProfilePic: isProfilePic,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    })));\n  }));\n};\n\nexport default connect()(renderDropzoneField);","map":{"version":3,"names":["React","Dropzone","connect","Button","i18next","Placeholder","store","retrieveImageInfo","retrieveLogoInfo","retrieveProfilePicInfo","retrieveDocumentInfo","renderDropzoneField","input","name","imagefile","btnText","cvBtnLabel","isLogo","isImage","isProfilePic","isCV","CV","uploadedDocument","meta","touched","error","filesToUpload","file","size","alert","t","dispatch","reader","FileReader","onload","event","onChange","target","result","readAsDataURL","getRootProps","getInputProps","marginRight"],"sources":["C:/Users/shuli/OneDrive/Desktop/Work/JobportalN/JobPortalEE/src/utils/dropzone.js"],"sourcesContent":["import React from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from '@material-ui/core';\r\nimport i18next from 'i18next';\r\nimport Placeholder from './placeholder';\r\nimport store from '../store';\r\nimport { retrieveImageInfo, retrieveLogoInfo, retrieveProfilePicInfo, retrieveDocumentInfo } from '../actions';\r\n\r\nconst renderDropzoneField = function({\r\n  input,\r\n  name,\r\n  imagefile,\r\n  btnText,\r\n  cvBtnLabel,\r\n  isLogo,\r\n  isImage,\r\n  isProfilePic,\r\n  isCV,\r\n  CV,\r\n  uploadedDocument,\r\n  meta: { touched, error },\r\n}) {\r\n  return (\r\n    <div>\r\n      <Dropzone\r\n        multiple\r\n        name={name}\r\n        accept={!isCV ? 'image/png,image/jpg,image/jpeg' : '.doc,.docx,.pdf'}\r\n        onDrop={filesToUpload => {\r\n          const file = filesToUpload[0];\r\n          if (!!file) {\r\n            if (isImage) {\r\n              if (file.size > 2210000) {\r\n                alert(i18next.t('dropzone:fileMaxSizeMsg'));\r\n                return;\r\n              } else {\r\n                store.dispatch(retrieveImageInfo(file));\r\n              }\r\n            } else if (isLogo) {\r\n              if (file.size > 2210000) {\r\n                alert(i18next.t('dropzone:fileMaxSizeMsg'));\r\n                return;\r\n              } else {\r\n                store.dispatch(retrieveLogoInfo(file));\r\n              }\r\n            } else if (isProfilePic) {\r\n              if (file.size > 2210000) {\r\n                alert(i18next.t('dropzone:fileMaxSizeMsg'));\r\n                return;\r\n              } else {\r\n                store.dispatch(retrieveProfilePicInfo(file));\r\n              }\r\n            } else {\r\n              store.dispatch(retrieveDocumentInfo(file));\r\n            }\r\n            const reader = new FileReader();\r\n            reader.onload = event => {\r\n              input.onChange(event.target.result);\r\n            };\r\n            reader.readAsDataURL(file);\r\n          } else {\r\n            alert(!isCV ? i18next.t('dropzone:invalidImage') : i18next.t('dropzone:invalidCV'));\r\n          }\r\n        }}\r\n      >\r\n        {({ getRootProps, getInputProps }) => (\r\n          <section>\r\n            <div {...getRootProps()}>\r\n              <input {...getInputProps()} />\r\n\r\n              {isCV ? (\r\n                !uploadedDocument.name ? (\r\n                  <Button variant=\"outlined\">{cvBtnLabel}</Button>\r\n                ) : CV !== '' ? (\r\n                  <div>\r\n                    <Button variant=\"outlined\" style={{ marginRight: 5 }}>\r\n                      {cvBtnLabel}\r\n                    </Button>\r\n                    {uploadedDocument.name}\r\n                  </div>\r\n                ) : (\r\n                  <Button variant=\"outlined\">{cvBtnLabel}</Button>\r\n                )\r\n              ) : (\r\n                <Placeholder\r\n                  error={error}\r\n                  touched={touched}\r\n                  btnText={btnText}\r\n                  imagefile={imagefile}\r\n                  isLogo={isLogo}\r\n                  isImage={isImage}\r\n                  isProfilePic={isProfilePic}\r\n                />\r\n              )}\r\n            </div>\r\n          </section>\r\n        )}\r\n      </Dropzone>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect()(renderDropzoneField);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}