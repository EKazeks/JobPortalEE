{"ast":null,"code":"var _jsxFileName = \"/Users/eduardkazeks/Documents/GitHub/EeJobPortal/src/containers/jobseekers/homePage.container.js\";\nimport React, { useEffect, useState } from 'react';\nimport { getFormValues, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport HomePageComponent from '../../components/jobseekers/homePage.component';\nimport { getApplicantDashboardInfo, toggleEmailNotification, updateEmailNotification, closeSnackbar } from '../../actions';\nimport { jobPreferenceValidate as validate } from '../validate';\nimport i18next from 'i18next';\nimport axios from 'axios';\n\nclass HomePageContainer extends React.Component {\n  componentDidMount() {\n    this.props.getApplicantDashboardInfo();\n  }\n\n  render() {\n    if (this.props.isUserType === 'applicant') {\n      return /*#__PURE__*/React.createElement(HomePageComponent, Object.assign({}, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 14\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    });\n  }\n\n}\n\nconst HomePageContainerForm = reduxForm({\n  form: 'jobPreference',\n  //initialValues: {},\n  enableReinitialize: true,\n  validate\n})(HomePageContainer);\n\nconst mapStateToProps = state => {\n  const formValues = getFormValues('jobPreference')(state);\n  const dashboard = state.jobs.dashboard && state.jobs.dashboard[0];\n  const [jobsToRender, setJobsToRender] = useState([]);\n  useEffect(() => {\n    axios.get(`https://localhost:7262/jobsEn`).then(res => {\n      setJobsToRender(res.data);\n    });\n  }, []);\n\n  const extractJobCategoriesData = list => {\n    const jobcategoryList = list.map(el => {\n      const data = {};\n      data.id = el.job_category;\n      data.label = i18next.t(`category:${el.job_category}`);\n      return data;\n    });\n    return jobcategoryList;\n  };\n\n  const extractJobTypeData = list => {\n    const jobtypeList = list.map(el => {\n      const data = {};\n      data.type = el.job_type;\n      data.label = i18next.t(`jobtype:jobType${el.job_type}`);\n      return data;\n    });\n    return jobtypeList;\n  };\n\n  const extractJobHoursData = list => {\n    const jobhourList = list.map(el => {\n      const data = {};\n      data.type = el.job_hours;\n      data.label = i18next.t(`jobhours:jobHours${el.job_hours}`);\n      return data;\n    });\n    return jobhourList;\n  };\n\n  const populateFormValues = {\n    notice_frequency: dashboard && dashboard.notice_frequency,\n    job_location: dashboard && dashboard.job_location,\n    job_category: dashboard && dashboard.job_category && extractJobCategoriesData(dashboard.job_category.categoryList),\n    job_type: dashboard && dashboard.job_type && extractJobTypeData(dashboard.job_type.jobtypeList),\n    job_hours: dashboard && dashboard.job_hours && extractJobHoursData(dashboard.job_hours.jobhoursList)\n  };\n  return {\n    initialValues: populateFormValues,\n    dashboard,\n    jobCategories: state.jobCategories.jobCategories,\n    notificationToggleBtn: state.jobs.notificationToggleBtn,\n    showSuccessSnackbar: state.asyncActions.showSuccessSnackbar,\n    showFailedSnackbar: state.asyncActions.showFailedSnackbar,\n    isUserType: state.client.user && state.client.user.data[6].user_type,\n    formValues\n  };\n};\n\nconst mapDispatchToProps = {\n  getApplicantDashboardInfo,\n  toggleEmailNotification,\n  updateEmailNotification,\n  closeSnackbar\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePageContainerForm);","map":{"version":3,"names":["React","useEffect","useState","getFormValues","reduxForm","connect","Redirect","HomePageComponent","getApplicantDashboardInfo","toggleEmailNotification","updateEmailNotification","closeSnackbar","jobPreferenceValidate","validate","i18next","axios","HomePageContainer","Component","componentDidMount","props","render","isUserType","HomePageContainerForm","form","enableReinitialize","mapStateToProps","state","formValues","dashboard","jobs","jobsToRender","setJobsToRender","get","then","res","data","extractJobCategoriesData","list","jobcategoryList","map","el","id","job_category","label","t","extractJobTypeData","jobtypeList","type","job_type","extractJobHoursData","jobhourList","job_hours","populateFormValues","notice_frequency","job_location","categoryList","jobhoursList","initialValues","jobCategories","notificationToggleBtn","showSuccessSnackbar","asyncActions","showFailedSnackbar","client","user","user_type","mapDispatchToProps"],"sources":["/Users/eduardkazeks/Documents/GitHub/EeJobPortal/src/containers/jobseekers/homePage.container.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getFormValues, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport HomePageComponent from '../../components/jobseekers/homePage.component';\nimport { getApplicantDashboardInfo, toggleEmailNotification, updateEmailNotification, closeSnackbar } from '../../actions';\nimport { jobPreferenceValidate as validate } from '../validate';\nimport i18next from 'i18next';\nimport axios from 'axios';\n\nclass HomePageContainer extends React.Component {\n  componentDidMount() {\n    this.props.getApplicantDashboardInfo();\n  }\n\n  render() {\n    if (this.props.isUserType === 'applicant') {\n      return <HomePageComponent {...this.props} />;\n    }\n    return <Redirect to=\"/\" />;\n  }\n}\nconst HomePageContainerForm = reduxForm({\n  form: 'jobPreference',\n  //initialValues: {},\n  enableReinitialize: true,\n  validate,\n})(HomePageContainer);\n\nconst mapStateToProps = state => {\n  const formValues = getFormValues('jobPreference')(state);\n  const dashboard = state.jobs.dashboard && state.jobs.dashboard[0];\n  const [jobsToRender, setJobsToRender] = useState([]);\n\n  useEffect(() => {\n    axios\n    .get(`https://localhost:7262/jobsEn`)\n    .then(res => {\n       setJobsToRender(res.data);\n    })\n  },[]);\n\n  const extractJobCategoriesData = list => {\n    const jobcategoryList = list.map(el => {\n      const data = {};\n      data.id = el.job_category;\n      data.label = i18next.t(`category:${el.job_category}`);\n      return data;\n    });\n    return jobcategoryList;\n  };\n\n  const extractJobTypeData = list => {\n    const jobtypeList = list.map(el => {\n      const data = {};\n      data.type = el.job_type;\n      data.label = i18next.t(`jobtype:jobType${el.job_type}`);\n      return data;\n    });\n    return jobtypeList;\n  };\n\n  const extractJobHoursData = list => {\n    const jobhourList = list.map(el => {\n      const data = {};\n      data.type = el.job_hours;\n      data.label = i18next.t(`jobhours:jobHours${el.job_hours}`);\n      return data;\n    });\n    return jobhourList;\n  };\n\n  const populateFormValues = {\n    notice_frequency: dashboard && dashboard.notice_frequency,\n    job_location: dashboard && dashboard.job_location,\n    job_category: dashboard && dashboard.job_category && extractJobCategoriesData(dashboard.job_category.categoryList),\n    job_type: dashboard && dashboard.job_type && extractJobTypeData(dashboard.job_type.jobtypeList),\n    job_hours: dashboard && dashboard.job_hours && extractJobHoursData(dashboard.job_hours.jobhoursList),\n  };\n\n  return {\n    initialValues: populateFormValues,\n    dashboard,\n    jobCategories: state.jobCategories.jobCategories,\n    notificationToggleBtn: state.jobs.notificationToggleBtn,\n    showSuccessSnackbar: state.asyncActions.showSuccessSnackbar,\n    showFailedSnackbar: state.asyncActions.showFailedSnackbar,\n    isUserType: state.client.user && state.client.user.data[6].user_type,\n    formValues,\n  };\n};\n\nconst mapDispatchToProps = {\n  getApplicantDashboardInfo,\n  toggleEmailNotification,\n  updateEmailNotification,\n  closeSnackbar,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePageContainerForm);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}