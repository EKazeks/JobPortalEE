{"ast":null,"code":"import { reduxForm, formValueSelector } from 'redux-form';\nimport { connect } from 'react-redux';\nimport AdvertFormComponent from '../../../components/companies/advertisements/advertForm.component';\nimport { saveAndPublishAdvertisement, saveAdvertisementAsDraft, closeSnackbar, clearImagesFromState, choosePaymentMethod, addExtraService, changeRoute, saveAndPublishAdvertisementToEeSuccess } from '../../../actions';\nimport store from '../../../store';\nimport { jobPostFormValidate as validate } from '../../validate';\nconst AdvertFormContainer = reduxForm({\n  form: 'vacancy',\n  validate\n})(AdvertFormComponent);\n\nconst mapStateToProps = state => {\n  var _store$getState$users;\n\n  let companyName = (_store$getState$users = store.getState().usersCompanyList.selectedCompany) === null || _store$getState$users === void 0 ? void 0 : _store$getState$users.company_name; //let language = formValueSelector('vacancy')(store.getState(), 'email_language');\n\n  return {\n    image: formValueSelector('vacancy')(state, 'image_document'),\n    jobCategories: state.jobCategories.jobCategories.filter(jobs => jobs.type !== 'all'),\n    selectedCampaign: store.getState().advertisement.selectedCampaign && store.getState().advertisement.selectedCampaign,\n    apiSuccess: store.getState().advertisement.apiSuccess,\n    apiFailed: store.getState().advertisement.apiFailed,\n    showSpinner: store.getState().advertisement.showSpinner,\n    isToEdit: state.jobs.isToEdit,\n    synchronousError: state.form && state.form.vacancy && state.form.vacancy.syncErrors,\n    showPaymentDialog: state.asyncActions.showPaymentDialog,\n    extraService: state.advertisement.extraService // initialValues: {\n    //   notice_frequency: '7',\n    //   email_language: [\n    //     {\n    //       type: 'finnish',\n    //       label: 'Finnish',\n    //     },\n    //   ],\n    //   //email_message: emailMessage,\n    //   email_subject: `Kiitos hakemuksesta ${companyName}`,\n    // },\n\n  };\n};\n\nconst mapDispatchToProps = {\n  saveAndPublishAdvertisement,\n  saveAdvertisementAsDraft,\n  closeSnackbar,\n  clearImagesFromState,\n  choosePaymentMethod,\n  addExtraService,\n  changeRoute,\n  saveAndPublishAdvertisementToEeSuccess\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AdvertFormContainer);","map":{"version":3,"names":["reduxForm","formValueSelector","connect","AdvertFormComponent","saveAndPublishAdvertisement","saveAdvertisementAsDraft","closeSnackbar","clearImagesFromState","choosePaymentMethod","addExtraService","changeRoute","saveAndPublishAdvertisementToEeSuccess","store","jobPostFormValidate","validate","AdvertFormContainer","form","mapStateToProps","state","companyName","getState","usersCompanyList","selectedCompany","company_name","image","jobCategories","filter","jobs","type","selectedCampaign","advertisement","apiSuccess","apiFailed","showSpinner","isToEdit","synchronousError","vacancy","syncErrors","showPaymentDialog","asyncActions","extraService","mapDispatchToProps"],"sources":["C:/Users/shuli/OneDrive/Desktop/Work/JobportalN/JobPortalEE/src/containers/companies/advertisements/advertForm.container.js"],"sourcesContent":["import { reduxForm, formValueSelector } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport AdvertFormComponent from '../../../components/companies/advertisements/advertForm.component';\r\nimport {\r\n  saveAndPublishAdvertisement,\r\n  saveAdvertisementAsDraft,\r\n  closeSnackbar,\r\n  clearImagesFromState,\r\n  choosePaymentMethod,\r\n  addExtraService,\r\n  changeRoute,\r\n  saveAndPublishAdvertisementToEeSuccess\r\n} from '../../../actions';\r\nimport store from '../../../store';\r\nimport { jobPostFormValidate as validate } from '../../validate';\r\n\r\nconst AdvertFormContainer = reduxForm({\r\n  form: 'vacancy',\r\n\r\n  validate,\r\n})(AdvertFormComponent);\r\n\r\nconst mapStateToProps = state => {\r\n  let companyName = store.getState().usersCompanyList.selectedCompany?.company_name;\r\n  //let language = formValueSelector('vacancy')(store.getState(), 'email_language');\r\n\r\n  return {\r\n    image: formValueSelector('vacancy')(state, 'image_document'),\r\n    jobCategories: state.jobCategories.jobCategories.filter(jobs => jobs.type !== 'all'),\r\n    selectedCampaign: store.getState().advertisement.selectedCampaign && store.getState().advertisement.selectedCampaign,\r\n    apiSuccess: store.getState().advertisement.apiSuccess,\r\n    apiFailed: store.getState().advertisement.apiFailed,\r\n    showSpinner: store.getState().advertisement.showSpinner,\r\n    isToEdit: state.jobs.isToEdit,\r\n    synchronousError: state.form && state.form.vacancy && state.form.vacancy.syncErrors,\r\n    showPaymentDialog: state.asyncActions.showPaymentDialog,\r\n    extraService: state.advertisement.extraService,\r\n\r\n    // initialValues: {\r\n    //   notice_frequency: '7',\r\n    //   email_language: [\r\n    //     {\r\n    //       type: 'finnish',\r\n    //       label: 'Finnish',\r\n    //     },\r\n    //   ],\r\n    //   //email_message: emailMessage,\r\n    //   email_subject: `Kiitos hakemuksesta ${companyName}`,\r\n    // },\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  saveAndPublishAdvertisement,\r\n  saveAdvertisementAsDraft,\r\n  closeSnackbar,\r\n  clearImagesFromState,\r\n  choosePaymentMethod,\r\n  addExtraService,\r\n  changeRoute,\r\n  saveAndPublishAdvertisementToEeSuccess\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdvertFormContainer);\r\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,iBAApB,QAA6C,YAA7C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,mBAAP,MAAgC,mEAAhC;AACA,SACEC,2BADF,EAEEC,wBAFF,EAGEC,aAHF,EAIEC,oBAJF,EAKEC,mBALF,EAMEC,eANF,EAOEC,WAPF,EAQEC,sCARF,QASO,kBATP;AAUA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,mBAAmB,IAAIC,QAAhC,QAAgD,gBAAhD;AAEA,MAAMC,mBAAmB,GAAGf,SAAS,CAAC;EACpCgB,IAAI,EAAE,SAD8B;EAGpCF;AAHoC,CAAD,CAAT,CAIzBX,mBAJyB,CAA5B;;AAMA,MAAMc,eAAe,GAAGC,KAAK,IAAI;EAAA;;EAC/B,IAAIC,WAAW,4BAAGP,KAAK,CAACQ,QAAN,GAAiBC,gBAAjB,CAAkCC,eAArC,0DAAG,sBAAmDC,YAArE,CAD+B,CAE/B;;EAEA,OAAO;IACLC,KAAK,EAAEvB,iBAAiB,CAAC,SAAD,CAAjB,CAA6BiB,KAA7B,EAAoC,gBAApC,CADF;IAELO,aAAa,EAAEP,KAAK,CAACO,aAAN,CAAoBA,aAApB,CAAkCC,MAAlC,CAAyCC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAc,KAA/D,CAFV;IAGLC,gBAAgB,EAAEjB,KAAK,CAACQ,QAAN,GAAiBU,aAAjB,CAA+BD,gBAA/B,IAAmDjB,KAAK,CAACQ,QAAN,GAAiBU,aAAjB,CAA+BD,gBAH/F;IAILE,UAAU,EAAEnB,KAAK,CAACQ,QAAN,GAAiBU,aAAjB,CAA+BC,UAJtC;IAKLC,SAAS,EAAEpB,KAAK,CAACQ,QAAN,GAAiBU,aAAjB,CAA+BE,SALrC;IAMLC,WAAW,EAAErB,KAAK,CAACQ,QAAN,GAAiBU,aAAjB,CAA+BG,WANvC;IAOLC,QAAQ,EAAEhB,KAAK,CAACS,IAAN,CAAWO,QAPhB;IAQLC,gBAAgB,EAAEjB,KAAK,CAACF,IAAN,IAAcE,KAAK,CAACF,IAAN,CAAWoB,OAAzB,IAAoClB,KAAK,CAACF,IAAN,CAAWoB,OAAX,CAAmBC,UARpE;IASLC,iBAAiB,EAAEpB,KAAK,CAACqB,YAAN,CAAmBD,iBATjC;IAULE,YAAY,EAAEtB,KAAK,CAACY,aAAN,CAAoBU,YAV7B,CAYL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EAtBK,CAAP;AAwBD,CA5BD;;AA8BA,MAAMC,kBAAkB,GAAG;EACzBrC,2BADyB;EAEzBC,wBAFyB;EAGzBC,aAHyB;EAIzBC,oBAJyB;EAKzBC,mBALyB;EAMzBC,eANyB;EAOzBC,WAPyB;EAQzBC;AARyB,CAA3B;AAUA,eAAeT,OAAO,CAACe,eAAD,EAAkBwB,kBAAlB,CAAP,CAA6C1B,mBAA7C,CAAf"},"metadata":{},"sourceType":"module"}