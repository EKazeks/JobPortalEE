{"ast":null,"code":"var _jsxFileName = \"/Users/eduardkazeks/Documents/GitHub/JobPortalEE/src/components/companies/ads/adDetails.component.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Divider, Grid, Button, Snackbar } from \"@material-ui/core\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport store from \"../../../store\";\nimport { customURL } from \"../../../utils/helperFunctions\";\nimport { updateAdvertisement, changeCampaign, populateVacancyForm, changeActivePostToInactive, closeSnackbar } from \"../../../actions\";\nimport { MySnackbarContentWrapper } from \"../../../utils/snackbar.utils\";\nimport { customTranslateCampaign, customTranslateStatus } from \"../../../utils/customTranslate\";\nimport Loader from \"../../../utils/loader\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst styles = theme => ({\n  titleMargin: {\n    margin: \"20px auto 24px auto\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 4\n    }\n  },\n  companyLogo: {\n    minHeight: 80,\n    minWidth: 150,\n    backgroundSize: \"contain\",\n    backgroundRepeat: \"no-repeat\",\n    marginBottom: 6\n  },\n  companyImgFrame: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  companyImage: {\n    minHeight: 420,\n    maxHeight: 600,\n    maxWidth: \"100%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      minHeight: 190,\n      maxHeight: 190,\n      width: \"100%\"\n    },\n    [theme.breakpoints.only(\"sm\")]: {\n      minHeight: 360,\n      maxHeight: 420,\n      width: \"100%\"\n    }\n  },\n  adDetail: {\n    margin: \"0px 0 50px 0\",\n    padding: \"0 0 50px\",\n    border: \"1px solid lightgray\"\n  },\n  jobDesc: {\n    padding: 40\n  },\n  ctaBtn: {\n    marginBottom: 50,\n    [theme.breakpoints.up(\"md\")]: {\n      justifyContent: \"flex-end\"\n    }\n  },\n  backBtnText: {\n    color: theme.palette.secondary.main,\n    \"&:hover\": {\n      textDecoration: \"none\",\n      color: theme.palette.primary.main\n    }\n  },\n  backBtnContainer: {\n    marginTop: 2\n  },\n  campaignType: {\n    marginRight: 16\n  }\n});\n\nconst AdDetails = _ref => {\n  let {\n    classes,\n    viewSelectedAd,\n    userRole,\n    showSuccessSnackbar,\n    showFailedSnackbar,\n    showSpinner,\n    selectedPage,\n    campaignsList,\n    props\n  } = _ref;\n  const {\n    t\n  } = useTranslation(\"adDetails\");\n  const dispatch = useDispatch();\n  const {\n    jobPostNumber\n  } = useSelector(state => state.jobs);\n  const [jobsToRender, setJobsToRender] = useState([]);\n  selectedPage = 1; //const jobsPostNumber =  useSelector(state => state.getState().jobPostNumber);\n  // const jobPostNumber = 653536;\n\n  useEffect(() => {\n    axios.get(`https://localhost:7262/jobsEn/${jobPostNumber}`).then(res => {\n      setJobsToRender(res.data);\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <div>\n    //     <Grid>\n    //       <div>\n    //         <h1>\n    //           {jobsToRender.jobPostNumber}\n    //           {jobsToRender.jobName}\n    //           {console.log(jobsToRender.jobPostNumber)}\n    //         </h1>\n    //       </div>\n    //     </Grid>\n    //   </div>\n    //   <h1>Test</h1>\n    // </div>\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }\n    }, \"return item !== [] && item.jobPostNumber !== undefined ? (\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      key: item.jobPostNumber,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.backBtnContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: userRole === \"company\" ? \"/omat-ilmoitukseni\" : \"/tyopaikat\",\n      className: classes.backBtnText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }), \" \", t(\"jobs:backButton\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.titleMargin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"ad_title_1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, item.jobName, \"adress\"), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"ad_title_2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 23\n      }\n    }, `${item.status === 0 ? t(\"draft\") : item.status === 1 ? t(\"active\") : t(\"inactive\")}`, \":\"), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 23\n      }\n    }, item.dateOfApplication))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      className: classes.ctaBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 23\n      }\n    }, item.campaignType === \"Free\" ? /*#__PURE__*/React.createElement(Link, {\n      to: \"/tyopaikkailmoitus/\",\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => {\n        store.dispatch(populateVacancyForm(item.jobPostNumber, false));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 29\n      }\n    }, t(\"common:copyBtn\"))) : item.campaignType === \"Free\" ? /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => {\n        // alert('updateJOBPOSTSTATUS');\n        store.dispatch(changeActivePostToInactive(userRole === \"admin\" ? `${item.jobPostNumber}admin${item.companyBusinessId}` : item.jobPostNumber));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 27\n      }\n    }, t(\"common:inactiveBtn\")) : \"\"), item.campaignType === \"Free\" && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/tyopaikkailmoitus/${item.jobPostNumber}`,\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => store.dispatch(updateAdvertisement()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 29\n      }\n    }, t(\"editBtn\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 23\n      }\n    }, item.jobName && /*#__PURE__*/React.createElement(Link, {\n      to: customURL(item.url, \"campaign\"),\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => store.dispatch(changeCampaign(campaignsList.find(campaign => campaign.id === item.campaignType))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 29\n      }\n    }, t(\"boostBtn\"))))))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.addMargin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.campaignType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 25\n      }\n    }, t(\"postType\"), \": \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 25\n      }\n    }, item.campaignType)), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 25\n      }\n    }, t(\"postStatus\"), \": \"), `Active`))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 4,\n      style: {\n        display: \"flex\",\n        justifyContent: \"flex-end\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.companyLogo,\n      style: {\n        backgroundImage: `url(${item.logo ? item.logo[0].path : \"\"})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.adDetail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.companyImgFrame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: item.logo && item.logo[0].path,\n      alt: item.logo ? `${item.jobName} Company-Image` : \"\",\n      className: item.company_image ? classes.companyImage : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.jobDesc,\n      dangerouslySetInnerHTML: {\n        __html: item.jobDescription\n      } // To convert rte string into html\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      className: classes.ctaBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }\n    }, item.campaignType === \"Free\" ? /*#__PURE__*/React.createElement(Link, {\n      to: \"/tyopaikkailmoitus/\",\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => {\n        store.dispatch(populateVacancyForm(item.jobPostNumber, false));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 27\n      }\n    }, t(\"common:copyBtn\"))) : item.campaignType === \"Free\" ? /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => {\n        store.dispatch(changeActivePostToInactive(userRole === \"admin\" ? `${item.jobPostNumber}admin${item.companyBusinessId}` : item.jobPostNumber));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 25\n      }\n    }, t(\"common:inactiveBtn\")) : \"\"), item.campaignType === \"Free\" && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/tyopaikkailmoitus/${item.jobPostNumber}`,\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => store.dispatch(updateAdvertisement()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 27\n      }\n    }, t(\"editBtn\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 21\n      }\n    }, item.jobName && /*#__PURE__*/React.createElement(Link, {\n      to: customURL(item.url, \"campaign\"),\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => store.dispatch(changeCampaign(campaignsList.find(campaign => campaign.id === item.campaign_id))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 27\n      }\n    }, t(\"boostBtn\")))))))), \") : ( \\\" \\\" );\", /*#__PURE__*/React.createElement(Loader, {\n      showSpinner: showSpinner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      open: showSuccessSnackbar,\n      autoHideDuration: 2000,\n      onClose: () => store.dispatch(closeSnackbar()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper, {\n      onClose: () => store.dispatch(closeSnackbar()),\n      variant: \"success\",\n      message: t(\"successMsg\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      open: showFailedSnackbar,\n      autoHideDuration: 2000,\n      onClose: () => store.dispatch(closeSnackbar()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper, {\n      onClose: () => store.dispatch(closeSnackbar()),\n      variant: \"error\",\n      message: t(\"failedMsg\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }\n    })))\n  );\n};\n\nexport default withStyles(styles)(AdDetails);","map":{"version":3,"names":["React","useEffect","useState","withStyles","Divider","Grid","Button","Snackbar","ArrowBackIosIcon","Link","useTranslation","store","customURL","updateAdvertisement","changeCampaign","populateVacancyForm","changeActivePostToInactive","closeSnackbar","MySnackbarContentWrapper","customTranslateCampaign","customTranslateStatus","Loader","axios","useDispatch","useSelector","styles","theme","titleMargin","margin","breakpoints","down","marginTop","companyLogo","minHeight","minWidth","backgroundSize","backgroundRepeat","marginBottom","companyImgFrame","display","alignItems","justifyContent","companyImage","maxHeight","maxWidth","width","only","adDetail","padding","border","jobDesc","ctaBtn","up","backBtnText","color","palette","secondary","main","textDecoration","primary","backBtnContainer","campaignType","marginRight","AdDetails","classes","viewSelectedAd","userRole","showSuccessSnackbar","showFailedSnackbar","showSpinner","selectedPage","campaignsList","props","t","dispatch","jobPostNumber","state","jobs","jobsToRender","setJobsToRender","get","then","res","data","item","jobName","status","dateOfApplication","companyBusinessId","url","find","campaign","id","addMargin","backgroundImage","logo","path","company_image","__html","jobDescription","campaign_id","vertical","horizontal"],"sources":["/Users/eduardkazeks/Documents/GitHub/JobPortalEE/src/components/companies/ads/adDetails.component.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Divider, Grid, Button, Snackbar } from \"@material-ui/core\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport store from \"../../../store\";\nimport { customURL } from \"../../../utils/helperFunctions\";\nimport {\n  updateAdvertisement,\n  changeCampaign,\n  populateVacancyForm,\n  changeActivePostToInactive,\n  closeSnackbar,\n} from \"../../../actions\";\nimport { MySnackbarContentWrapper } from \"../../../utils/snackbar.utils\";\nimport {\n  customTranslateCampaign,\n  customTranslateStatus,\n} from \"../../../utils/customTranslate\";\nimport Loader from \"../../../utils/loader\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst styles = (theme) => ({\n  titleMargin: {\n    margin: \"20px auto 24px auto\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 4,\n    },\n  },\n  companyLogo: {\n    minHeight: 80,\n    minWidth: 150,\n    backgroundSize: \"contain\",\n    backgroundRepeat: \"no-repeat\",\n    marginBottom: 6,\n  },\n  companyImgFrame: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  companyImage: {\n    minHeight: 420,\n    maxHeight: 600,\n    maxWidth: \"100%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      minHeight: 190,\n      maxHeight: 190,\n      width: \"100%\",\n    },\n    [theme.breakpoints.only(\"sm\")]: {\n      minHeight: 360,\n      maxHeight: 420,\n      width: \"100%\",\n    },\n  },\n  adDetail: {\n    margin: \"0px 0 50px 0\",\n    padding: \"0 0 50px\",\n    border: \"1px solid lightgray\",\n  },\n  jobDesc: {\n    padding: 40,\n  },\n  ctaBtn: {\n    marginBottom: 50,\n    [theme.breakpoints.up(\"md\")]: {\n      justifyContent: \"flex-end\",\n    },\n  },\n  backBtnText: {\n    color: theme.palette.secondary.main,\n    \"&:hover\": {\n      textDecoration: \"none\",\n      color: theme.palette.primary.main,\n    },\n  },\n  backBtnContainer: {\n    marginTop: 2,\n  },\n  campaignType: {\n    marginRight: 16,\n  },\n});\n\nconst AdDetails = ({\n  classes,\n  viewSelectedAd,\n  userRole,\n  showSuccessSnackbar,\n  showFailedSnackbar,\n  showSpinner,\n  selectedPage,\n  campaignsList,\n  props,\n}) => {\n  const { t } = useTranslation(\"adDetails\");\n  const dispatch = useDispatch();\n  const { jobPostNumber } = useSelector((state) => state.jobs);\n  const [jobsToRender, setJobsToRender] = useState([]);\n  selectedPage = 1;\n  //const jobsPostNumber =  useSelector(state => state.getState().jobPostNumber);\n  // const jobPostNumber = 653536;\n\n  useEffect(() => {\n    axios.get(`https://localhost:7262/jobsEn/${jobPostNumber}`).then((res) => {\n      setJobsToRender(res.data);\n    });\n  }, []);\n\n  return (\n    // <div>\n    //   <div>\n    //     <Grid>\n    //       <div>\n    //         <h1>\n    //           {jobsToRender.jobPostNumber}\n    //           {jobsToRender.jobName}\n    //           {console.log(jobsToRender.jobPostNumber)}\n    //         </h1>\n    //       </div>\n    //     </Grid>\n    //   </div>\n\n    //   <h1>Test</h1>\n    // </div>\n    <div>\n\n          return item !== [] && item.jobPostNumber !== undefined ? (\n            <div className=\"container\" key={item.jobPostNumber}>\n              <div className={classes.backBtnContainer}>\n                <Link\n                  to={\n                    userRole === \"company\" ? \"/omat-ilmoitukseni\" : \"/tyopaikat\"\n                  }\n                  className={classes.backBtnText}\n                >\n                  <ArrowBackIosIcon /> {t(\"jobs:backButton\")}\n                </Link>\n              </div>\n              <div className={classes.titleMargin}>\n                <Grid container>\n                  <Grid item sm={12} md={7}>\n                    <h2 className=\"ad_title_1\">\n                      {/* {`${item.jobName}, ${item.jobPostAsukohaAddress.map(address => {\n                    {\n                      if (address.address[17]) {\n                        return address.address\n                          .split(',')\n                          .splice(1)\n                          .toString();\n                      } else return address.address;\n                    }\n                  })}`} */}\n                      {item.jobName}\n                      {\"adress\"}\n                    </h2>\n                    <h6 className=\"ad_title_2\">\n                      <strong style={{ marginRight: 10 }}>\n                        {`${\n                          item.status === 0\n                            ? t(\"draft\")\n                            : item.status === 1\n                            ? t(\"active\")\n                            : t(\"inactive\")\n                        }`}\n                        :\n                      </strong>\n                      <strong>{item.dateOfApplication}</strong>\n                    </h6>\n                  </Grid>\n                  <Grid item sm={12} md={5}>\n                    <Grid container spacing={2} className={classes.ctaBtn}>\n                      <Grid item>\n                        {/* If post is active post, show Inactive btn. If it is inactive post, show copy btn in Addetails */}\n                        {item.campaignType === \"Free\" ? (\n                          <Link to=\"/tyopaikkailmoitus/\" className=\"btnLink\">\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              onClick={() => {\n                                store.dispatch(\n                                  populateVacancyForm(item.jobPostNumber, false)\n                                );\n                              }}\n                            >\n                              {t(\"common:copyBtn\")}\n                            </Button>\n                          </Link>\n                        ) : item.campaignType === \"Free\" ? (\n                          <Button\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            onClick={() => {\n                              // alert('updateJOBPOSTSTATUS');\n                              store.dispatch(\n                                changeActivePostToInactive(\n                                  userRole === \"admin\"\n                                    ? `${item.jobPostNumber}admin${item.companyBusinessId}`\n                                    : item.jobPostNumber\n                                )\n                              );\n                            }}\n                          >\n                            {t(\"common:inactiveBtn\")}\n                          </Button>\n                        ) : (\n                          \"\"\n                        )}\n                      </Grid>\n                      {item.campaignType === \"Free\" && (\n                        <Grid item>\n                          <Link\n                            to={`/tyopaikkailmoitus/${item.jobPostNumber}`}\n                            className=\"btnLink\"\n                          >\n                            <Button\n                              variant=\"outlined\"\n                              color=\"primary\"\n                              onClick={() =>\n                                store.dispatch(updateAdvertisement())\n                              }\n                            >\n                              {t(\"editBtn\")}\n                            </Button>\n                          </Link>\n                        </Grid>\n                      )}\n                      <Grid item>\n                        {/* To avoid errors when viewSelectedAd is empty array */}\n                        {item.jobName && (\n                          <Link\n                            to={customURL(item.url, \"campaign\")}\n                            className=\"btnLink\"\n                          >\n                            <Button\n                              variant=\"contained\"\n                              color=\"primary\"\n                              onClick={() =>\n                                store.dispatch(\n                                  changeCampaign(\n                                    campaignsList.find(\n                                      (campaign) =>\n                                        campaign.id === item.campaignType\n                                    )\n                                  )\n                                )\n                              }\n                            >\n                              {t(\"boostBtn\")}\n                            </Button>\n                          </Link>\n                        )}\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                <Divider />\n              </div>\n              <div className={classes.addMargin}>\n                <Grid container>\n                  <Grid item sm={8}>\n                    <div className={classes.campaignType}>\n                      <h6>\n                        <strong>{t(\"postType\")}: </strong>\n                        {/* <span>{customTranslateCampaign(item.campaignType)}</span> */}\n                        <span>{item.campaignType}</span>\n                      </h6>\n                      <h6>\n                        <strong>{t(\"postStatus\")}: </strong>\n                        {/* {customTranslateStatus(item.campaignType)} */}\n                        {`Active`}\n                      </h6>\n                    </div>\n                  </Grid>\n                  <Grid\n                    item\n                    sm={4}\n                    style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n                  >\n                    <div\n                      className={classes.companyLogo}\n                      style={{\n                        backgroundImage: `url(${\n                          item.logo ? item.logo[0].path : \"\"\n                        })`,\n                      }}\n                    />\n                  </Grid>\n                </Grid>\n              </div>\n              <div className={classes.adDetail}>\n                <div className={classes.companyImgFrame}>\n                  <img\n                    src={item.logo && item.logo[0].path}\n                    alt={item.logo ? `${item.jobName} Company-Image` : \"\"}\n                    className={item.company_image ? classes.companyImage : \"\"}\n                  />\n                </div>\n                <div\n                  className={classes.jobDesc}\n                  dangerouslySetInnerHTML={{\n                    __html: item.jobDescription,\n                  }} // To convert rte string into html\n                />\n              </div>\n              <Grid container>\n                <Grid item sm={12} md={6} />\n                <Grid item sm={12} md={6}>\n                  <Grid container spacing={2} className={classes.ctaBtn}>\n                    <Grid item>\n                      {/* If post is active post, show Inactive btn. If it is inactive post, show copy btn in Addetails */}\n                      {item.campaignType === \"Free\" ? (\n                        <Link to=\"/tyopaikkailmoitus/\" className=\"btnLink\">\n                          <Button\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            onClick={() => {\n                              store.dispatch(\n                                populateVacancyForm(item.jobPostNumber, false)\n                              );\n                            }}\n                          >\n                            {t(\"common:copyBtn\")}\n                          </Button>\n                        </Link>\n                      ) : item.campaignType === \"Free\" ? (\n                        <Button\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            store.dispatch(\n                              changeActivePostToInactive(\n                                userRole === \"admin\"\n                                  ? `${item.jobPostNumber}admin${item.companyBusinessId}`\n                                  : item.jobPostNumber\n                              )\n                            );\n                          }}\n                        >\n                          {t(\"common:inactiveBtn\")}\n                        </Button>\n                      ) : (\n                        \"\"\n                      )}\n                    </Grid>\n                    {item.campaignType === \"Free\" && (\n                      <Grid item>\n                        <Link\n                          to={`/tyopaikkailmoitus/${item.jobPostNumber}`}\n                          className=\"btnLink\"\n                        >\n                          <Button\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            onClick={() =>\n                              store.dispatch(updateAdvertisement())\n                            }\n                          >\n                            {t(\"editBtn\")}\n                          </Button>\n                        </Link>\n                      </Grid>\n                    )}\n                    <Grid item>\n                      {/* To avoid errors when viewSelectedAd is empty array */}\n                      {item.jobName && (\n                        <Link\n                          to={customURL(item.url, \"campaign\")}\n                          className=\"btnLink\"\n                        >\n                          <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() =>\n                              store.dispatch(\n                                changeCampaign(\n                                  campaignsList.find(\n                                    (campaign) =>\n                                      campaign.id === item.campaign_id\n                                  )\n                                )\n                              )\n                            }\n                          >\n                            {t(\"boostBtn\")}\n                          </Button>\n                        </Link>\n                      )}\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n            </div>\n          ) : (\n            \" \"\n          );\n\n\n      <Loader showSpinner={showSpinner} />\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        open={showSuccessSnackbar}\n        autoHideDuration={2000}\n        onClose={() => store.dispatch(closeSnackbar())}\n      >\n        <MySnackbarContentWrapper\n          onClose={() => store.dispatch(closeSnackbar())}\n          variant=\"success\"\n          message={t(\"successMsg\")}\n        />\n      </Snackbar>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        open={showFailedSnackbar}\n        autoHideDuration={2000}\n        onClose={() => store.dispatch(closeSnackbar())}\n      >\n        <MySnackbarContentWrapper\n          onClose={() => store.dispatch(closeSnackbar())}\n          variant=\"error\"\n          message={t(\"failedMsg\")}\n        />\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(AdDetails);\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,MAAxB,EAAgCC,QAAhC,QAAgD,mBAAhD;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SACEC,mBADF,EAEEC,cAFF,EAGEC,mBAHF,EAIEC,0BAJF,EAKEC,aALF,QAMO,kBANP;AAOA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SACEC,uBADF,EAEEC,qBAFF,QAGO,gCAHP;AAIA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,MAAMC,MAAM,GAAIC,KAAD,KAAY;EACzBC,WAAW,EAAE;IACXC,MAAM,EAAE,qBADG;IAEX,CAACF,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;MAC9BC,SAAS,EAAE;IADmB;EAFrB,CADY;EAOzBC,WAAW,EAAE;IACXC,SAAS,EAAE,EADA;IAEXC,QAAQ,EAAE,GAFC;IAGXC,cAAc,EAAE,SAHL;IAIXC,gBAAgB,EAAE,WAJP;IAKXC,YAAY,EAAE;EALH,CAPY;EAczBC,eAAe,EAAE;IACfC,OAAO,EAAE,MADM;IAEfC,UAAU,EAAE,QAFG;IAGfC,cAAc,EAAE;EAHD,CAdQ;EAoBzBC,YAAY,EAAE;IACZT,SAAS,EAAE,GADC;IAEZU,SAAS,EAAE,GAFC;IAGZC,QAAQ,EAAE,MAHE;IAIZ,CAAClB,KAAK,CAACG,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;MAC9BG,SAAS,EAAE,GADmB;MAE9BU,SAAS,EAAE,GAFmB;MAG9BE,KAAK,EAAE;IAHuB,CAJpB;IASZ,CAACnB,KAAK,CAACG,WAAN,CAAkBiB,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;MAC9Bb,SAAS,EAAE,GADmB;MAE9BU,SAAS,EAAE,GAFmB;MAG9BE,KAAK,EAAE;IAHuB;EATpB,CApBW;EAmCzBE,QAAQ,EAAE;IACRnB,MAAM,EAAE,cADA;IAERoB,OAAO,EAAE,UAFD;IAGRC,MAAM,EAAE;EAHA,CAnCe;EAwCzBC,OAAO,EAAE;IACPF,OAAO,EAAE;EADF,CAxCgB;EA2CzBG,MAAM,EAAE;IACNd,YAAY,EAAE,EADR;IAEN,CAACX,KAAK,CAACG,WAAN,CAAkBuB,EAAlB,CAAqB,IAArB,CAAD,GAA8B;MAC5BX,cAAc,EAAE;IADY;EAFxB,CA3CiB;EAiDzBY,WAAW,EAAE;IACXC,KAAK,EAAE5B,KAAK,CAAC6B,OAAN,CAAcC,SAAd,CAAwBC,IADpB;IAEX,WAAW;MACTC,cAAc,EAAE,MADP;MAETJ,KAAK,EAAE5B,KAAK,CAAC6B,OAAN,CAAcI,OAAd,CAAsBF;IAFpB;EAFA,CAjDY;EAwDzBG,gBAAgB,EAAE;IAChB7B,SAAS,EAAE;EADK,CAxDO;EA2DzB8B,YAAY,EAAE;IACZC,WAAW,EAAE;EADD;AA3DW,CAAZ,CAAf;;AAgEA,MAAMC,SAAS,GAAG,QAUZ;EAAA,IAVa;IACjBC,OADiB;IAEjBC,cAFiB;IAGjBC,QAHiB;IAIjBC,mBAJiB;IAKjBC,kBALiB;IAMjBC,WANiB;IAOjBC,YAPiB;IAQjBC,aARiB;IASjBC;EATiB,CAUb;EACJ,MAAM;IAAEC;EAAF,IAAQ/D,cAAc,CAAC,WAAD,CAA5B;EACA,MAAMgE,QAAQ,GAAGnD,WAAW,EAA5B;EACA,MAAM;IAAEoD;EAAF,IAAoBnD,WAAW,CAAEoD,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAArC;EACA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkC7E,QAAQ,CAAC,EAAD,CAAhD;EACAoE,YAAY,GAAG,CAAf,CALI,CAMJ;EACA;;EAEArE,SAAS,CAAC,MAAM;IACdqB,KAAK,CAAC0D,GAAN,CAAW,iCAAgCL,aAAc,EAAzD,EAA4DM,IAA5D,CAAkEC,GAAD,IAAS;MACxEH,eAAe,CAACG,GAAG,CAACC,IAAL,CAAf;IACD,CAFD;EAGD,CAJQ,EAIN,EAJM,CAAT;EAMA;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,8EAGQ;MAAK,SAAS,EAAC,WAAf;MAA2B,GAAG,EAAEC,IAAI,CAACT,aAArC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAK,SAAS,EAAEX,OAAO,CAACJ,gBAAxB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,IAAD;MACE,EAAE,EACAM,QAAQ,KAAK,SAAb,GAAyB,oBAAzB,GAAgD,YAFpD;MAIE,SAAS,EAAEF,OAAO,CAACX,WAJrB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAME,oBAAC,gBAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EANF,OAMwBoB,CAAC,CAAC,iBAAD,CANzB,CADF,CADF,eAWE;MAAK,SAAS,EAAET,OAAO,CAACrC,WAAxB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,IAAD;MAAM,SAAS,MAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,IAAD;MAAM,IAAI,MAAV;MAAW,EAAE,EAAE,EAAf;MAAmB,EAAE,EAAE,CAAvB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAI,SAAS,EAAC,YAAd;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAWGyD,IAAI,CAACC,OAXR,EAYG,QAZH,CADF,eAeE;MAAI,SAAS,EAAC,YAAd;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAQ,KAAK,EAAE;QAAEvB,WAAW,EAAE;MAAf,CAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACI,GACAsB,IAAI,CAACE,MAAL,KAAgB,CAAhB,GACIb,CAAC,CAAC,OAAD,CADL,GAEIW,IAAI,CAACE,MAAL,KAAgB,CAAhB,GACAb,CAAC,CAAC,QAAD,CADD,GAEAA,CAAC,CAAC,UAAD,CACN,EAPH,MADF,eAWE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAASW,IAAI,CAACG,iBAAd,CAXF,CAfF,CADF,eA8BE,oBAAC,IAAD;MAAM,IAAI,MAAV;MAAW,EAAE,EAAE,EAAf;MAAmB,EAAE,EAAE,CAAvB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,IAAD;MAAM,SAAS,MAAf;MAAgB,OAAO,EAAE,CAAzB;MAA4B,SAAS,EAAEvB,OAAO,CAACb,MAA/C;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,IAAD;MAAM,IAAI,MAAV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAEGiC,IAAI,CAACvB,YAAL,KAAsB,MAAtB,gBACC,oBAAC,IAAD;MAAM,EAAE,EAAC,qBAAT;MAA+B,SAAS,EAAC,SAAzC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,MAAD;MACE,OAAO,EAAC,UADV;MAEE,KAAK,EAAC,SAFR;MAGE,OAAO,EAAE,MAAM;QACblD,KAAK,CAAC+D,QAAN,CACE3D,mBAAmB,CAACqE,IAAI,CAACT,aAAN,EAAqB,KAArB,CADrB;MAGD,CAPH;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GASGF,CAAC,CAAC,gBAAD,CATJ,CADF,CADD,GAcGW,IAAI,CAACvB,YAAL,KAAsB,MAAtB,gBACF,oBAAC,MAAD;MACE,OAAO,EAAC,UADV;MAEE,KAAK,EAAC,SAFR;MAGE,OAAO,EAAE,MAAM;QACb;QACAlD,KAAK,CAAC+D,QAAN,CACE1D,0BAA0B,CACxBkD,QAAQ,KAAK,OAAb,GACK,GAAEkB,IAAI,CAACT,aAAc,QAAOS,IAAI,CAACI,iBAAkB,EADxD,GAEIJ,IAAI,CAACT,aAHe,CAD5B;MAOD,CAZH;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAcGF,CAAC,CAAC,oBAAD,CAdJ,CADE,GAkBF,EAlCJ,CADF,EAsCGW,IAAI,CAACvB,YAAL,KAAsB,MAAtB,iBACC,oBAAC,IAAD;MAAM,IAAI,MAAV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,IAAD;MACE,EAAE,EAAG,sBAAqBuB,IAAI,CAACT,aAAc,EAD/C;MAEE,SAAS,EAAC,SAFZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAIE,oBAAC,MAAD;MACE,OAAO,EAAC,UADV;MAEE,KAAK,EAAC,SAFR;MAGE,OAAO,EAAE,MACPhE,KAAK,CAAC+D,QAAN,CAAe7D,mBAAmB,EAAlC,CAJJ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAOG4D,CAAC,CAAC,SAAD,CAPJ,CAJF,CADF,CAvCJ,eAwDE,oBAAC,IAAD;MAAM,IAAI,MAAV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAEGW,IAAI,CAACC,OAAL,iBACC,oBAAC,IAAD;MACE,EAAE,EAAEzE,SAAS,CAACwE,IAAI,CAACK,GAAN,EAAW,UAAX,CADf;MAEE,SAAS,EAAC,SAFZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAIE,oBAAC,MAAD;MACE,OAAO,EAAC,WADV;MAEE,KAAK,EAAC,SAFR;MAGE,OAAO,EAAE,MACP9E,KAAK,CAAC+D,QAAN,CACE5D,cAAc,CACZyD,aAAa,CAACmB,IAAd,CACGC,QAAD,IACEA,QAAQ,CAACC,EAAT,KAAgBR,IAAI,CAACvB,YAFzB,CADY,CADhB,CAJJ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAcGY,CAAC,CAAC,UAAD,CAdJ,CAJF,CAHJ,CAxDF,CADF,CA9BF,CADF,eAqHE,oBAAC,OAAD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EArHF,CAXF,eAkIE;MAAK,SAAS,EAAET,OAAO,CAAC6B,SAAxB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,IAAD;MAAM,SAAS,MAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,IAAD;MAAM,IAAI,MAAV;MAAW,EAAE,EAAE,CAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAK,SAAS,EAAE7B,OAAO,CAACH,YAAxB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAASY,CAAC,CAAC,UAAD,CAAV,OADF,eAGE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAOW,IAAI,CAACvB,YAAZ,CAHF,CADF,eAME;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAASY,CAAC,CAAC,YAAD,CAAV,OADF,EAGI,QAHJ,CANF,CADF,CADF,eAeE,oBAAC,IAAD;MACE,IAAI,MADN;MAEE,EAAE,EAAE,CAFN;MAGE,KAAK,EAAE;QAAElC,OAAO,EAAE,MAAX;QAAmBE,cAAc,EAAE;MAAnC,CAHT;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAKE;MACE,SAAS,EAAEuB,OAAO,CAAChC,WADrB;MAEE,KAAK,EAAE;QACL8D,eAAe,EAAG,OAChBV,IAAI,CAACW,IAAL,GAAYX,IAAI,CAACW,IAAL,CAAU,CAAV,EAAaC,IAAzB,GAAgC,EACjC;MAHI,CAFT;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EALF,CAfF,CADF,CAlIF,eAkKE;MAAK,SAAS,EAAEhC,OAAO,CAACjB,QAAxB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAK,SAAS,EAAEiB,OAAO,CAAC1B,eAAxB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MACE,GAAG,EAAE8C,IAAI,CAACW,IAAL,IAAaX,IAAI,CAACW,IAAL,CAAU,CAAV,EAAaC,IADjC;MAEE,GAAG,EAAEZ,IAAI,CAACW,IAAL,GAAa,GAAEX,IAAI,CAACC,OAAQ,gBAA5B,GAA8C,EAFrD;MAGE,SAAS,EAAED,IAAI,CAACa,aAAL,GAAqBjC,OAAO,CAACtB,YAA7B,GAA4C,EAHzD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADF,CADF,eAQE;MACE,SAAS,EAAEsB,OAAO,CAACd,OADrB;MAEE,uBAAuB,EAAE;QACvBgD,MAAM,EAAEd,IAAI,CAACe;MADU,CAF3B,CAIK;MAJL;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EARF,CAlKF,eAiLE,oBAAC,IAAD;MAAM,SAAS,MAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,IAAD;MAAM,IAAI,MAAV;MAAW,EAAE,EAAE,EAAf;MAAmB,EAAE,EAAE,CAAvB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADF,eAEE,oBAAC,IAAD;MAAM,IAAI,MAAV;MAAW,EAAE,EAAE,EAAf;MAAmB,EAAE,EAAE,CAAvB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,IAAD;MAAM,SAAS,MAAf;MAAgB,OAAO,EAAE,CAAzB;MAA4B,SAAS,EAAEnC,OAAO,CAACb,MAA/C;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,IAAD;MAAM,IAAI,MAAV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAEGiC,IAAI,CAACvB,YAAL,KAAsB,MAAtB,gBACC,oBAAC,IAAD;MAAM,EAAE,EAAC,qBAAT;MAA+B,SAAS,EAAC,SAAzC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,MAAD;MACE,OAAO,EAAC,UADV;MAEE,KAAK,EAAC,SAFR;MAGE,OAAO,EAAE,MAAM;QACblD,KAAK,CAAC+D,QAAN,CACE3D,mBAAmB,CAACqE,IAAI,CAACT,aAAN,EAAqB,KAArB,CADrB;MAGD,CAPH;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GASGF,CAAC,CAAC,gBAAD,CATJ,CADF,CADD,GAcGW,IAAI,CAACvB,YAAL,KAAsB,MAAtB,gBACF,oBAAC,MAAD;MACE,OAAO,EAAC,UADV;MAEE,KAAK,EAAC,SAFR;MAGE,OAAO,EAAE,MAAM;QACblD,KAAK,CAAC+D,QAAN,CACE1D,0BAA0B,CACxBkD,QAAQ,KAAK,OAAb,GACK,GAAEkB,IAAI,CAACT,aAAc,QAAOS,IAAI,CAACI,iBAAkB,EADxD,GAEIJ,IAAI,CAACT,aAHe,CAD5B;MAOD,CAXH;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAaGF,CAAC,CAAC,oBAAD,CAbJ,CADE,GAiBF,EAjCJ,CADF,EAqCGW,IAAI,CAACvB,YAAL,KAAsB,MAAtB,iBACC,oBAAC,IAAD;MAAM,IAAI,MAAV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,IAAD;MACE,EAAE,EAAG,sBAAqBuB,IAAI,CAACT,aAAc,EAD/C;MAEE,SAAS,EAAC,SAFZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAIE,oBAAC,MAAD;MACE,OAAO,EAAC,UADV;MAEE,KAAK,EAAC,SAFR;MAGE,OAAO,EAAE,MACPhE,KAAK,CAAC+D,QAAN,CAAe7D,mBAAmB,EAAlC,CAJJ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAOG4D,CAAC,CAAC,SAAD,CAPJ,CAJF,CADF,CAtCJ,eAuDE,oBAAC,IAAD;MAAM,IAAI,MAAV;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAEGW,IAAI,CAACC,OAAL,iBACC,oBAAC,IAAD;MACE,EAAE,EAAEzE,SAAS,CAACwE,IAAI,CAACK,GAAN,EAAW,UAAX,CADf;MAEE,SAAS,EAAC,SAFZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBAIE,oBAAC,MAAD;MACE,OAAO,EAAC,WADV;MAEE,KAAK,EAAC,SAFR;MAGE,OAAO,EAAE,MACP9E,KAAK,CAAC+D,QAAN,CACE5D,cAAc,CACZyD,aAAa,CAACmB,IAAd,CACGC,QAAD,IACEA,QAAQ,CAACC,EAAT,KAAgBR,IAAI,CAACgB,WAFzB,CADY,CADhB,CAJJ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAcG3B,CAAC,CAAC,UAAD,CAdJ,CAJF,CAHJ,CAvDF,CADF,CAFF,CAjLF,CAHR,iCAiRE,oBAAC,MAAD;MAAQ,WAAW,EAAEJ,WAArB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAjRF,eAmRE,oBAAC,QAAD;MACE,YAAY,EAAE;QACZgC,QAAQ,EAAE,QADE;QAEZC,UAAU,EAAE;MAFA,CADhB;MAKE,IAAI,EAAEnC,mBALR;MAME,gBAAgB,EAAE,IANpB;MAOE,OAAO,EAAE,MAAMxD,KAAK,CAAC+D,QAAN,CAAezD,aAAa,EAA5B,CAPjB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBASE,oBAAC,wBAAD;MACE,OAAO,EAAE,MAAMN,KAAK,CAAC+D,QAAN,CAAezD,aAAa,EAA5B,CADjB;MAEE,OAAO,EAAC,SAFV;MAGE,OAAO,EAAEwD,CAAC,CAAC,YAAD,CAHZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EATF,CAnRF,eAkSE,oBAAC,QAAD;MACE,YAAY,EAAE;QACZ4B,QAAQ,EAAE,QADE;QAEZC,UAAU,EAAE;MAFA,CADhB;MAKE,IAAI,EAAElC,kBALR;MAME,gBAAgB,EAAE,IANpB;MAOE,OAAO,EAAE,MAAMzD,KAAK,CAAC+D,QAAN,CAAezD,aAAa,EAA5B,CAPjB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBASE,oBAAC,wBAAD;MACE,OAAO,EAAE,MAAMN,KAAK,CAAC+D,QAAN,CAAezD,aAAa,EAA5B,CADjB;MAEE,OAAO,EAAC,OAFV;MAGE,OAAO,EAAEwD,CAAC,CAAC,WAAD,CAHZ;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EATF,CAlSF;EAhBF;AAmUD,CA5VD;;AA8VA,eAAetE,UAAU,CAACsB,MAAD,CAAV,CAAmBsC,SAAnB,CAAf"},"metadata":{},"sourceType":"module"}