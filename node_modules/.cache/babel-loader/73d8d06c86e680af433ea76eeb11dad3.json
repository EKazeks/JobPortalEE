{"ast":null,"code":"var _jsxFileName = \"/Users/eduardkazeks/Documents/GitHub/JobPortalEE/src/components/companies/ads/adDetails.component.js\";\nimport React, { useEffect, useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Divider, Grid, Button, Snackbar } from '@material-ui/core';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport store from '../../../store';\nimport { customURL } from '../../../utils/helperFunctions';\nimport { updateAdvertisement, changeCampaign, populateVacancyForm, changeActivePostToInactive, closeSnackbar } from '../../../actions';\nimport { MySnackbarContentWrapper } from '../../../utils/snackbar.utils';\nimport { customTranslateCampaign, customTranslateStatus } from '../../../utils/customTranslate';\nimport Loader from '../../../utils/loader';\nimport axios from 'axios';\n\nconst styles = theme => ({\n  titleMargin: {\n    margin: '20px auto 24px auto',\n    [theme.breakpoints.down('sm')]: {\n      marginTop: 4\n    }\n  },\n  companyLogo: {\n    minHeight: 80,\n    minWidth: 150,\n    backgroundSize: 'contain',\n    backgroundRepeat: 'no-repeat',\n    marginBottom: 6\n  },\n  companyImgFrame: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  companyImage: {\n    minHeight: 420,\n    maxHeight: 600,\n    maxWidth: '100%',\n    [theme.breakpoints.down('xs')]: {\n      minHeight: 190,\n      maxHeight: 190,\n      width: '100%'\n    },\n    [theme.breakpoints.only('sm')]: {\n      minHeight: 360,\n      maxHeight: 420,\n      width: '100%'\n    }\n  },\n  adDetail: {\n    margin: '0px 0 50px 0',\n    padding: '0 0 50px',\n    border: '1px solid lightgray'\n  },\n  jobDesc: {\n    padding: 40\n  },\n  ctaBtn: {\n    marginBottom: 50,\n    [theme.breakpoints.up('md')]: {\n      justifyContent: 'flex-end'\n    }\n  },\n  backBtnText: {\n    color: theme.palette.secondary.main,\n    '&:hover': {\n      textDecoration: 'none',\n      color: theme.palette.primary.main\n    }\n  },\n  backBtnContainer: {\n    marginTop: 2\n  },\n  campaignType: {\n    marginRight: 16\n  }\n});\n\nconst AdDetails = _ref => {\n  let {\n    classes,\n    viewSelectedAd,\n    userRole,\n    showSuccessSnackbar,\n    showFailedSnackbar,\n    showSpinner,\n    selectedPage,\n    campaignsList,\n    props\n  } = _ref;\n  const {\n    t\n  } = useTranslation('adDetails');\n  const [jobsToRender, setJobsToRender] = useState([]);\n  selectedPage = 1; //const jobsPostNumber =  useSelector(state => state.getState().jobPostNumber);\n\n  const jobPostNumber = 653536;\n  useEffect(() => {\n    axios.get(`https://localhost:7262/jobsEn`).then(res => {\n      setJobsToRender(res.data);\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   {jobsToRender.slice(selectedPage * 10, selectedPage * 10 + 10).map(item => {\n    //     return (\n    //       <div key={item.jobPostNumber}>\n    //       <Grid>\n    //         <div>\n    //           <h1>\n    //             {item.jobTags}\n    //             {console.log(item.jobPostNumber)}\n    //           </h1>\n    //         </div>\n    //       </Grid>\n    //       </div>\n    //     )\n    //   })}\n    //   <h1>Test</h1>\n    // </div>\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }\n    }, jobsToRender.slice(selectedPage * 1, selectedPage * 1 + 1).map(item => {\n      return item !== [] && item.jobPostNumber !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        key: item.jobPostNumber,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.backBtnContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: userRole === 'company' ? '/omat-ilmoitukseni' : '/tyopaikat',\n        className: classes.backBtnText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }), \" \", t('jobs:backButton'))), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.titleMargin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        md: 7,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"ad_title_1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 19\n        }\n      }, item.jobName, 'adress'), /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"ad_title_2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        style: {\n          marginRight: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, `${item.status === 0 ? t('draft') : item.status === 1 ? t('active') : t('inactive')}`, \":\"), /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }\n      }, item.dateOfApplication))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        md: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        className: classes.ctaBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }\n      }, item.campaignType === 'Free' ? /*#__PURE__*/React.createElement(Link, {\n        to: \"/tyopaikkailmoitus/\",\n        className: \"btnLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: () => {\n          store.dispatch(populateVacancyForm(item.jobPostNumber, false));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 27\n        }\n      }, t('common:copyBtn'))) : item.campaignType === 'Free' ? /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: () => {\n          // alert('updateJOBPOSTSTATUS');\n          store.dispatch(changeActivePostToInactive(userRole === 'admin' ? `${item.jobPostNumber}admin${item.companyBusinessId}` : item.jobPostNumber));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }\n      }, t('common:inactiveBtn')) : ''), item.campaignType === 'Free' && /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/tyopaikkailmoitus/${item.jobPostNumber}`,\n        className: \"btnLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: () => store.dispatch(updateAdvertisement()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 27\n        }\n      }, t('editBtn')))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }\n      }, item.jobName && /*#__PURE__*/React.createElement(Link, {\n        to: customURL(item.url, 'campaign'),\n        className: \"btnLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => store.dispatch(changeCampaign(campaignsList.find(campaign => campaign.id === item.campaignType))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 27\n        }\n      }, t('boostBtn'))))))), /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.addMargin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.campaignType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 23\n        }\n      }, t('postType'), \": \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 23\n        }\n      }, item.campaignType)), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 23\n        }\n      }, t('postStatus'), \": \"), `Active`))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 4,\n        style: {\n          display: 'flex',\n          justifyContent: 'flex-end'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.companyLogo,\n        style: {\n          backgroundImage: `url(${item.logo ? item.logo[0].path : ''})`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 19\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.adDetail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.companyImgFrame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: item.logo && item.logo[0].path,\n        alt: item.logo ? `${item.jobName} Company-Image` : '',\n        className: item.company_image ? classes.companyImage : '',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.jobDesc,\n        dangerouslySetInnerHTML: {\n          __html: item.jobDescription\n        } // To convert rte string into html\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        className: classes.ctaBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 19\n        }\n      }, item.campaignType === 'Free' ? /*#__PURE__*/React.createElement(Link, {\n        to: \"/tyopaikkailmoitus/\",\n        className: \"btnLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: () => {\n          store.dispatch(populateVacancyForm(item.jobPostNumber, false));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }\n      }, t('common:copyBtn'))) : item.campaignType === 'Free' ? /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: () => {\n          store.dispatch(changeActivePostToInactive(userRole === 'admin' ? `${item.jobPostNumber}admin${item.companyBusinessId}` : item.jobPostNumber));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 23\n        }\n      }, t('common:inactiveBtn')) : ''), item.campaignType === 'Free' && /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/tyopaikkailmoitus/${item.jobPostNumber}`,\n        className: \"btnLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: () => store.dispatch(updateAdvertisement()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 25\n        }\n      }, t('editBtn')))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 19\n        }\n      }, item.jobName && /*#__PURE__*/React.createElement(Link, {\n        to: customURL(item.url, 'campaign'),\n        className: \"btnLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => store.dispatch(changeCampaign(campaignsList.find(campaign => campaign.id === item.campaign_id))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }\n      }, t('boostBtn')))))))) : ' ';\n    }), /*#__PURE__*/React.createElement(Loader, {\n      showSpinner: showSpinner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      open: showSuccessSnackbar,\n      autoHideDuration: 2000,\n      onClose: () => store.dispatch(closeSnackbar()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper, {\n      onClose: () => store.dispatch(closeSnackbar()),\n      variant: \"success\",\n      message: t('successMsg'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      open: showFailedSnackbar,\n      autoHideDuration: 2000,\n      onClose: () => store.dispatch(closeSnackbar()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper, {\n      onClose: () => store.dispatch(closeSnackbar()),\n      variant: \"error\",\n      message: t('failedMsg'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }\n    })))\n  );\n};\n\nexport default withStyles(styles)(AdDetails);","map":{"version":3,"names":["React","useEffect","useState","withStyles","Divider","Grid","Button","Snackbar","ArrowBackIosIcon","Link","useTranslation","store","customURL","updateAdvertisement","changeCampaign","populateVacancyForm","changeActivePostToInactive","closeSnackbar","MySnackbarContentWrapper","customTranslateCampaign","customTranslateStatus","Loader","axios","styles","theme","titleMargin","margin","breakpoints","down","marginTop","companyLogo","minHeight","minWidth","backgroundSize","backgroundRepeat","marginBottom","companyImgFrame","display","alignItems","justifyContent","companyImage","maxHeight","maxWidth","width","only","adDetail","padding","border","jobDesc","ctaBtn","up","backBtnText","color","palette","secondary","main","textDecoration","primary","backBtnContainer","campaignType","marginRight","AdDetails","classes","viewSelectedAd","userRole","showSuccessSnackbar","showFailedSnackbar","showSpinner","selectedPage","campaignsList","props","t","jobsToRender","setJobsToRender","jobPostNumber","get","then","res","data","slice","map","item","undefined","jobName","status","dateOfApplication","dispatch","companyBusinessId","url","find","campaign","id","addMargin","backgroundImage","logo","path","company_image","__html","jobDescription","campaign_id","vertical","horizontal"],"sources":["/Users/eduardkazeks/Documents/GitHub/JobPortalEE/src/components/companies/ads/adDetails.component.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Divider, Grid, Button, Snackbar } from '@material-ui/core';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport store from '../../../store';\nimport { customURL } from '../../../utils/helperFunctions';\nimport { updateAdvertisement, changeCampaign, populateVacancyForm, changeActivePostToInactive, closeSnackbar } from '../../../actions';\nimport { MySnackbarContentWrapper } from '../../../utils/snackbar.utils';\nimport { customTranslateCampaign, customTranslateStatus } from '../../../utils/customTranslate';\nimport Loader from '../../../utils/loader';\nimport axios from 'axios';\n\nconst styles = theme => ({\n  titleMargin: {\n    margin: '20px auto 24px auto',\n    [theme.breakpoints.down('sm')]: {\n      marginTop: 4,\n    },\n  },\n  companyLogo: {\n    minHeight: 80,\n    minWidth: 150,\n    backgroundSize: 'contain',\n    backgroundRepeat: 'no-repeat',\n    marginBottom: 6,\n  },\n  companyImgFrame: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  companyImage: {\n    minHeight: 420,\n    maxHeight: 600,\n    maxWidth: '100%',\n    [theme.breakpoints.down('xs')]: {\n      minHeight: 190,\n      maxHeight: 190,\n      width: '100%',\n    },\n    [theme.breakpoints.only('sm')]: {\n      minHeight: 360,\n      maxHeight: 420,\n      width: '100%',\n    },\n  },\n  adDetail: {\n    margin: '0px 0 50px 0',\n    padding: '0 0 50px',\n    border: '1px solid lightgray',\n  },\n  jobDesc: {\n    padding: 40,\n  },\n  ctaBtn: {\n    marginBottom: 50,\n    [theme.breakpoints.up('md')]: {\n      justifyContent: 'flex-end',\n    },\n  },\n  backBtnText: {\n    color: theme.palette.secondary.main,\n    '&:hover': {\n      textDecoration: 'none',\n      color: theme.palette.primary.main,\n    },\n  },\n  backBtnContainer: {\n    marginTop: 2,\n  },\n  campaignType: {\n    marginRight: 16,\n  },\n});\n\nconst AdDetails = ({ classes, viewSelectedAd, userRole, showSuccessSnackbar, showFailedSnackbar, showSpinner, selectedPage, campaignsList, props }) => {\n  const { t } = useTranslation('adDetails');\n  const [jobsToRender, setJobsToRender] = useState([]);\n  selectedPage = 1;\n  //const jobsPostNumber =  useSelector(state => state.getState().jobPostNumber);\n  const jobPostNumber = 653536;\n\n  useEffect(() => {\n    axios\n    .get(`https://localhost:7262/jobsEn`)\n    .then(res => {\n      setJobsToRender(res.data);\n    });\n  }, []);\n\n  return (\n    // <div>\n    //   {jobsToRender.slice(selectedPage * 10, selectedPage * 10 + 10).map(item => {\n    //     return (\n    //       <div key={item.jobPostNumber}>\n    //       <Grid>\n    //         <div>\n    //           <h1>\n\n    //             {item.jobTags}\n    //             {console.log(item.jobPostNumber)}\n    //           </h1>\n    //         </div>\n    //       </Grid>\n    //       </div>\n    //     )\n    //   })}\n    //   <h1>Test</h1>\n    // </div>\n    <div>\n   {jobsToRender.slice(selectedPage * 1, selectedPage * 1 + 1).map(item => {\n        return (\n          item !== [] && item.jobPostNumber !== undefined ? (\n            <div className=\"container\" key={item.jobPostNumber}>\n            <div className={classes.backBtnContainer}>\n              <Link to={userRole === 'company' ? '/omat-ilmoitukseni' : '/tyopaikat'} className={classes.backBtnText}>\n                <ArrowBackIosIcon /> {t('jobs:backButton')}\n              </Link>\n            </div>\n            <div className={classes.titleMargin}>\n              <Grid container>\n                <Grid item sm={12} md={7}>\n                  <h2 className=\"ad_title_1\">\n                    {/* {`${item.jobName}, ${item.jobPostAsukohaAddress.map(address => {\n                    {\n                      if (address.address[17]) {\n                        return address.address\n                          .split(',')\n                          .splice(1)\n                          .toString();\n                      } else return address.address;\n                    }\n                  })}`} */}\n                  {item.jobName}\n                  {'adress'}\n                  </h2>\n                  <h6 className=\"ad_title_2\">\n                    <strong style={{ marginRight: 10 }}>{`${item.status === 0 ? t('draft') : item.status === 1 ? t('active') : t('inactive')}`}:</strong>\n                    <strong>{item.dateOfApplication}</strong>\n                  </h6>\n                </Grid>\n                <Grid item sm={12} md={5}>\n                  <Grid container spacing={2} className={classes.ctaBtn}>\n                    <Grid item>\n                      {/* If post is active post, show Inactive btn. If it is inactive post, show copy btn in Addetails */}\n                      {item.campaignType === 'Free' ? (\n                        <Link to=\"/tyopaikkailmoitus/\" className=\"btnLink\">\n                          <Button\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            onClick={() => {\n                              store.dispatch(populateVacancyForm(item.jobPostNumber, false));\n                            }}\n                          >\n                            {t('common:copyBtn')}\n                          </Button>\n                        </Link>\n                      ) : item.campaignType === 'Free' ? (\n                        <Button\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            // alert('updateJOBPOSTSTATUS');\n                            store.dispatch(\n                              changeActivePostToInactive(userRole === 'admin' ? `${item.jobPostNumber}admin${item.companyBusinessId}` : item.jobPostNumber),\n                            );\n                          }}\n                        >\n                          {t('common:inactiveBtn')}\n                        </Button>\n                      ) : (\n                        ''\n                      )}\n                    </Grid>\n                    {item.campaignType === 'Free' && (\n                      <Grid item>\n                        <Link to={`/tyopaikkailmoitus/${item.jobPostNumber}`} className=\"btnLink\">\n                          <Button variant=\"outlined\" color=\"primary\" onClick={() => store.dispatch(updateAdvertisement())}>\n                            {t('editBtn')}\n                          </Button>\n                        </Link>\n                      </Grid>\n                    )}\n                    <Grid item>\n                      {/* To avoid errors when viewSelectedAd is empty array */}\n                      {item.jobName && (\n                        <Link to={customURL(item.url, 'campaign')} className=\"btnLink\">\n                          <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => store.dispatch(changeCampaign(campaignsList.find(campaign => campaign.id === item.campaignType)))}\n                          >\n                            {t('boostBtn')}\n                          </Button>\n                        </Link>\n                      )}\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Divider />\n            </div>\n            <div className={classes.addMargin}>\n              <Grid container>\n                <Grid item sm={8}>\n                  <div className={classes.campaignType}>\n                    <h6>\n                      <strong>{t('postType')}: </strong>\n                      {/* <span>{customTranslateCampaign(item.campaignType)}</span> */}\n                      <span>{item.campaignType}</span>\n                    </h6>\n                    <h6>\n                      <strong>{t('postStatus')}: </strong>\n                      {/* {customTranslateStatus(item.campaignType)} */}\n                      {`Active`}\n                    </h6>\n                  </div>\n                </Grid>\n                <Grid item sm={4} style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                  <div\n                    className={classes.companyLogo}\n                    style={{\n                      backgroundImage: `url(${item.logo ? item.logo[0].path : ''})`,\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </div>\n            <div className={classes.adDetail}>\n              <div className={classes.companyImgFrame}>\n                <img\n                  src={item.logo && item.logo[0].path}\n                  alt={item.logo ? `${item.jobName} Company-Image` : ''}\n                  className={item.company_image ? classes.companyImage : ''}\n                />\n              </div>\n              <div\n                className={classes.jobDesc}\n                dangerouslySetInnerHTML={{\n                  __html: item.jobDescription,\n                }} // To convert rte string into html\n              />\n            </div>\n            <Grid container>\n              <Grid item sm={12} md={6} />\n              <Grid item sm={12} md={6}>\n                <Grid container spacing={2} className={classes.ctaBtn}>\n                  <Grid item>\n                    {/* If post is active post, show Inactive btn. If it is inactive post, show copy btn in Addetails */}\n                    {item.campaignType === 'Free' ? (\n                      <Link to=\"/tyopaikkailmoitus/\" className=\"btnLink\">\n                        <Button\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            store.dispatch(populateVacancyForm(item.jobPostNumber, false));\n                          }}\n                        >\n                          {t('common:copyBtn')}\n                        </Button>\n                      </Link>\n                    ) : item.campaignType === 'Free' ? (\n                      <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={() => {\n                          store.dispatch(\n                            changeActivePostToInactive(userRole === 'admin' ? `${item.jobPostNumber}admin${item.companyBusinessId}` : item.jobPostNumber),\n                          );\n                        }}\n                      >\n                        {t('common:inactiveBtn')}\n                      </Button>\n                    ) : (\n                      ''\n                    )}\n                  </Grid>\n                  {item.campaignType === 'Free' && (\n                    <Grid item>\n                      <Link to={`/tyopaikkailmoitus/${item.jobPostNumber}`} className=\"btnLink\">\n                        <Button variant=\"outlined\" color=\"primary\" onClick={() => store.dispatch(updateAdvertisement())}>\n                          {t('editBtn')}\n                        </Button>\n                      </Link>\n                    </Grid>\n                  )}\n                  <Grid item>\n                    {/* To avoid errors when viewSelectedAd is empty array */}\n                    {item.jobName && (\n                      <Link to={customURL(item.url, 'campaign')} className=\"btnLink\">\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => store.dispatch(changeCampaign(campaignsList.find(campaign => campaign.id === item.campaign_id)))}\n                        >\n                          {t('boostBtn')}\n                        </Button>\n                      </Link>\n                    )}\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </div>\n            ) : (\n              ' '\n            )\n        );\n      })}\n      \n      <Loader showSpinner={showSpinner} />\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={showSuccessSnackbar}\n        autoHideDuration={2000}\n        onClose={() => store.dispatch(closeSnackbar())}\n      >\n        <MySnackbarContentWrapper onClose={() => store.dispatch(closeSnackbar())} variant=\"success\" message={t('successMsg')} />\n      </Snackbar>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={showFailedSnackbar}\n        autoHideDuration={2000}\n        onClose={() => store.dispatch(closeSnackbar())}\n      >\n        <MySnackbarContentWrapper onClose={() => store.dispatch(closeSnackbar())} variant=\"error\" message={t('failedMsg')} />\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(AdDetails);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}