{"ast":null,"code":"import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage/session'; // saving in sessionStorage\n\nimport rootSaga from './sagas';\nimport rootReducer from './reducers'; // redux persist\n\nconst persistConfig = {\n  key: 'root',\n  storage // blacklist: ['jobsList']\n  // whitelist: ['form', 'client']\n\n}; // create the saga middleware\n\nconst sagaMiddleware = createSagaMiddleware();\nconst composeEnhancers = process.env.NODE_ENV === 'development' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst createStoreWithMiddleware = composeEnhancers(applyMiddleware(sagaMiddleware))(createStore);\nconst initialState = {};\n/* Redux-Persist + Store */\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = createStoreWithMiddleware(persistedReducer, initialState);\n/* Run saga */\n\nsagaMiddleware.run(rootSaga);\nexport default store;\nexport const persistor = persistStore(store);","map":{"version":3,"names":["createStore","applyMiddleware","compose","createSagaMiddleware","persistStore","persistReducer","storage","rootSaga","rootReducer","persistConfig","key","sagaMiddleware","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStoreWithMiddleware","initialState","persistedReducer","store","run","persistor"],"sources":["/Users/eduardkazeks/Documents/GitHub/JobPortalEE/src/store.js"],"sourcesContent":["import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage/session'; // saving in sessionStorage\nimport rootSaga from './sagas';\nimport rootReducer from './reducers';\n\n// redux persist\nconst persistConfig = {\n  key: 'root',\n  storage,\n  // blacklist: ['jobsList']\n  // whitelist: ['form', 'client']\n};\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers = (process.env.NODE_ENV === 'development' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst createStoreWithMiddleware = composeEnhancers(applyMiddleware(sagaMiddleware))(createStore);\n\nconst initialState = {};\n\n/* Redux-Persist + Store */\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStoreWithMiddleware(persistedReducer, initialState);\n\n/* Run saga */\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n\nexport const persistor = persistStore(store);\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,mCAApB,C,CAAyD;;AACzD,OAAOC,QAAP,MAAqB,SAArB;AACA,OAAOC,WAAP,MAAwB,YAAxB,C,CAEA;;AACA,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MADe;EAEpBJ,OAFoB,CAGpB;EACA;;AAJoB,CAAtB,C,CAOA;;AACA,MAAMK,cAAc,GAAGR,oBAAoB,EAA3C;AAEA,MAAMS,gBAAgB,GAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0CC,MAAM,CAACC,oCAAlD,IAA2Ff,OAApH;AAEA,MAAMgB,yBAAyB,GAAGN,gBAAgB,CAACX,eAAe,CAACU,cAAD,CAAhB,CAAhB,CAAkDX,WAAlD,CAAlC;AAEA,MAAMmB,YAAY,GAAG,EAArB;AAEA;;AAEA,MAAMC,gBAAgB,GAAGf,cAAc,CAACI,aAAD,EAAgBD,WAAhB,CAAvC;AAEA,MAAMa,KAAK,GAAGH,yBAAyB,CAACE,gBAAD,EAAmBD,YAAnB,CAAvC;AAEA;;AACAR,cAAc,CAACW,GAAf,CAAmBf,QAAnB;AAEA,eAAec,KAAf;AAEA,OAAO,MAAME,SAAS,GAAGnB,YAAY,CAACiB,KAAD,CAA9B"},"metadata":{},"sourceType":"module"}