{"ast":null,"code":"import i18next from 'i18next';\nimport store from '../store';\nexport const registerValidate = values => {\n  const errors = {};\n  const requiredFields = ['firstName', 'lastName', 'email', 'password', 'user_type', 'agreement_terms'];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = i18next.t('validation:fieldRequired');\n    }\n  });\n\n  if (values.password && !/^(?=.*[äöåa-z])(?=.*[ÄÖÅA-Z])(?=.*\\d)[äöåa-zÄÖÅA-Z\\d]*\\S{8,}$/.test(values.password)) {\n    errors.password = i18next.t('validation:invalidPassword');\n  }\n\n  if (values.password !== values.passwordConfirmation) {\n    errors.passwordConfirmation = i18next.t('validation:unmatchedPassword');\n  }\n\n  if (!values.passwordConfirmation) {\n    errors.passwordConfirmation = i18next.t('validation:confirmPassword');\n  }\n\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = i18next.t('validation:invalidEmail');\n  } // console.log(\"errors\", errors);\n\n\n  return errors;\n};\nexport const signInValidate = values => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = i18next.t('validation:fieldRequired');\n  }\n\n  if (!values.password) {\n    errors.password = i18next.t('validation:fieldRequired');\n  }\n\n  return errors;\n};\nexport const jobPostFormValidate = values => {\n  const errors = {};\n  const extra_service = store.getState().advertisement.extraService;\n  const requiredFields = ['jobTitle', 'jobCategory', 'jobType', 'jobDuration', 'job_hours', 'job_location', 'is_agreement'];\n\n  if (!extra_service.sos) {\n    requiredFields.push('job_description');\n  }\n\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = i18next.t('validation:fieldRequired');\n    }\n  });\n\n  if (values.due_date && // validate for date that is less than today\n  new Date(values.due_date).setHours(0, 0, 0, 0) - new Date().setHours(0, 0, 0, 0) < 0 || values.due_date && // validate for date that is less than today\n  new Date(values.due_date).setHours(0, 0, 0, 0) - new Date().setHours(0, 0, 0, 0) === 0 || // validate for date that is more than allowed 4 weeks - if given date is more than +30 days from today\n  values.due_date && new Date(values.due_date).getTime() > new Date().getTime() + 30 * 24 * 60 * 60 * 1000) {\n    errors.due_date = i18next.t('validation:invalidDueDate');\n  }\n\n  if (values.job_description && isRteEmpty(values.job_description)) {\n    errors.job_description = i18next.t('validation:fieldRequired');\n  }\n\n  if (values.is_email_notification && !values.email) {\n    errors.email = i18next.t('validation:fieldRequired');\n  }\n\n  if (values.is_email_notification && values.email && isEmpty(values.email)) {\n    errors.email = i18next.t('validation:fieldRequired');\n  }\n\n  if (values.application_link && !/^((ftp|http|https):\\/\\/)?(www.)?(?!.*(ftp|http|https|www.))[a-zA-Z0-9_-]+(\\.[a-zA-Z]+)+((\\/)[\\w#]+)*(\\/\\w+\\?[a-zA-Z0-9_]+=\\w+(&[a-zA-Z0-9_]+=\\w+)*)?$/gm.test(values.application_link)) {\n    errors.application_link = i18next.t('validation:urlInvalid');\n  }\n\n  return errors;\n};\nexport const passwordValidate = values => {\n  const errors = {};\n  const requiredFields = ['current_password', 'new_password', 'new_password_confirmation'];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = i18next.t('validation:fieldRequired');\n    }\n  });\n\n  if (values.new_password && !/^(?=.*[äöåa-z])(?=.*[ÄÖÅA-Z])(?=.*\\d)[äöåa-zÄÖÅA-Z\\d]*\\S{8,}$/.test(values.new_password)) {\n    errors.new_password = i18next.t('validation:invalidPassword');\n  }\n\n  if (values.new_password !== values.new_password_confirmation) {\n    errors.new_password_confirmation = 'Antamasi salasanat eivät täsmää';\n  }\n\n  return errors;\n};\nexport const profileValidate = values => {\n  const errors = {};\n  const requiredFields = ['company_name', 'firstname', 'lastname', 'email', 'contact_number', 'business_id', 'address', 'city', 'zip_code'];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = i18next.t('validation:fieldRequired');\n    }\n  }); //\n  // city validation\n\n  if (values.city && !/^[äåöA-Z]+$/i.test(values.city)) {\n    errors.city = i18next.t('validation:cityInvalid');\n  }\n\n  if (values.company_name && isEmpty(values.company_name)) errors['company_name'] = i18next.t('validation:emptyStr');\n  if (values.address && isEmpty(values.address)) errors['address'] = i18next.t('validation:emptyStr'); // zip code validation\n\n  if (values.zip_code && !/^\\d{5}$/i.test(values.zip_code)) {\n    errors.zip_code = i18next.t('validation:postInvalid');\n  } // business_id validation\n\n\n  if (values.business_id && !/^\\d{7}-\\d{1}$/i.test(values.business_id)) {\n    errors.business_id = i18next.t('validation:businessIdInvalid');\n  } // phoneNumber validation\n\n\n  if (values.contact_number && !/^\\+?[0-9 ]{7,13}$/i.test(values.contact_number)) {\n    errors.contact_number = i18next.t('validation:phoneInvalid');\n  }\n\n  if (values.company_url && !/^((ftp|http|https):\\/\\/)?(www.)?(?!.*(ftp|http|https|www.))[a-zA-Z0-9_-]+(\\.[a-zA-Z]+)+((\\/)[\\w#]+)*(\\/\\w+\\?[a-zA-Z0-9_]+=\\w+(&[a-zA-Z0-9_]+=\\w+)*)?$/gm.test(values.company_url)) {\n    errors.company_url = i18next.t('validation:urlInvalid');\n  } // For additional users\n\n\n  if (values.companyUser) {\n    const userArrayErrors = [];\n    values.companyUser.forEach((user, i) => {\n      const userErrors = {};\n      const reqUserFields = ['firstname', 'lastname', 'email'];\n      reqUserFields.forEach(field => {\n        if (!user || !user[field]) {\n          userErrors[field] = i18next.t('validation:fieldRequired');\n          userArrayErrors[i] = userErrors;\n        }\n      });\n\n      if (values.companyUser[i].email && (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.companyUser[i].email) || values.companyUser[i].email === values.email)) {\n        userErrors.email = i18next.t('validation:invalidEmail');\n        userArrayErrors[i] = userErrors;\n      }\n\n      if (userArrayErrors.length) {\n        errors.companyUser = userArrayErrors;\n      }\n    });\n  }\n\n  return errors;\n};\nexport const jobseekerProfileValidate = values => {\n  const errors = {};\n  const requiredFields = ['firstname', 'lastname', 'email', 'agreement_terms', 'profile_description'];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = i18next.t('validation:fieldRequired');\n    }\n  });\n\n  if (values.firstname && isEmpty(values.firstname)) {\n    errors['firstname'] = i18next.t('validation:emptyStr');\n  }\n\n  if (values.lastname && isEmpty(values.lastname)) {\n    errors['lastname'] = i18next.t('validation:emptyStr');\n  }\n\n  if (values.profile_description && isEmpty(values.profile_description)) {\n    errors['profile_description'] = i18next.t('validation:emptyStr');\n  }\n\n  return errors;\n};\nexport const jobPreferenceValidate = values => {\n  const errors = {};\n  const requiredFields = ['job_category', 'notice_frequency', 'job_location', 'job_type', 'job_hours'];\n  requiredFields.forEach(field => {\n    if (!values[field] || values[field].length === 0) {\n      errors[field] = i18next.t('validation:fieldRequired');\n    }\n  });\n  return errors;\n};\nexport const marketingDetailsValidate = values => {\n  const errors = {};\n  const requiredFields = ['marketing_platform', 'more_budget'];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = i18next.t('validation:fieldRequired');\n    }\n  });\n\n  if (values.more_budget === 'yes' && !values.marketing_budget) {\n    errors.marketing_budget = i18next.t('validation:fieldRequired');\n  }\n\n  if (values.marketing_budget && (parseInt(values.marketing_budget) < 1 || !/^[0-9]+$/.test(values.marketing_budget))) {\n    errors.marketing_budget = i18next.t('validation:invalidAmount');\n  }\n\n  return errors;\n};\nexport const interviewDetailsValidate = values => {\n  const errors = {};\n  const requiredFields = ['interview_title', 'interview_msg', 'interview_date', 'interview_time'];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = i18next.t('validation:fieldRequired');\n    }\n  });\n\n  if (values.interview_title && isMaxLengthExceeded(values.interview_title, 100)) {\n    errors.interview_title = i18next.t('validation:maxLengthInterviewTitle');\n  }\n\n  if (values.interview_msg && isMaxLengthExceeded(values.interview_msg, 1000)) {\n    errors.interview_msg = i18next.t('validation:maxLengthInterview');\n  }\n\n  if (values.interview_date && typeof values.interview_date === 'string' && //For dates coming from backend\n  new Date(values.interview_date) < new Date()) {\n    errors.interview_date = i18next.t('validation:invalidDate');\n  }\n\n  if (!values.interview_msg || values.interview_msg && isRteEmpty(values.interview_msg)) {\n    errors.interview_msg = i18next.t('validation:fieldRequired&maxLength');\n  }\n\n  if (values.interview_place && isMaxLengthExceeded(values.interview_place, 100)) {\n    errors.interview_place = i18next.t('validation:maxLengthInterviewTitle');\n  }\n  /* if (\r\n    values.application_notes &&\r\n    isMaxLengthExceeded(values.application_notes, 100)\r\n  ) {\r\n    errors.application_notes = i18next.t('validation:maxLengthInterview');\r\n  } */\n\n\n  return errors;\n};\nexport const applicationFormValidate = values => {\n  const errors = {};\n  const requiredFields = ['firstname', 'lastname', 'email', 'agreement_terms'];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = i18next.t('validation:fieldRequired');\n    }\n  });\n\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = i18next.t('validation:invalidEmail');\n  } // phoneNumber validation\n\n\n  if (values.contact_number && !/^\\+?[0-9 ]{7,13}$/i.test(values.contact_number)) {\n    errors.contact_number = i18next.t('validation:phoneInvalid');\n  }\n\n  if (values.application_description && isMaxLengthExceeded(values.application_description, 7000)) {\n    errors.application_description = i18next.t('validation:maxLengthApplicationDesc');\n  }\n\n  return errors;\n};\nexport const campaignValidate = values => {\n  const errors = {};\n\n  if (!values.due_date) {\n    errors.due_date = i18next.t('validation:fieldRequired');\n  }\n\n  if (values.due_date && // validate for date that is less than today\n  new Date(values.due_date).setHours(0, 0, 0, 0) - new Date().setHours(0, 0, 0, 0) < 0 || // validate for date that is more than allowed 4 weeks - if given date is more than +30 days from today\n  values.due_date && new Date(values.due_date).getTime() > new Date().getTime() + 30 * 24 * 60 * 60 * 1000) {\n    errors.due_date = i18next.t('validation:invalidDueDate');\n  }\n\n  return errors;\n};\nexport const usersProfileValidate = values => {\n  const errors = {};\n  let requiredFields;\n\n  if (values.company_id) {\n    requiredFields = ['company_name', 'firstname', 'lastname', 'email'];\n  } else {\n    requiredFields = ['firstname', 'lastname', 'email'];\n  }\n\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = i18next.t('validation:fieldRequired');\n    }\n  }); //\n\n  if (values.company_name && isEmpty(values.company_name)) {\n    errors['company_name'] = i18next.t('validation:emptyStr');\n  }\n\n  if (values.firstname && isEmpty(values.firstname)) {\n    errors['firstname'] = i18next.t('validation:emptyStr');\n  }\n\n  if (values.lastname && isEmpty(values.lastname)) {\n    errors['lastname'] = i18next.t('validation:emptyStr');\n  } // business_id validation\n\n\n  if (values.business_id && !/^\\d{7}-\\d{1}$/i.test(values.business_id)) {\n    errors.business_id = i18next.t('validation:businessIdInvalid');\n  } // phoneNumber validation\n\n\n  if (values.contact_number && !/^\\+?[0-9 ]{7,13}$/i.test(values.contact_number)) {\n    errors.contact_number = i18next.t('validation:phoneInvalid');\n  }\n\n  if (values.company_url && !/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_.~#()?&//=]*)/gim.test(values.company_url)) {\n    errors.company_url = i18next.t('validation:urlInvalid');\n  }\n\n  return errors;\n};\n\nconst isEmpty = str => {\n  return !str.trim().length;\n};\n\nexport const isRteEmpty = str => {\n  var regex = /(<([^>]+)>)/gi;\n  const text = str.replace(regex, '').replace(/&nbsp;/g, '').replace(/\\s/g, '');\n  return text.length === 0 ? true : false;\n};\n\nconst isMaxLengthExceeded = (str, length) => {\n  const strLength = str.length; //console.log('isMaxLengthExceeded', strLength);\n\n  return strLength > length ? true : false;\n};","map":{"version":3,"names":["i18next","store","registerValidate","values","errors","requiredFields","forEach","field","t","password","test","passwordConfirmation","email","signInValidate","jobPostFormValidate","extra_service","getState","advertisement","extraService","sos","push","due_date","Date","setHours","getTime","job_description","isRteEmpty","is_email_notification","isEmpty","application_link","passwordValidate","new_password","new_password_confirmation","profileValidate","city","company_name","address","zip_code","business_id","contact_number","company_url","companyUser","userArrayErrors","user","i","userErrors","reqUserFields","length","jobseekerProfileValidate","firstname","lastname","profile_description","jobPreferenceValidate","marketingDetailsValidate","more_budget","marketing_budget","parseInt","interviewDetailsValidate","interview_title","isMaxLengthExceeded","interview_msg","interview_date","interview_place","applicationFormValidate","application_description","campaignValidate","usersProfileValidate","company_id","str","trim","regex","text","replace","strLength"],"sources":["C:/Users/shuli/OneDrive/Desktop/Work/JobportalN/JobPortalEE/src/containers/validate.js"],"sourcesContent":["import i18next from 'i18next';\r\nimport store from '../store';\r\n\r\nexport const registerValidate = values => {\r\n  const errors = {};\r\n  const requiredFields = ['firstName', 'lastName', 'email', 'password', 'user_type', 'agreement_terms'];\r\n\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = i18next.t('validation:fieldRequired');\r\n    }\r\n  });\r\n\r\n  if (values.password && !/^(?=.*[äöåa-z])(?=.*[ÄÖÅA-Z])(?=.*\\d)[äöåa-zÄÖÅA-Z\\d]*\\S{8,}$/.test(values.password)) {\r\n    errors.password = i18next.t('validation:invalidPassword');\r\n  }\r\n\r\n  if (values.password !== values.passwordConfirmation) {\r\n    errors.passwordConfirmation = i18next.t('validation:unmatchedPassword');\r\n  }\r\n\r\n  if (!values.passwordConfirmation) {\r\n    errors.passwordConfirmation = i18next.t('validation:confirmPassword');\r\n  }\r\n\r\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = i18next.t('validation:invalidEmail');\r\n  }\r\n\r\n  // console.log(\"errors\", errors);\r\n  return errors;\r\n};\r\n\r\nexport const signInValidate = values => {\r\n  const errors = {};\r\n  if (!values.email) {\r\n    errors.email = i18next.t('validation:fieldRequired');\r\n  }\r\n  if (!values.password) {\r\n    errors.password = i18next.t('validation:fieldRequired');\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport const jobPostFormValidate = values => {\r\n  const errors = {};\r\n  const extra_service = store.getState().advertisement.extraService;\r\n  const requiredFields = ['jobTitle', 'jobCategory', 'jobType', 'jobDuration', 'job_hours', 'job_location', 'is_agreement'];\r\n\r\n  if (!extra_service.sos) {\r\n    requiredFields.push('job_description');\r\n  }\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = i18next.t('validation:fieldRequired');\r\n    }\r\n  });\r\n\r\n  if (\r\n    (values.due_date &&\r\n      // validate for date that is less than today\r\n      new Date(values.due_date).setHours(0, 0, 0, 0) - new Date().setHours(0, 0, 0, 0) < 0) ||\r\n    (values.due_date &&\r\n      // validate for date that is less than today\r\n      new Date(values.due_date).setHours(0, 0, 0, 0) - new Date().setHours(0, 0, 0, 0) === 0) ||\r\n    // validate for date that is more than allowed 4 weeks - if given date is more than +30 days from today\r\n    (values.due_date && new Date(values.due_date).getTime() > new Date().getTime() + 30 * 24 * 60 * 60 * 1000)\r\n  ) {\r\n    errors.due_date = i18next.t('validation:invalidDueDate');\r\n  }\r\n\r\n  if (values.job_description && isRteEmpty(values.job_description)) {\r\n    errors.job_description = i18next.t('validation:fieldRequired');\r\n  }\r\n\r\n  if (values.is_email_notification && !values.email) {\r\n    errors.email = i18next.t('validation:fieldRequired');\r\n  }\r\n  if (values.is_email_notification && values.email && isEmpty(values.email)) {\r\n    errors.email = i18next.t('validation:fieldRequired');\r\n  }\r\n  if (\r\n    values.application_link &&\r\n    !/^((ftp|http|https):\\/\\/)?(www.)?(?!.*(ftp|http|https|www.))[a-zA-Z0-9_-]+(\\.[a-zA-Z]+)+((\\/)[\\w#]+)*(\\/\\w+\\?[a-zA-Z0-9_]+=\\w+(&[a-zA-Z0-9_]+=\\w+)*)?$/gm.test(\r\n      values.application_link,\r\n    )\r\n  ) {\r\n    errors.application_link = i18next.t('validation:urlInvalid');\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport const passwordValidate = values => {\r\n  const errors = {};\r\n  const requiredFields = ['current_password', 'new_password', 'new_password_confirmation'];\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = i18next.t('validation:fieldRequired');\r\n    }\r\n  });\r\n\r\n  if (values.new_password && !/^(?=.*[äöåa-z])(?=.*[ÄÖÅA-Z])(?=.*\\d)[äöåa-zÄÖÅA-Z\\d]*\\S{8,}$/.test(values.new_password)) {\r\n    errors.new_password = i18next.t('validation:invalidPassword');\r\n  }\r\n\r\n  if (values.new_password !== values.new_password_confirmation) {\r\n    errors.new_password_confirmation = 'Antamasi salasanat eivät täsmää';\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport const profileValidate = values => {\r\n  const errors = {};\r\n  const requiredFields = ['company_name', 'firstname', 'lastname', 'email', 'contact_number', 'business_id', 'address', 'city', 'zip_code'];\r\n\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = i18next.t('validation:fieldRequired');\r\n    }\r\n  });\r\n\r\n  //\r\n\r\n  // city validation\r\n  if (values.city && !/^[äåöA-Z]+$/i.test(values.city)) {\r\n    errors.city = i18next.t('validation:cityInvalid');\r\n  }\r\n  if (values.company_name && isEmpty(values.company_name)) errors['company_name'] = i18next.t('validation:emptyStr');\r\n\r\n  if (values.address && isEmpty(values.address)) errors['address'] = i18next.t('validation:emptyStr');\r\n\r\n  // zip code validation\r\n  if (values.zip_code && !/^\\d{5}$/i.test(values.zip_code)) {\r\n    errors.zip_code = i18next.t('validation:postInvalid');\r\n  }\r\n\r\n  // business_id validation\r\n  if (values.business_id && !/^\\d{7}-\\d{1}$/i.test(values.business_id)) {\r\n    errors.business_id = i18next.t('validation:businessIdInvalid');\r\n  }\r\n\r\n  // phoneNumber validation\r\n  if (values.contact_number && !/^\\+?[0-9 ]{7,13}$/i.test(values.contact_number)) {\r\n    errors.contact_number = i18next.t('validation:phoneInvalid');\r\n  }\r\n\r\n  if (\r\n    values.company_url &&\r\n    !/^((ftp|http|https):\\/\\/)?(www.)?(?!.*(ftp|http|https|www.))[a-zA-Z0-9_-]+(\\.[a-zA-Z]+)+((\\/)[\\w#]+)*(\\/\\w+\\?[a-zA-Z0-9_]+=\\w+(&[a-zA-Z0-9_]+=\\w+)*)?$/gm.test(\r\n      values.company_url,\r\n    )\r\n  ) {\r\n    errors.company_url = i18next.t('validation:urlInvalid');\r\n  }\r\n\r\n  // For additional users\r\n\r\n  if (values.companyUser) {\r\n    const userArrayErrors = [];\r\n\r\n    values.companyUser.forEach((user, i) => {\r\n      const userErrors = {};\r\n\r\n      const reqUserFields = ['firstname', 'lastname', 'email'];\r\n\r\n      reqUserFields.forEach(field => {\r\n        if (!user || !user[field]) {\r\n          userErrors[field] = i18next.t('validation:fieldRequired');\r\n          userArrayErrors[i] = userErrors;\r\n        }\r\n      });\r\n\r\n      if (\r\n        values.companyUser[i].email &&\r\n        (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.companyUser[i].email) || values.companyUser[i].email === values.email)\r\n      ) {\r\n        userErrors.email = i18next.t('validation:invalidEmail');\r\n        userArrayErrors[i] = userErrors;\r\n      }\r\n      if (userArrayErrors.length) {\r\n        errors.companyUser = userArrayErrors;\r\n      }\r\n    });\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport const jobseekerProfileValidate = values => {\r\n  const errors = {};\r\n  const requiredFields = ['firstname', 'lastname', 'email', 'agreement_terms', 'profile_description'];\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = i18next.t('validation:fieldRequired');\r\n    }\r\n  });\r\n\r\n  if (values.firstname && isEmpty(values.firstname)) {\r\n    errors['firstname'] = i18next.t('validation:emptyStr');\r\n  }\r\n\r\n  if (values.lastname && isEmpty(values.lastname)) {\r\n    errors['lastname'] = i18next.t('validation:emptyStr');\r\n  }\r\n\r\n  if (values.profile_description && isEmpty(values.profile_description)) {\r\n    errors['profile_description'] = i18next.t('validation:emptyStr');\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport const jobPreferenceValidate = values => {\r\n  const errors = {};\r\n  const requiredFields = ['job_category', 'notice_frequency', 'job_location', 'job_type', 'job_hours'];\r\n  requiredFields.forEach(field => {\r\n    if (!values[field] || values[field].length === 0) {\r\n      errors[field] = i18next.t('validation:fieldRequired');\r\n    }\r\n  });\r\n\r\n  return errors;\r\n};\r\n\r\nexport const marketingDetailsValidate = values => {\r\n  const errors = {};\r\n  const requiredFields = ['marketing_platform', 'more_budget'];\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = i18next.t('validation:fieldRequired');\r\n    }\r\n  });\r\n  if (values.more_budget === 'yes' && !values.marketing_budget) {\r\n    errors.marketing_budget = i18next.t('validation:fieldRequired');\r\n  }\r\n  if (values.marketing_budget && (parseInt(values.marketing_budget) < 1 || !/^[0-9]+$/.test(values.marketing_budget))) {\r\n    errors.marketing_budget = i18next.t('validation:invalidAmount');\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport const interviewDetailsValidate = values => {\r\n  const errors = {};\r\n  const requiredFields = ['interview_title', 'interview_msg', 'interview_date', 'interview_time'];\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = i18next.t('validation:fieldRequired');\r\n    }\r\n  });\r\n  if (values.interview_title && isMaxLengthExceeded(values.interview_title, 100)) {\r\n    errors.interview_title = i18next.t('validation:maxLengthInterviewTitle');\r\n  }\r\n  if (values.interview_msg && isMaxLengthExceeded(values.interview_msg, 1000)) {\r\n    errors.interview_msg = i18next.t('validation:maxLengthInterview');\r\n  }\r\n  if (\r\n    values.interview_date &&\r\n    typeof values.interview_date === 'string' && //For dates coming from backend\r\n    new Date(values.interview_date) < new Date()\r\n  ) {\r\n    errors.interview_date = i18next.t('validation:invalidDate');\r\n  }\r\n\r\n  if (!values.interview_msg || (values.interview_msg && isRteEmpty(values.interview_msg))) {\r\n    errors.interview_msg = i18next.t('validation:fieldRequired&maxLength');\r\n  }\r\n  if (values.interview_place && isMaxLengthExceeded(values.interview_place, 100)) {\r\n    errors.interview_place = i18next.t('validation:maxLengthInterviewTitle');\r\n  }\r\n  /* if (\r\n    values.application_notes &&\r\n    isMaxLengthExceeded(values.application_notes, 100)\r\n  ) {\r\n    errors.application_notes = i18next.t('validation:maxLengthInterview');\r\n  } */\r\n  return errors;\r\n};\r\n\r\nexport const applicationFormValidate = values => {\r\n  const errors = {};\r\n  const requiredFields = ['firstname', 'lastname', 'email', 'agreement_terms'];\r\n\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = i18next.t('validation:fieldRequired');\r\n    }\r\n  });\r\n\r\n  if (values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n    errors.email = i18next.t('validation:invalidEmail');\r\n  }\r\n\r\n  // phoneNumber validation\r\n  if (values.contact_number && !/^\\+?[0-9 ]{7,13}$/i.test(values.contact_number)) {\r\n    errors.contact_number = i18next.t('validation:phoneInvalid');\r\n  }\r\n\r\n  if (values.application_description && isMaxLengthExceeded(values.application_description, 7000)) {\r\n    errors.application_description = i18next.t('validation:maxLengthApplicationDesc');\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport const campaignValidate = values => {\r\n  const errors = {};\r\n  if (!values.due_date) {\r\n    errors.due_date = i18next.t('validation:fieldRequired');\r\n  }\r\n  if (\r\n    (values.due_date &&\r\n      // validate for date that is less than today\r\n      new Date(values.due_date).setHours(0, 0, 0, 0) - new Date().setHours(0, 0, 0, 0) < 0) ||\r\n    // validate for date that is more than allowed 4 weeks - if given date is more than +30 days from today\r\n    (values.due_date && new Date(values.due_date).getTime() > new Date().getTime() + 30 * 24 * 60 * 60 * 1000)\r\n  ) {\r\n    errors.due_date = i18next.t('validation:invalidDueDate');\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport const usersProfileValidate = values => {\r\n  const errors = {};\r\n  let requiredFields;\r\n\r\n  if (values.company_id) {\r\n    requiredFields = ['company_name', 'firstname', 'lastname', 'email'];\r\n  } else {\r\n    requiredFields = ['firstname', 'lastname', 'email'];\r\n  }\r\n\r\n  requiredFields.forEach(field => {\r\n    if (!values[field]) {\r\n      errors[field] = i18next.t('validation:fieldRequired');\r\n    }\r\n  });\r\n\r\n  //\r\n\r\n  if (values.company_name && isEmpty(values.company_name)) {\r\n    errors['company_name'] = i18next.t('validation:emptyStr');\r\n  }\r\n\r\n  if (values.firstname && isEmpty(values.firstname)) {\r\n    errors['firstname'] = i18next.t('validation:emptyStr');\r\n  }\r\n\r\n  if (values.lastname && isEmpty(values.lastname)) {\r\n    errors['lastname'] = i18next.t('validation:emptyStr');\r\n  }\r\n\r\n  // business_id validation\r\n  if (values.business_id && !/^\\d{7}-\\d{1}$/i.test(values.business_id)) {\r\n    errors.business_id = i18next.t('validation:businessIdInvalid');\r\n  }\r\n\r\n  // phoneNumber validation\r\n  if (values.contact_number && !/^\\+?[0-9 ]{7,13}$/i.test(values.contact_number)) {\r\n    errors.contact_number = i18next.t('validation:phoneInvalid');\r\n  }\r\n\r\n  if (values.company_url && !/https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_.~#()?&//=]*)/gim.test(values.company_url)) {\r\n    errors.company_url = i18next.t('validation:urlInvalid');\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst isEmpty = str => {\r\n  return !str.trim().length;\r\n};\r\n\r\nexport const isRteEmpty = str => {\r\n  var regex = /(<([^>]+)>)/gi;\r\n  const text = str\r\n    .replace(regex, '')\r\n    .replace(/&nbsp;/g, '')\r\n    .replace(/\\s/g, '');\r\n  return text.length === 0 ? true : false;\r\n};\r\n\r\nconst isMaxLengthExceeded = (str, length) => {\r\n  const strLength = str.length;\r\n  //console.log('isMaxLengthExceeded', strLength);\r\n  return strLength > length ? true : false;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}