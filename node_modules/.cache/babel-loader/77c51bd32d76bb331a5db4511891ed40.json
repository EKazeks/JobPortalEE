{"ast":null,"code":"import { reduxForm, formValueSelector } from 'redux-form';\nimport { connect } from 'react-redux';\nimport EditAdvertFormComponent from '../../../components/companies/advertisements/editAdvertForm.component';\nimport { saveAndPublishAdvertisement, updateAndPublishAdvertisement, closeSnackbar, clearImagesFromState } from '../../../actions';\nimport store from '../../../store';\nimport { jobPostFormValidate as validate } from '../../validate';\nconst EditAdvertFormContainer = reduxForm({\n  form: 'editVacancy',\n  validate\n})(EditAdvertFormComponent);\n\nconst mapStateToProps = state => ({\n  // When backend sends back the data, image document is sent as company_image\n  image: formValueSelector('editVacancy')(state, 'company_image') ? formValueSelector('editVacancy')(state, 'company_image')[0].path : formValueSelector('editVacancy')(state, 'image_document') ? formValueSelector('editVacancy')(state, 'image_document') : undefined,\n  jobCategories: state.jobCategories.jobCategories.filter(jobs => jobs.type !== 'all'),\n  apiSuccess: store.getState().advertisement.apiSuccess,\n  apiFailed: store.getState().advertisement.apiFailed,\n  showSpinner: store.getState().advertisement.showSpinner,\n  synchronousError: state.form && state.form.editVacancy && state.form.editVacancy.syncErrors\n});\n\nconst mapDispatchToProps = {\n  saveAndPublishAdvertisement,\n  closeSnackbar,\n  updateAndPublishAdvertisement,\n  clearImagesFromState\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditAdvertFormContainer);","map":{"version":3,"names":["reduxForm","formValueSelector","connect","EditAdvertFormComponent","saveAndPublishAdvertisement","updateAndPublishAdvertisement","closeSnackbar","clearImagesFromState","store","jobPostFormValidate","validate","EditAdvertFormContainer","form","mapStateToProps","state","image","path","undefined","jobCategories","filter","jobs","type","apiSuccess","getState","advertisement","apiFailed","showSpinner","synchronousError","editVacancy","syncErrors","mapDispatchToProps"],"sources":["C:/Users/shuli/OneDrive/Desktop/Work/JobportalN/JobPortalEE/src/containers/companies/advertisements/editAdvertForm.container.js"],"sourcesContent":["import { reduxForm, formValueSelector } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport EditAdvertFormComponent from '../../../components/companies/advertisements/editAdvertForm.component';\r\nimport { saveAndPublishAdvertisement, updateAndPublishAdvertisement, closeSnackbar, clearImagesFromState } from '../../../actions';\r\nimport store from '../../../store';\r\nimport { jobPostFormValidate as validate } from '../../validate';\r\n\r\nconst EditAdvertFormContainer = reduxForm({\r\n  form: 'editVacancy',\r\n  validate,\r\n})(EditAdvertFormComponent);\r\n\r\nconst mapStateToProps = state => ({\r\n  // When backend sends back the data, image document is sent as company_image\r\n  image: formValueSelector('editVacancy')(state, 'company_image')\r\n    ? formValueSelector('editVacancy')(state, 'company_image')[0].path\r\n    : formValueSelector('editVacancy')(state, 'image_document')\r\n    ? formValueSelector('editVacancy')(state, 'image_document')\r\n    : undefined,\r\n  jobCategories: state.jobCategories.jobCategories.filter(jobs => jobs.type !== 'all'),\r\n  apiSuccess: store.getState().advertisement.apiSuccess,\r\n  apiFailed: store.getState().advertisement.apiFailed,\r\n  showSpinner: store.getState().advertisement.showSpinner,\r\n  synchronousError: state.form && state.form.editVacancy && state.form.editVacancy.syncErrors,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  saveAndPublishAdvertisement,\r\n  closeSnackbar,\r\n  updateAndPublishAdvertisement,\r\n  clearImagesFromState,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditAdvertFormContainer);\r\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,iBAApB,QAA6C,YAA7C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,uBAAP,MAAoC,uEAApC;AACA,SAASC,2BAAT,EAAsCC,6BAAtC,EAAqEC,aAArE,EAAoFC,oBAApF,QAAgH,kBAAhH;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,mBAAmB,IAAIC,QAAhC,QAAgD,gBAAhD;AAEA,MAAMC,uBAAuB,GAAGX,SAAS,CAAC;EACxCY,IAAI,EAAE,aADkC;EAExCF;AAFwC,CAAD,CAAT,CAG7BP,uBAH6B,CAAhC;;AAKA,MAAMU,eAAe,GAAGC,KAAK,KAAK;EAChC;EACAC,KAAK,EAAEd,iBAAiB,CAAC,aAAD,CAAjB,CAAiCa,KAAjC,EAAwC,eAAxC,IACHb,iBAAiB,CAAC,aAAD,CAAjB,CAAiCa,KAAjC,EAAwC,eAAxC,EAAyD,CAAzD,EAA4DE,IADzD,GAEHf,iBAAiB,CAAC,aAAD,CAAjB,CAAiCa,KAAjC,EAAwC,gBAAxC,IACAb,iBAAiB,CAAC,aAAD,CAAjB,CAAiCa,KAAjC,EAAwC,gBAAxC,CADA,GAEAG,SAN4B;EAOhCC,aAAa,EAAEJ,KAAK,CAACI,aAAN,CAAoBA,aAApB,CAAkCC,MAAlC,CAAyCC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAc,KAA/D,CAPiB;EAQhCC,UAAU,EAAEd,KAAK,CAACe,QAAN,GAAiBC,aAAjB,CAA+BF,UARX;EAShCG,SAAS,EAAEjB,KAAK,CAACe,QAAN,GAAiBC,aAAjB,CAA+BC,SATV;EAUhCC,WAAW,EAAElB,KAAK,CAACe,QAAN,GAAiBC,aAAjB,CAA+BE,WAVZ;EAWhCC,gBAAgB,EAAEb,KAAK,CAACF,IAAN,IAAcE,KAAK,CAACF,IAAN,CAAWgB,WAAzB,IAAwCd,KAAK,CAACF,IAAN,CAAWgB,WAAX,CAAuBC;AAXjD,CAAL,CAA7B;;AAcA,MAAMC,kBAAkB,GAAG;EACzB1B,2BADyB;EAEzBE,aAFyB;EAGzBD,6BAHyB;EAIzBE;AAJyB,CAA3B;AAMA,eAAeL,OAAO,CAACW,eAAD,EAAkBiB,kBAAlB,CAAP,CAA6CnB,uBAA7C,CAAf"},"metadata":{},"sourceType":"module"}