{"ast":null,"code":"import React from 'react';\nimport packageJson from '../package.json';\nimport moment from 'moment';\n\nconst buildDateGreaterThan = (latestDate, currentDate) => {\n  const momLatestDateTime = moment(latestDate);\n  const momCurrentDateTime = moment(currentDate);\n\n  if (momLatestDateTime.isAfter(momCurrentDateTime)) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nclass CacheBuster extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      isLatestVersion: false,\n      refreshCacheAndReload: () => {\n        //console.log('-----------Clearing cache and hard reloading...')\n        if (caches) {\n          caches.keys().then(async function (names) {\n            await Promise.all(names.map(name => caches.delete(name)));\n          });\n        } // delete browser cache and hard reload\n\n\n        window.location.reload();\n      }\n    };\n  }\n\n  componentDidMount() {\n    fetch('/meta.json').then(response => response.json()).then(meta => {\n      const latestVersion = meta.buildDate;\n      const currentVersion = packageJson.buildDate;\n      const shouldForceRefresh = buildDateGreaterThan(latestVersion, currentVersion); //console.log ('-------------shouldForceRefresh-->>', shouldForceRefresh)\n\n      if (shouldForceRefresh) {\n        //console.log(`We have a new version - ${latestVersion}. Should force refresh`)\n        this.setState({\n          loading: false,\n          isLatestVersion: false\n        });\n      } else {\n        //console.log(`You already have the latest version - ${latestVersion}. No cache refresh needed.`)\n        this.setState({\n          loading: false,\n          isLatestVersion: true\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      loading,\n      isLatestVersion,\n      refreshCacheAndReload\n    } = this.state;\n    return this.props.children({\n      loading,\n      isLatestVersion,\n      refreshCacheAndReload\n    });\n  }\n\n}\n\nexport default CacheBuster;","map":{"version":3,"names":["React","packageJson","moment","buildDateGreaterThan","latestDate","currentDate","momLatestDateTime","momCurrentDateTime","isAfter","CacheBuster","Component","constructor","props","state","loading","isLatestVersion","refreshCacheAndReload","caches","keys","then","names","Promise","all","map","name","delete","window","location","reload","componentDidMount","fetch","response","json","meta","latestVersion","buildDate","currentVersion","shouldForceRefresh","setState","render","children"],"sources":["/Users/eduardkazeks/Documents/GitHub/EeJobPortal/src/CacheBuster.js"],"sourcesContent":["import React from 'react';\nimport packageJson from '../package.json';\nimport moment from 'moment';\n\nconst buildDateGreaterThan = (latestDate, currentDate) => {\n  const momLatestDateTime = moment(latestDate);\n  const momCurrentDateTime = moment(currentDate);\n  if (momLatestDateTime.isAfter(momCurrentDateTime)) {\n    return true;\n  } else {\n    return false;\n  }\n};\nclass CacheBuster extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      isLatestVersion: false,\n      refreshCacheAndReload: () => {\n        //console.log('-----------Clearing cache and hard reloading...')\n        if (caches) {\n          caches.keys().then(async function(names) {\n            await Promise.all(names.map(name => caches.delete(name)));\n          });\n        }\n        // delete browser cache and hard reload\n        window.location.reload();\n      },\n    };\n  }\n\n  componentDidMount() {\n    fetch('/meta.json')\n      .then(response => response.json())\n      .then(meta => {\n        const latestVersion = meta.buildDate;\n        const currentVersion = packageJson.buildDate;\n        const shouldForceRefresh = buildDateGreaterThan(latestVersion, currentVersion);\n        //console.log ('-------------shouldForceRefresh-->>', shouldForceRefresh)\n        if (shouldForceRefresh) {\n          //console.log(`We have a new version - ${latestVersion}. Should force refresh`)\n          this.setState({ loading: false, isLatestVersion: false });\n        } else {\n          //console.log(`You already have the latest version - ${latestVersion}. No cache refresh needed.`)\n          this.setState({ loading: false, isLatestVersion: true });\n        }\n      });\n  }\n\n  render() {\n    const { loading, isLatestVersion, refreshCacheAndReload } = this.state;\n    return this.props.children({\n      loading,\n      isLatestVersion,\n      refreshCacheAndReload,\n    });\n  }\n}\nexport default CacheBuster;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,oBAAoB,GAAG,CAACC,UAAD,EAAaC,WAAb,KAA6B;EACxD,MAAMC,iBAAiB,GAAGJ,MAAM,CAACE,UAAD,CAAhC;EACA,MAAMG,kBAAkB,GAAGL,MAAM,CAACG,WAAD,CAAjC;;EACA,IAAIC,iBAAiB,CAACE,OAAlB,CAA0BD,kBAA1B,CAAJ,EAAmD;IACjD,OAAO,IAAP;EACD,CAFD,MAEO;IACL,OAAO,KAAP;EACD;AACF,CARD;;AASA,MAAME,WAAN,SAA0BT,KAAK,CAACU,SAAhC,CAA0C;EACxCC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,OAAO,EAAE,IADE;MAEXC,eAAe,EAAE,KAFN;MAGXC,qBAAqB,EAAE,MAAM;QAC3B;QACA,IAAIC,MAAJ,EAAY;UACVA,MAAM,CAACC,IAAP,GAAcC,IAAd,CAAmB,gBAAeC,KAAf,EAAsB;YACvC,MAAMC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,GAAN,CAAUC,IAAI,IAAIP,MAAM,CAACQ,MAAP,CAAcD,IAAd,CAAlB,CAAZ,CAAN;UACD,CAFD;QAGD,CAN0B,CAO3B;;;QACAE,MAAM,CAACC,QAAP,CAAgBC,MAAhB;MACD;IAZU,CAAb;EAcD;;EAEDC,iBAAiB,GAAG;IAClBC,KAAK,CAAC,YAAD,CAAL,CACGX,IADH,CACQY,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGb,IAFH,CAEQc,IAAI,IAAI;MACZ,MAAMC,aAAa,GAAGD,IAAI,CAACE,SAA3B;MACA,MAAMC,cAAc,GAAGnC,WAAW,CAACkC,SAAnC;MACA,MAAME,kBAAkB,GAAGlC,oBAAoB,CAAC+B,aAAD,EAAgBE,cAAhB,CAA/C,CAHY,CAIZ;;MACA,IAAIC,kBAAJ,EAAwB;QACtB;QACA,KAAKC,QAAL,CAAc;UAAExB,OAAO,EAAE,KAAX;UAAkBC,eAAe,EAAE;QAAnC,CAAd;MACD,CAHD,MAGO;QACL;QACA,KAAKuB,QAAL,CAAc;UAAExB,OAAO,EAAE,KAAX;UAAkBC,eAAe,EAAE;QAAnC,CAAd;MACD;IACF,CAdH;EAeD;;EAEDwB,MAAM,GAAG;IACP,MAAM;MAAEzB,OAAF;MAAWC,eAAX;MAA4BC;IAA5B,IAAsD,KAAKH,KAAjE;IACA,OAAO,KAAKD,KAAL,CAAW4B,QAAX,CAAoB;MACzB1B,OADyB;MAEzBC,eAFyB;MAGzBC;IAHyB,CAApB,CAAP;EAKD;;AA5CuC;;AA8C1C,eAAeP,WAAf"},"metadata":{},"sourceType":"module"}