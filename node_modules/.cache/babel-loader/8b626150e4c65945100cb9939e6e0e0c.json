{"ast":null,"code":"var _jsxFileName = \"/Users/eduardkazeks/Documents/GitHub/JobPortalEE/src/components/companies/ads/adDetails.component.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Divider, Grid, Button, Snackbar } from \"@material-ui/core\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport store from \"../../../store\";\nimport { customURL, dateFormat } from \"../../../utils/helperFunctions\";\nimport { updateAdvertisement, changeCampaign, changeActivePostToInactive, closeSnackbar, populateVacancyForm } from \"../../../actions\";\nimport { MySnackbarContentWrapper } from \"../../../utils/snackbar.utils\";\nimport { customTranslateCampaign, customTranslateStatus } from \"../../../utils/customTranslate\";\nimport Loader from \"../../../utils/loader\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst styles = theme => ({\n  titleMargin: {\n    margin: \"20px auto 24px auto\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 4\n    }\n  },\n  companyLogo: {\n    minHeight: 80,\n    minWidth: 150,\n    backgroundSize: \"contain\",\n    backgroundRepeat: \"no-repeat\",\n    marginBottom: 6\n  },\n  companyImgFrame: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  companyImage: {\n    minHeight: 420,\n    maxHeight: 600,\n    maxWidth: \"100%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      minHeight: 190,\n      maxHeight: 190,\n      width: \"100%\"\n    },\n    [theme.breakpoints.only(\"sm\")]: {\n      minHeight: 360,\n      maxHeight: 420,\n      width: \"100%\"\n    }\n  },\n  adDetail: {\n    margin: \"0px 0 50px 0\",\n    padding: \"0 0 50px\",\n    border: \"1px solid lightgray\"\n  },\n  jobDesc: {\n    padding: 40\n  },\n  ctaBtn: {\n    marginBottom: 50,\n    [theme.breakpoints.up(\"md\")]: {\n      justifyContent: \"flex-end\"\n    }\n  },\n  backBtnText: {\n    color: theme.palette.secondary.main,\n    \"&:hover\": {\n      textDecoration: \"none\",\n      color: theme.palette.primary.main\n    }\n  },\n  backBtnContainer: {\n    marginTop: 2\n  },\n  campaignType: {\n    marginRight: 16\n  }\n});\n\nconst AdDetails = _ref => {\n  let {\n    classes,\n    viewSelectedAd,\n    userRole,\n    showSuccessSnackbar,\n    showFailedSnackbar,\n    showSpinner,\n    selectedPage,\n    campaignsList,\n    props\n  } = _ref;\n  const {\n    t\n  } = useTranslation(\"adDetails\");\n  const {\n    id,\n    jobDetails\n  } = useSelector(state => state.jobs);\n  const [dateOfApplication, setDateOfApplication] = useState();\n  const [address, setAddress] = useState();\n  const [toEdit, setToEdit] = useState();\n  const [jobsToRender, setJobsToRender] = useState({});\n  const dispatch = useDispatch();\n  selectedPage = 1;\n  useEffect(() => {\n    axios.get(`https://localhost:7262/jobsEn/${id}`).then(res => {\n      setJobsToRender(res.data);\n      let date = res.data.dateOfApplication.split('.');\n\n      if (date.length === 3) {\n        setDateOfApplication(res.data.dateOfApplication);\n      } else {\n        setDateOfApplication(dateFormat(res.data.dateOfApplication));\n      }\n\n      setAddress(res.data.jobPostAddress.address);\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   <div>\n    //     <Grid>\n    //       <div>\n    //         <h1>\n    //           {jobsToRender.map((job) => {\n    //             return (\n    //               <div>\n    //                 <h1>\n    //                   {job.jobPostAddress.address}\n    //                 </h1>\n    //               </div>\n    //             )\n    //           })}\n    //         </h1>\n    //       </div>\n    //     </Grid>\n    //   </div>\n    //   <h1>Test</h1>\n    // </div>\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      key: jobsToRender.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.backBtnContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: userRole === \"company\" ? \"/omat-ilmoitukseni\" : \"/tyopaikat\",\n      className: classes.backBtnText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }), \" \", t(\"jobs:backButton\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.titleMargin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"ad_title_1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, jobsToRender.jobName, \", \", address), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"ad_title_2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, `${jobsToRender.status === true ? t(\"draft\") : jobsToRender.status === false ? t(\"active\") : t(\"inactive\")}`, \":\"), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }, dateOfApplication))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      className: classes.ctaBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, jobsToRender.campaignType === \"free\" ? /*#__PURE__*/React.createElement(Link, {\n      to: \"/tyopaikkailmoitus/\",\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => {\n        store.dispatch(populateVacancyForm(jobsToRender.id, false));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 23\n      }\n    }, t(\"common:copyBtn\"))) : jobsToRender.campaignLevel === \"free\" ? /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => {\n        // alert('updateJOBPOSTSTATUS');\n        store.dispatch(changeActivePostToInactive(userRole === \"admin\" ? `${jobsToRender.id}admin${jobsToRender.companyBusinessId}` : jobsToRender.id));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }, t(\"common:inactiveBtn\")) : \"\"), jobsToRender.campaignType === \"free\" && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/tyopaikkailmoitus/${jobsToRender.id}`,\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => store.dispatch(updateAdvertisement(jobsToRender.id)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 23\n      }\n    }, t(\"editBtn\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }\n    }, jobsToRender.jobName && /*#__PURE__*/React.createElement(Link, {\n      to: customURL(jobsToRender.url, \"campaign\"),\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => store.dispatch(changeCampaign(campaignsList.find(campaign => campaign.id === jobsToRender.campaignType))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 23\n      }\n    }, t(\"boostBtn\"))))))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.addMargin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.campaignType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 19\n      }\n    }, t(\"postType\"), \": \"), jobsToRender.campaignType === \"free\" && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 60\n      }\n    }, \"Free\"), jobsToRender.campaignType === \"lift\" && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 60\n      }\n    }, \"Lift\"), jobsToRender.campaignType === \"home_page_thing\" && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 71\n      }\n    }, \"Front Page News\"), jobsToRender.campaignType === \"noteworthy\" && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 66\n      }\n    }, \"Remarkable\"), jobsToRender.campaignType === \"some_start\" && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 66\n      }\n    }, \"Social Media Start\")), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 19\n      }\n    }, t(\"postStatus\"), \": \"), `Active`))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 4,\n      style: {\n        display: \"flex\",\n        justifyContent: \"flex-end\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.companyLogo,\n      style: {\n        backgroundImage: `url(${jobsToRender.logo ? jobsToRender.logo[0].path : \"\"})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 15\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.adDetail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.companyImgFrame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.jobDesc,\n      dangerouslySetInnerHTML: {\n        __html: jobsToRender.jobDescription\n      } // To convert rte string into html\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      className: classes.ctaBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 15\n      }\n    }, jobsToRender.campaignType === \"free\" ? /*#__PURE__*/React.createElement(Link, {\n      to: \"/tyopaikkailmoitus/\",\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => {\n        store.dispatch(populateVacancyForm(jobsToRender.id, false));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 21\n      }\n    }, t(\"common:copyBtn\"))) : jobsToRender.campaignType === \"free\" ? /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => {\n        store.dispatch(changeActivePostToInactive(userRole === \"admin\" ? `${jobsToRender.id}admin${jobsToRender.companyBusinessId}` : jobsToRender.id));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 19\n      }\n    }, t(\"common:inactiveBtn\")) : \"\"), jobsToRender.campaignType === \"free\" && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/tyopaikkailmoitus/${jobsToRender.id}`,\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => store.dispatch(updateAdvertisement(jobsToRender.id)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 21\n      }\n    }, t(\"editBtn\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 15\n      }\n    }, jobsToRender.jobName && /*#__PURE__*/React.createElement(Link, {\n      to: customURL(jobsToRender.url, \"campaign\"),\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => store.dispatch(changeCampaign(campaignsList.find(campaign => campaign.id === jobsToRender.campaign_id))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 21\n      }\n    }, t(\"boostBtn\")))))))), /*#__PURE__*/React.createElement(Loader, {\n      showSpinner: showSpinner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      open: showSuccessSnackbar,\n      autoHideDuration: 2000,\n      onClose: () => store.dispatch(closeSnackbar()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper, {\n      onClose: () => store.dispatch(closeSnackbar()),\n      variant: \"success\",\n      message: t(\"successMsg\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      open: showFailedSnackbar,\n      autoHideDuration: 2000,\n      onClose: () => store.dispatch(closeSnackbar()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper, {\n      onClose: () => store.dispatch(closeSnackbar()),\n      variant: \"error\",\n      message: t(\"failedMsg\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }\n    })))\n  );\n};\n\nexport default withStyles(styles)(AdDetails);","map":{"version":3,"names":["React","useEffect","useState","withStyles","Divider","Grid","Button","Snackbar","ArrowBackIosIcon","Link","useTranslation","store","customURL","dateFormat","updateAdvertisement","changeCampaign","changeActivePostToInactive","closeSnackbar","populateVacancyForm","MySnackbarContentWrapper","customTranslateCampaign","customTranslateStatus","Loader","axios","useDispatch","useSelector","styles","theme","titleMargin","margin","breakpoints","down","marginTop","companyLogo","minHeight","minWidth","backgroundSize","backgroundRepeat","marginBottom","companyImgFrame","display","alignItems","justifyContent","companyImage","maxHeight","maxWidth","width","only","adDetail","padding","border","jobDesc","ctaBtn","up","backBtnText","color","palette","secondary","main","textDecoration","primary","backBtnContainer","campaignType","marginRight","AdDetails","classes","viewSelectedAd","userRole","showSuccessSnackbar","showFailedSnackbar","showSpinner","selectedPage","campaignsList","props","t","id","jobDetails","state","jobs","dateOfApplication","setDateOfApplication","address","setAddress","toEdit","setToEdit","jobsToRender","setJobsToRender","dispatch","get","then","res","data","date","split","length","jobPostAddress","jobName","status","campaignLevel","companyBusinessId","url","find","campaign","addMargin","backgroundImage","logo","path","__html","jobDescription","campaign_id","vertical","horizontal"],"sources":["/Users/eduardkazeks/Documents/GitHub/JobPortalEE/src/components/companies/ads/adDetails.component.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Divider, Grid, Button, Snackbar } from \"@material-ui/core\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport store from \"../../../store\";\nimport { customURL,dateFormat } from \"../../../utils/helperFunctions\";\nimport {\n  updateAdvertisement,\n  changeCampaign,\n  changeActivePostToInactive,\n  closeSnackbar,\n  populateVacancyForm\n} from \"../../../actions\";\nimport { MySnackbarContentWrapper } from \"../../../utils/snackbar.utils\";\nimport {\n  customTranslateCampaign,\n  customTranslateStatus,\n} from \"../../../utils/customTranslate\";\nimport Loader from \"../../../utils/loader\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst styles = (theme) => ({\n  titleMargin: {\n    margin: \"20px auto 24px auto\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 4,\n    },\n  },\n  companyLogo: {\n    minHeight: 80,\n    minWidth: 150,\n    backgroundSize: \"contain\",\n    backgroundRepeat: \"no-repeat\",\n    marginBottom: 6,\n  },\n  companyImgFrame: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  companyImage: {\n    minHeight: 420,\n    maxHeight: 600,\n    maxWidth: \"100%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      minHeight: 190,\n      maxHeight: 190,\n      width: \"100%\",\n    },\n    [theme.breakpoints.only(\"sm\")]: {\n      minHeight: 360,\n      maxHeight: 420,\n      width: \"100%\",\n    },\n  },\n  adDetail: {\n    margin: \"0px 0 50px 0\",\n    padding: \"0 0 50px\",\n    border: \"1px solid lightgray\",\n  },\n  jobDesc: {\n    padding: 40,\n  },\n  ctaBtn: {\n    marginBottom: 50,\n    [theme.breakpoints.up(\"md\")]: {\n      justifyContent: \"flex-end\",\n    },\n  },\n  backBtnText: {\n    color: theme.palette.secondary.main,\n    \"&:hover\": {\n      textDecoration: \"none\",\n      color: theme.palette.primary.main,\n    },\n  },\n  backBtnContainer: {\n    marginTop: 2,\n  },\n  campaignType: {\n    marginRight: 16,\n  },\n});\n\nconst AdDetails = ({\n  classes,\n  viewSelectedAd,\n  userRole,\n  showSuccessSnackbar,\n  showFailedSnackbar,\n  showSpinner,\n  selectedPage,\n  campaignsList,\n  props,\n}) => {\n  const { t } = useTranslation(\"adDetails\");\n  const { id, jobDetails } = useSelector((state) => state.jobs);\n  const [dateOfApplication,setDateOfApplication] = useState();\n  const [address,setAddress] = useState();\n  const [toEdit,setToEdit] = useState()\n  const [jobsToRender, setJobsToRender] = useState({});\n  const dispatch = useDispatch()\n  selectedPage = 1;\n  \n  useEffect(() => {\n    \n    axios.get(`https://localhost:7262/jobsEn/${id}`).then((res) => {\n      setJobsToRender(res.data);\n      let date = res.data.dateOfApplication.split('.')\n\n      if(date.length === 3 )\n      {\n        setDateOfApplication(res.data.dateOfApplication)\n      }\n      else{\n        setDateOfApplication(dateFormat(res.data.dateOfApplication))\n      }\n      setAddress(res.data.jobPostAddress.address)\n    });\n  }, []);\n\n  return (\n    // <div>\n    //   <div>\n    //     <Grid>\n    //       <div>\n    //         <h1>\n    //           {jobsToRender.map((job) => {\n    //             return (\n    //               <div>\n    //                 <h1>\n    //                   {job.jobPostAddress.address}\n    //                 </h1>\n    //               </div>\n    //             )\n    //           })}\n    //         </h1>\n    //       </div>\n    //     </Grid>\n    //   </div>\n\n    //   <h1>Test</h1>\n    // </div>\n\n    <div>\n      <div className=\"container\" key={jobsToRender.id}>\n        <div className={classes.backBtnContainer}>\n          <Link\n            to={userRole === \"company\" ? \"/omat-ilmoitukseni\" : \"/tyopaikat\"}\n            className={classes.backBtnText}\n          >\n            <ArrowBackIosIcon /> {t(\"jobs:backButton\")}\n          </Link>\n        </div>\n        <div className={classes.titleMargin}>\n          <Grid container>\n            <Grid item sm={12} md={7}>\n              <h2 className=\"ad_title_1\">\n                {jobsToRender.jobName}, {address}\n              </h2>\n              <h6 className=\"ad_title_2\">\n                <strong style={{ marginRight: 10 }}>\n                  {`${\n                    jobsToRender.status === true\n                      ? t(\"draft\")\n                      : jobsToRender.status === false\n                      ? t(\"active\")\n                      : t(\"inactive\")\n                  }`}\n                  :\n                </strong>\n                <strong>{dateOfApplication}</strong>\n              </h6>\n            </Grid>\n            <Grid item sm={12} md={5}>\n              <Grid container spacing={2} className={classes.ctaBtn}>\n                <Grid item>\n                  {/* If post is active post, show Inactive btn. If it is inactive post, show copy btn in Addetails */}\n                  {jobsToRender.campaignType === \"free\" ? (\n                    <Link to=\"/tyopaikkailmoitus/\" className=\"btnLink\">\n                      <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={() => {\n                          store.dispatch(populateVacancyForm(jobsToRender.id, false));\n                        }} \n                      >\n                        {t(\"common:copyBtn\")}\n                      </Button>\n                    </Link>\n                  ) : jobsToRender.campaignLevel === \"free\" ? (\n                    <Button\n                      variant=\"outlined\"\n                      color=\"primary\"\n                      onClick={() => {\n                        // alert('updateJOBPOSTSTATUS');\n                        store.dispatch(\n                          changeActivePostToInactive(\n                            userRole === \"admin\"\n                              ? `${jobsToRender.id}admin${jobsToRender.companyBusinessId}`\n                              : jobsToRender.id\n                          )\n                        );\n                      }}\n                    >\n                      {t(\"common:inactiveBtn\")}\n                    </Button>\n                  ) : (\n                    \"\"\n                  )}\n                </Grid>\n                {jobsToRender.campaignType === \"free\" && (\n                  <Grid item>\n                    <Link\n                      to={`/tyopaikkailmoitus/${jobsToRender.id}`}\n                      className=\"btnLink\"\n                    >\n                      <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={() => store.dispatch(updateAdvertisement(jobsToRender.id))}\n                      >\n                        {t(\"editBtn\")}\n                      </Button>\n                    </Link>\n                  </Grid>\n                )}\n                <Grid item>\n                  {/* To avoid errors when viewSelectedAd is empty array */}\n                  {jobsToRender.jobName && (\n                    <Link\n                      to={customURL(jobsToRender.url, \"campaign\")}\n                      className=\"btnLink\"\n                    >\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() =>\n                          store.dispatch(\n                            changeCampaign(\n                              campaignsList.find(\n                                (campaign) =>\n                                  campaign.id === jobsToRender.campaignType\n                              )\n                            )\n                          )\n                        }\n                      >\n                        {t(\"boostBtn\")}\n                      </Button>\n                    </Link>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Divider />\n        </div>\n        <div className={classes.addMargin}>\n          <Grid container>\n            <Grid item sm={8}>\n              <div className={classes.campaignType}>\n                <h6>\n                  <strong>{t(\"postType\")}: </strong>\n                  {/* <span>{customTranslateCampaign(item.campaignType)}</span> */}\n                  {/* <span>{jobsToRender.campaignType}</span> */}\n                  {jobsToRender.campaignType === \"free\" && <span>Free</span>}\n                  {jobsToRender.campaignType === \"lift\" && <span>Lift</span>}\n                  {jobsToRender.campaignType === \"home_page_thing\" && <span>Front Page News</span>}\n                  {jobsToRender.campaignType === \"noteworthy\" && <span>Remarkable</span>}\n                  {jobsToRender.campaignType === \"some_start\" && <span>Social Media Start</span>}\n                </h6>\n                <h6>\n                  <strong>{t(\"postStatus\")}: </strong>\n                  {/* {customTranslateStatus(item.campaignType)} */}\n                  {`Active`}\n                </h6>\n              </div>\n            </Grid>\n            <Grid\n              item\n              sm={4}\n              style={{ display: \"flex\", justifyContent: \"flex-end\" }}\n            >\n              <div\n                className={classes.companyLogo}\n                style={{\n                  backgroundImage: `url(${\n                    jobsToRender.logo ? jobsToRender.logo[0].path : \"\"\n                  })`,\n                }}\n              />\n            </Grid>\n          </Grid>\n        </div>\n        <div className={classes.adDetail}>\n          <div className={classes.companyImgFrame}>\n          </div>\n          <div\n            className={classes.jobDesc}\n            dangerouslySetInnerHTML={{\n              __html: jobsToRender.jobDescription,\n            }} // To convert rte string into html\n          />\n        </div>\n        <Grid container>\n          <Grid item sm={12} md={6} />\n          <Grid item sm={12} md={6}>\n            <Grid container spacing={2} className={classes.ctaBtn}>\n              <Grid item>\n                {/* If post is active post, show Inactive btn. If it is inactive post, show copy btn in Addetails */}\n                {jobsToRender.campaignType === \"free\" ? (\n                  <Link to=\"/tyopaikkailmoitus/\" className=\"btnLink\">\n                    <Button\n                      variant=\"outlined\"\n                      color=\"primary\"\n                        onClick={() => {\n                          store.dispatch(populateVacancyForm(jobsToRender.id, false));\n                        }}\n                    >\n                      {t(\"common:copyBtn\")}\n                    </Button>\n                  </Link>\n                ) : jobsToRender.campaignType === \"free\" ? (\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    onClick={() => {\n                      store.dispatch(\n                        changeActivePostToInactive(\n                          userRole === \"admin\"\n                            ? `${jobsToRender.id}admin${jobsToRender.companyBusinessId}`\n                            : jobsToRender.id\n                        )\n                      );\n                    }}\n                  >\n                    {t(\"common:inactiveBtn\")}\n                  </Button>\n                ) : (\n                  \"\"\n                )}\n              </Grid>\n              {jobsToRender.campaignType === \"free\" && (\n                <Grid item>\n                  <Link\n                    to={`/tyopaikkailmoitus/${jobsToRender.id}`}\n                    className=\"btnLink\"\n                  >\n                    <Button\n                      variant=\"outlined\"\n                      color=\"primary\"\n                      onClick={() => \n                        store.dispatch(updateAdvertisement(jobsToRender.id))}\n                    >\n                      {t(\"editBtn\")}\n                    </Button>\n                  </Link>\n                </Grid>\n              )}\n              <Grid item>\n                {/* To avoid errors when viewSelectedAd is empty array */}\n                {jobsToRender.jobName && (\n                  <Link\n                    to={customURL(jobsToRender.url, \"campaign\")}\n                    className=\"btnLink\"\n                  >\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() =>\n                        store.dispatch(\n                          changeCampaign(\n                            campaignsList.find(\n                              (campaign) =>\n                                campaign.id === jobsToRender.campaign_id\n                            )\n                          )\n                        )\n                      }\n                    >\n                      {t(\"boostBtn\")}\n                    </Button>\n                  </Link>\n                )}\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n      <Loader showSpinner={showSpinner} />\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        open={showSuccessSnackbar}\n        autoHideDuration={2000}\n        onClose={() => store.dispatch(closeSnackbar())}\n      >\n        <MySnackbarContentWrapper\n          onClose={() => store.dispatch(closeSnackbar())}\n          variant=\"success\"\n          message={t(\"successMsg\")}\n        />\n      </Snackbar>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        open={showFailedSnackbar}\n        autoHideDuration={2000}\n        onClose={() => store.dispatch(closeSnackbar())}\n      >\n        <MySnackbarContentWrapper\n          onClose={() => store.dispatch(closeSnackbar())}\n          variant=\"error\"\n          message={t(\"failedMsg\")}\n        />\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(AdDetails);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}