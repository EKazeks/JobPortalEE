{"ast":null,"code":"var _jsxFileName = \"/Users/eduardkazeks/Documents/GitHub/JobPortalEE/src/components/jobs/jobDetails.component.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Grid, Divider, Snackbar, Hidden } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { MySnackbarContentWrapper } from \"../../utils/snackbar.utils\";\nimport { FavBtn } from \"../../utils/favBtn.js\";\nimport { convertJobHoursToStr, convertJobTypeToStr, convertJobWorksStartToStr, customURL } from \"../../utils/helperFunctions\";\nimport CustomizedDialogs from \"../../utils/customizedDialog\";\nimport Loader from \"../../utils/loader\";\nimport { SEO } from \"../seo/metaInfo.component\";\nimport { mol_page_url } from \"../../constants\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { isRteEmpty } from \"../../containers/validate\";\n\nconst styles = theme => ({\n  addMargin: {\n    margin: \"20px auto 20px auto\"\n  },\n  backBtnContainer: {\n    margin: \"16px auto\"\n  },\n  backBtnText: {\n    color: theme.palette.secondary.main,\n    \"&:hover\": {\n      textDecoration: \"none\",\n      color: theme.palette.primary.main\n    }\n  },\n  companyImage: {\n    minHeight: 420,\n    maxHeight: 600,\n    maxWidth: \"100%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      minHeight: 190,\n      maxHeight: 190,\n      width: \"100%\"\n    },\n    [theme.breakpoints.only(\"sm\")]: {\n      minHeight: 360,\n      maxHeight: 420,\n      width: \"100%\"\n    }\n  },\n  companyImgFrame: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  companyLogo: {\n    minHeight: 80,\n    minWidth: 150,\n    backgroundSize: \"contain\",\n    backgroundRepeat: \"no-repeat\"\n  },\n  jobDetail: {\n    margin: \"20px 0 50px 0\",\n    padding: \"0 0 50px\",\n    border: \"1px solid lightgray\"\n  },\n  jobDesc: {\n    padding: \"20px 40px\"\n  },\n  additionalInfo: {\n    padding: \"10px 40px\"\n  },\n  sourceInfo: {\n    padding: \"10px 40px\",\n    float: \"right\"\n  },\n  metaData: {\n    color: theme.palette.secondary.main\n  },\n  metaDataTitle: {\n    color: theme.palette.primary.main\n  },\n  ctaBtn: {\n    marginBottom: 20,\n    [theme.breakpoints.up(\"md\")]: {\n      justifyContent: \"flex-end\",\n      marginBottom: 50\n    }\n  }\n});\n\nconst JobDetailsComponent = _ref => {\n  let {\n    jobDetails,\n    workStart,\n    toggleFavoriteJobs,\n    favBtnstatus,\n    showSuccessSnackbar,\n    showFailedSnackbar,\n    closeSnackbar,\n    showDialog,\n    showSpinner,\n    classes,\n    changePagination\n  } = _ref;\n  const [jobsToRender, setJobsToRender] = useState([]);\n  const {\n    id\n  } = useSelector(state => state.jobs);\n  useEffect(() => {\n    axios.get(`https://localhost:7262/jobsEn/${id}`).then(res => {\n      setJobsToRender(res.data);\n      console.log(jobsToRender);\n    });\n  }, []);\n  const {\n    t\n  } = useTranslation(\"jobDetails\", \"jobhours\", \"jobtype\");\n  const heroImage = jobsToRender.logo && jobsToRender.logo[0].path;\n  const title = `${jobsToRender === null || jobsToRender === void 0 ? void 0 : jobsToRender.jobName} - ${jobsToRender === null || jobsToRender === void 0 ? void 0 : jobsToRender.companyName} | Avoimet tyÃ¶paikat`;\n  const selectedPage = 1;\n\n  const dateFormat = date => {\n    const formatedDate = date.split('T', 10)[0].split('-');\n    const newDateFormat = formatedDate[2] + '.' + formatedDate[1] + '.' + formatedDate[0];\n\n    if (newDateFormat == 'undefined.undefined.' || newDateFormat == 'undefined.undefined.string') {\n      return 'Date';\n    } else {\n      return newDateFormat;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, jobsToRender && jobsToRender.map(item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SEO, {\n      title: title,\n      location: item === null || item === void 0 ? void 0 : item.url,\n      heroImage: item === null || item === void 0 ? void 0 : item.logo // Incase we want to use post specific image..Right now, we are using same default image for all posts as marketing wanted.\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.addMargin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.backBtnContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      onClick: () => changePagination(false),\n      to: {\n        pathname: \"/tyopaikat\"\n      },\n      className: classes.backBtnText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }\n    }), \" \", t(\"backToJobList\"))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"ad_title_1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, `${item.jobName}`), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: classes.metaDataTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 23\n      }\n    }, t(\"applyPeriod\"), \": \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.metaData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 23\n      }\n    }, item.dateOfApplication))), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: classes.metaDataTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 23\n      }\n    }, t(\"jobtype:jobTypeLabel\"), \": \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.metaData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 23\n      }\n    }, item.durationOfEmployment))), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: classes.metaDataTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 23\n      }\n    }, t(\"jobhours:jobHoursLabel\"), \": \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.metaData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 23\n      }\n    }, convertJobHoursToStr(t, item.workingTime)))), workStart != null ? /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: classes.metaDataTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }, t(\"jobhours:workStartLabel\"), \": \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.metaData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 25\n      }\n    }, convertJobWorksStartToStr(t, workStart)))) : null, item.status === 2 && /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, t(\"inactiveBtn\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    }, item.status === 1 && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      className: classes.ctaBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 25\n      }\n    }, t(\"shareBtn\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(FavBtn, {\n      isFav: !!item.favourite,\n      handleFav: () => toggleFavoriteJobs(item.companyBusinessId, item.id, !favBtnstatus),\n      btnText: !item.favourite ? t(\"addFav\") : t(\"deleteFav\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 23\n      }\n    }, item.urlToApplyJob ? /*#__PURE__*/React.createElement(\"a\", {\n      className: \"btnLink\",\n      href: item.urlToApplyJob,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(DescriptionIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 35\n      }\n    }, t(\"applyBtn\")))) : /*#__PURE__*/React.createElement(Link, {\n      className: \"btnLink\",\n      to: customURL(item.urlToApplyJob, \"application\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(DescriptionIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 35\n      }\n    }, t(\"applyBtn\")))))))), /*#__PURE__*/React.createElement(Divider, {\n      style: {\n        margin: \"15px 0 0 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justifyContent: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: item.logo ? classes.logo : null,\n      style: {\n        backgroundImage: `url(${item.logo ? item.logo[0].path : null})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.jobDetail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }\n    }, item.logo && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.companyImgFrame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: heroImage,\n      alt: \"company-img\",\n      className: item.logo ? classes.companyImage : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.jobDesc,\n      dangerouslySetInnerHTML: {\n        __html: item.jobDescription\n      } // To convert rte string into html\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 15\n      }\n    }), item.profile_description && !isRteEmpty(item.profile_description) && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.additionalInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 23\n      }\n    }, t(\"aboutUs\"))), /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: jobDetails.profile_description\n      } // To convert rte string into html\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }\n    })), item.companyPageUrl && /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.additionalInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }\n    }, `${t(\"readMore\")} : `, /*#__PURE__*/React.createElement(\"a\", {\n      href: item.companyPageUrl,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 19\n      }\n    }, `${item.companyPageUrl}`)), !!(item === null || item === void 0 ? void 0 : item.url) && /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.sourceInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 19\n      }\n    }, t(\"source\"), /*#__PURE__*/React.createElement(\"a\", {\n      href: `${item === null || item === void 0 ? void 0 : item.url}`,\n      className: classes.metaData,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 21\n      }\n    }, t(\"mol\"))))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Hidden, {\n      smDown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 15\n      }\n    }, item.status === 1 && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      className: classes.ctaBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FavBtn, {\n      isFav: !!item.favourite,\n      handleFav: () => toggleFavoriteJobs(item.companyBusinessId, item.id, !favBtnstatus),\n      btnText: !item.favourite ? t(\"addFav\") : t(\"deleteFav\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 21\n      }\n    }, item.url ? /*#__PURE__*/React.createElement(\"a\", {\n      className: \"btnLink\",\n      href: item.urlToApplyJob,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(DescriptionIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 29\n      }\n    }, t(\"applyBtn\")))) : /*#__PURE__*/React.createElement(Link, {\n      className: \"btnLink\",\n      to: customURL(item.urlToApplyJob, \"application\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(DescriptionIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 29\n      }\n    }, t(\"applyBtn\")))))))), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      open: showSuccessSnackbar,\n      autoHideDuration: 2000,\n      onClose: () => {\n        closeSnackbar();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper, {\n      variant: \"success\",\n      message: t(\"successMsg\"),\n      onClose: () => {\n        closeSnackbar();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      open: showFailedSnackbar,\n      autoHideDuration: 2000,\n      onClose: () => {\n        closeSnackbar();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper, {\n      onClose: () => {\n        closeSnackbar();\n      },\n      variant: \"error\",\n      message: t(\"failedMsg\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(CustomizedDialogs, {\n      showDialog: showDialog,\n      dialogText: t(\"loginText\"),\n      loginModal: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }\n    }));\n  }));\n};\n\nexport default withStyles(styles)(JobDetailsComponent);","map":{"version":3,"names":["React","useEffect","useState","Button","Grid","Divider","Snackbar","Hidden","withStyles","useTranslation","Link","DescriptionIcon","ArrowBackIosIcon","MySnackbarContentWrapper","FavBtn","convertJobHoursToStr","convertJobTypeToStr","convertJobWorksStartToStr","customURL","CustomizedDialogs","Loader","SEO","mol_page_url","axios","useSelector","isRteEmpty","styles","theme","addMargin","margin","backBtnContainer","backBtnText","color","palette","secondary","main","textDecoration","primary","companyImage","minHeight","maxHeight","maxWidth","breakpoints","down","width","only","companyImgFrame","display","alignItems","justifyContent","companyLogo","minWidth","backgroundSize","backgroundRepeat","jobDetail","padding","border","jobDesc","additionalInfo","sourceInfo","float","metaData","metaDataTitle","ctaBtn","marginBottom","up","JobDetailsComponent","jobDetails","workStart","toggleFavoriteJobs","favBtnstatus","showSuccessSnackbar","showFailedSnackbar","closeSnackbar","showDialog","showSpinner","classes","changePagination","jobsToRender","setJobsToRender","id","state","jobs","get","then","res","data","console","log","t","heroImage","logo","path","title","jobName","companyName","selectedPage","dateFormat","date","formatedDate","split","newDateFormat","map","item","url","pathname","dateOfApplication","durationOfEmployment","workingTime","status","favourite","companyBusinessId","urlToApplyJob","marginLeft","backgroundImage","__html","jobDescription","profile_description","companyPageUrl","vertical","horizontal"],"sources":["/Users/eduardkazeks/Documents/GitHub/JobPortalEE/src/components/jobs/jobDetails.component.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, Grid, Divider, Snackbar, Hidden } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { MySnackbarContentWrapper } from \"../../utils/snackbar.utils\";\nimport { FavBtn } from \"../../utils/favBtn.js\";\nimport {\n  convertJobHoursToStr,\n  convertJobTypeToStr,\n  convertJobWorksStartToStr,\n  customURL,\n} from \"../../utils/helperFunctions\";\nimport CustomizedDialogs from \"../../utils/customizedDialog\";\nimport Loader from \"../../utils/loader\";\nimport { SEO } from \"../seo/metaInfo.component\";\nimport { mol_page_url } from \"../../constants\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { isRteEmpty } from \"../../containers/validate\";\n\nconst styles = (theme) => ({\n  addMargin: {\n    margin: \"20px auto 20px auto\",\n  },\n  backBtnContainer: {\n    margin: \"16px auto\",\n  },\n  backBtnText: {\n    color: theme.palette.secondary.main,\n    \"&:hover\": {\n      textDecoration: \"none\",\n      color: theme.palette.primary.main,\n    },\n  },\n\n  companyImage: {\n    minHeight: 420,\n    maxHeight: 600,\n    maxWidth: \"100%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      minHeight: 190,\n      maxHeight: 190,\n      width: \"100%\",\n    },\n    [theme.breakpoints.only(\"sm\")]: {\n      minHeight: 360,\n      maxHeight: 420,\n      width: \"100%\",\n    },\n  },\n  companyImgFrame: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n\n  companyLogo: {\n    minHeight: 80,\n    minWidth: 150,\n    backgroundSize: \"contain\",\n    backgroundRepeat: \"no-repeat\",\n  },\n  jobDetail: {\n    margin: \"20px 0 50px 0\",\n    padding: \"0 0 50px\",\n    border: \"1px solid lightgray\",\n  },\n  jobDesc: {\n    padding: \"20px 40px\",\n  },\n  additionalInfo: {\n    padding: \"10px 40px\",\n  },\n  sourceInfo: {\n    padding: \"10px 40px\",\n    float: \"right\",\n  },\n  metaData: {\n    color: theme.palette.secondary.main,\n  },\n  metaDataTitle: {\n    color: theme.palette.primary.main,\n  },\n\n  ctaBtn: {\n    marginBottom: 20,\n    [theme.breakpoints.up(\"md\")]: {\n      justifyContent: \"flex-end\",\n      marginBottom: 50,\n    },\n  },\n});\n\nconst JobDetailsComponent = ({\n  jobDetails,\n  workStart,\n  toggleFavoriteJobs,\n  favBtnstatus,\n  showSuccessSnackbar,\n  showFailedSnackbar,\n  closeSnackbar,\n  showDialog,\n  showSpinner,\n  classes,\n  changePagination,\n}) => {\n  const [jobsToRender, setJobsToRender] = useState([]);\n  const { id } = useSelector((state) => state.jobs);\n\n  useEffect(() => {\n    axios.get(`https://localhost:7262/jobsEn/${id}`).then((res) => {\n      setJobsToRender(res.data);\n      console.log(jobsToRender);\n    });\n  }, []);\n\n  const { t } = useTranslation(\"jobDetails\", \"jobhours\", \"jobtype\");\n  const heroImage = jobsToRender.logo && jobsToRender.logo[0].path;\n  const title = `${jobsToRender?.jobName} - ${jobsToRender?.companyName} | Avoimet tyÃ¶paikat`;\n  const selectedPage = 1;\n\n  const dateFormat = (date) => {\n    const formatedDate = date.split('T', 10)[0].split('-')\n    const newDateFormat = formatedDate[2] + '.' + formatedDate[1] + '.' + formatedDate[0]\n      if (newDateFormat == 'undefined.undefined.' || newDateFormat == 'undefined.undefined.string') {\n        return 'Date'\n      } else {\n        return newDateFormat\n      }\n  }\n  \n  return (\n    <div className=\"container\">\n      {jobsToRender && jobsToRender.map((item) => {\n        return (\n          <div>\n            <SEO\n              title={title}\n              location={item?.url}\n              heroImage={item?.logo} // Incase we want to use post specific image..Right now, we are using same default image for all posts as marketing wanted.\n            />\n            <div className={classes.addMargin}>\n              <div className={classes.backBtnContainer}>\n                <Link\n                  onClick={() => changePagination(false)}\n                  to={{\n                    pathname: \"/tyopaikat\",\n                  }}\n                  className={classes.backBtnText}\n                >\n                  <ArrowBackIosIcon /> {t(\"backToJobList\")}\n                </Link>\n              </div>\n              <Grid container spacing={4} alignItems=\"center\">\n                <Grid item sm={12} md={7}>\n                  <h2 className=\"ad_title_1\">{`${item.jobName}`}</h2>\n                  <h6>\n                    <strong className={classes.metaDataTitle}>\n                      <span>{t(\"applyPeriod\")}: </span>\n                      <span className={classes.metaData}>\n                        {item.dateOfApplication}\n                      </span>\n                    </strong>\n                  </h6>\n                  <h6>\n                    <strong className={classes.metaDataTitle}>\n                      <span>{t(\"jobtype:jobTypeLabel\")}: </span>\n                      <span className={classes.metaData}>\n                        {item.durationOfEmployment}\n                      </span>\n                    </strong>\n                  </h6>\n                  <h6>\n                    <strong className={classes.metaDataTitle}>\n                      <span>{t(\"jobhours:jobHoursLabel\")}: </span>\n                      <span className={classes.metaData}>\n                        {convertJobHoursToStr(t, item.workingTime)}\n                      </span>\n                    </strong>\n                  </h6>\n                  {workStart != null ? (\n                    <h6>\n                      <strong className={classes.metaDataTitle}>\n                        <span>{t(\"jobhours:workStartLabel\")}: </span>\n                        <span className={classes.metaData}>\n                          {convertJobWorksStartToStr(t, workStart)}\n                        </span>\n                      </strong>\n                    </h6>\n                  ) : null}\n                  {item.status === 2 && (\n                    <p style={{ color: \"red\" }}>{t(\"inactiveBtn\")}</p>\n                  )}\n                </Grid>\n                <Grid item sm={12} md={5}>\n                  {item.status === 1 && (\n                    <Grid container spacing={2} className={classes.ctaBtn}>\n                      <Grid item>\n                        <Button color=\"primary\" variant=\"outlined\">\n                          {t(\"shareBtn\")}\n                        </Button>\n                      </Grid>\n                      <Grid item>\n                        <FavBtn\n                          isFav={!!item.favourite}\n                          handleFav={() =>\n                            toggleFavoriteJobs(\n                              item.companyBusinessId,\n                              item.id,\n                              !favBtnstatus\n                            )\n                          }\n                          btnText={\n                            !item.favourite ? t(\"addFav\") : t(\"deleteFav\")\n                          }\n                        />\n                      </Grid>\n                      <Grid item>\n                        {item.urlToApplyJob ? (\n                              <a\n                                className=\"btnLink\"\n                                href={item.urlToApplyJob}\n                                target=\"_blank\"\n                                rel=\"noopener noreferrer\"\n                              >\n                                <Button color=\"primary\" variant=\"contained\">\n                                  <DescriptionIcon />\n                                  <span style={{ marginLeft: 8 }}>{t(\"applyBtn\")}</span>\n                                </Button>\n                              </a>\n                            ) : (\n                              <Link\n                                className=\"btnLink\"\n                                to={customURL(item.urlToApplyJob, \"application\")}\n                              >\n                                <Button color=\"primary\" variant=\"contained\">\n                                  <DescriptionIcon />\n                                  <span style={{ marginLeft: 8 }}>{t(\"applyBtn\")}</span>\n                                </Button>\n                              </Link>\n                            )}\n                      </Grid>\n                    </Grid>\n                  )}\n                </Grid>\n              </Grid>\n              <Divider style={{ margin: \"15px 0 0 0\" }} />\n            </div>\n            <Grid container justifyContent=\"flex-end\">\n              <div\n                className={item.logo ? classes.logo : null}\n                style={{\n                  backgroundImage: `url(${\n                    item.logo ? item.logo[0].path : null\n                  })`,\n                }}\n              />\n            </Grid>\n            <div className={classes.jobDetail}>\n              {item.logo && (\n                <div className={classes.companyImgFrame}>\n                  <img\n                    src={heroImage}\n                    alt=\"company-img\"\n                    className={item.logo ? classes.companyImage : \"\"}\n                  />\n                </div>\n              )}\n              <div\n                className={classes.jobDesc}\n                dangerouslySetInnerHTML={{ __html: item.jobDescription }} // To convert rte string into html\n              />\n              {item.profile_description &&\n                !isRteEmpty(item.profile_description) && (\n                  <div className={classes.additionalInfo}>\n                    <p>\n                      <strong>{t(\"aboutUs\")}</strong>\n                    </p>\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: jobDetails.profile_description,\n                      }} // To convert rte string into html\n                    />\n                  </div>\n                )}\n              {item.companyPageUrl && (\n                <p className={classes.additionalInfo}>\n                  {`${t(\"readMore\")} : `}\n                  <a\n                    href={item.companyPageUrl}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    {`${item.companyPageUrl}`}\n                  </a>\n                </p>\n              )}\n              {!!item?.url && (\n                <p className={classes.sourceInfo}>\n                  <em>\n                    {t(\"source\")}\n                    <a\n                      href={`${item?.url}`}\n                      className={classes.metaData}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {t(\"mol\")}\n                    </a>\n                  </em>\n                </p>\n              )}\n            </div>\n            <Grid container spacing={4} alignItems=\"center\">\n              <Hidden smDown>\n                <Grid item sm={12} md={7} />\n              </Hidden>\n              <Grid item sm={12} md={5}>\n                {item.status === 1 && (\n                  <Grid container spacing={2} className={classes.ctaBtn}>\n                    {/* <Grid item>\n                      <Button color='primary' variant='outlined'>\n                        {t('shareBtn')}\n                      </Button>\n                    </Grid> */}\n                    <Grid item>\n                      <FavBtn\n                        isFav={!!item.favourite}\n                        handleFav={() =>\n                          toggleFavoriteJobs(\n                            item.companyBusinessId,\n                            item.id,\n                            !favBtnstatus\n                          )\n                        }\n                        btnText={\n                          !item.favourite ? t(\"addFav\") : t(\"deleteFav\")\n                        }\n                      />\n                    </Grid>\n                    <Grid item>\n                      {item.url ? (\n                        <a\n                          className=\"btnLink\"\n                          href={item.urlToApplyJob}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                        >\n                          <Button color=\"primary\" variant=\"contained\">\n                            <DescriptionIcon />\n                            <span style={{ marginLeft: 8 }}>{t(\"applyBtn\")}</span>\n                          </Button>\n                        </a>\n                      ) : (\n                        <Link\n                          className=\"btnLink\"\n                          to={customURL(item.urlToApplyJob, \"application\")}\n                        >\n                          <Button color=\"primary\" variant=\"contained\">\n                            <DescriptionIcon />\n                            <span style={{ marginLeft: 8 }}>{t(\"applyBtn\")}</span>\n                          </Button>\n                        </Link>\n                      )}\n                    </Grid>\n                  </Grid>\n                )}\n              </Grid>\n            </Grid>\n\n          \n          {/* Display structure for mol ads --Copy code from molAds.js if needed in future otherwise delete that file */}\n          {/* <Loader showSpinner={showSpinner} /> */}\n          <Snackbar\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\",\n            }}\n            open={showSuccessSnackbar}\n            autoHideDuration={2000}\n            onClose={() => {\n              closeSnackbar();\n            }}\n          >\n            <MySnackbarContentWrapper\n              variant=\"success\"\n              message={t(\"successMsg\")}\n              onClose={() => {\n                closeSnackbar();\n              }}\n            />\n          </Snackbar>\n          <Snackbar\n            anchorOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\",\n            }}\n            open={showFailedSnackbar}\n            autoHideDuration={2000}\n            onClose={() => {\n              closeSnackbar();\n            }}\n          >\n            <MySnackbarContentWrapper\n              onClose={() => {\n                closeSnackbar();\n              }}\n              variant=\"error\"\n              message={t(\"failedMsg\")}\n            />\n          </Snackbar>\n          <CustomizedDialogs\n            showDialog={showDialog}\n            dialogText={t(\"loginText\")}\n            loginModal\n          />\n        </div> \n        )\n      })}\n                </div>\n  );\n};\n\nexport default withStyles(styles)(JobDetailsComponent);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}