{"ast":null,"code":"import { reduxForm, formValueSelector } from 'redux-form';\nimport { connect } from 'react-redux';\nimport EditAdvertFormComponent from '../../../components/companies/advertisements/editAdvertForm.component';\nimport { saveAndPublishAdvertisement, updateAndPublishAdvertisement, closeSnackbar, clearImagesFromState, editOffer } from '../../../actions';\nimport store from '../../../store';\nimport { jobPostFormValidate as validate } from '../../validate';\nconst EditAdvertFormContainer = reduxForm({\n  form: 'editVacancy',\n  validate\n})(EditAdvertFormComponent);\n\nconst mapStateToProps = state => ({\n  // When backend sends back the data, image document is sent as company_image\n  image: formValueSelector('editVacancy')(state, 'company_image') ? formValueSelector('editVacancy')(state, 'company_image')[0].path : formValueSelector('editVacancy')(state, 'image_document') ? formValueSelector('editVacancy')(state, 'image_document') : undefined,\n  jobCategories: state.jobCategories.jobCategories.filter(jobs => jobs.type !== 'all'),\n  apiSuccess: store.getState().advertisement.apiSuccess,\n  apiFailed: store.getState().advertisement.apiFailed,\n  showSpinner: store.getState().advertisement.showSpinner,\n  synchronousError: state.form && state.form.editVacancy && state.form.editVacancy.syncErrors\n});\n\nconst mapDispatchToProps = {\n  saveAndPublishAdvertisement,\n  closeSnackbar,\n  updateAndPublishAdvertisement,\n  clearImagesFromState,\n  editOffer,\n  editVacancyForm\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditAdvertFormContainer);","map":{"version":3,"names":["reduxForm","formValueSelector","connect","EditAdvertFormComponent","saveAndPublishAdvertisement","updateAndPublishAdvertisement","closeSnackbar","clearImagesFromState","editOffer","store","jobPostFormValidate","validate","EditAdvertFormContainer","form","mapStateToProps","state","image","path","undefined","jobCategories","filter","jobs","type","apiSuccess","getState","advertisement","apiFailed","showSpinner","synchronousError","editVacancy","syncErrors","mapDispatchToProps","editVacancyForm"],"sources":["/Users/eduardkazeks/Documents/GitHub/JobPortalEE/src/containers/companies/advertisements/editAdvertForm.container.js"],"sourcesContent":["import { reduxForm, formValueSelector } from 'redux-form';\nimport { connect } from 'react-redux';\nimport EditAdvertFormComponent from '../../../components/companies/advertisements/editAdvertForm.component';\nimport { saveAndPublishAdvertisement, updateAndPublishAdvertisement, closeSnackbar, clearImagesFromState, editOffer } from '../../../actions';\nimport store from '../../../store';\nimport { jobPostFormValidate as validate } from '../../validate';\n\nconst EditAdvertFormContainer = reduxForm({\n  form: 'editVacancy',\n  validate,\n})(EditAdvertFormComponent);\n\nconst mapStateToProps = state => ({\n  // When backend sends back the data, image document is sent as company_image\n  image: formValueSelector('editVacancy')(state, 'company_image')\n    ? formValueSelector('editVacancy')(state, 'company_image')[0].path\n    : formValueSelector('editVacancy')(state, 'image_document')\n    ? formValueSelector('editVacancy')(state, 'image_document')\n    : undefined,\n  jobCategories: state.jobCategories.jobCategories.filter(jobs => jobs.type !== 'all'),\n  apiSuccess: store.getState().advertisement.apiSuccess,\n  apiFailed: store.getState().advertisement.apiFailed,\n  showSpinner: store.getState().advertisement.showSpinner,\n  synchronousError: state.form && state.form.editVacancy && state.form.editVacancy.syncErrors,\n});\n\nconst mapDispatchToProps = {\n  saveAndPublishAdvertisement,\n  closeSnackbar,\n  updateAndPublishAdvertisement,\n  clearImagesFromState,\n  editOffer,\n  editVacancyForm\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditAdvertFormContainer);\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,iBAApB,QAA6C,YAA7C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,uBAAP,MAAoC,uEAApC;AACA,SAASC,2BAAT,EAAsCC,6BAAtC,EAAqEC,aAArE,EAAoFC,oBAApF,EAA0GC,SAA1G,QAA2H,kBAA3H;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,mBAAmB,IAAIC,QAAhC,QAAgD,gBAAhD;AAEA,MAAMC,uBAAuB,GAAGZ,SAAS,CAAC;EACxCa,IAAI,EAAE,aADkC;EAExCF;AAFwC,CAAD,CAAT,CAG7BR,uBAH6B,CAAhC;;AAKA,MAAMW,eAAe,GAAGC,KAAK,KAAK;EAChC;EACAC,KAAK,EAAEf,iBAAiB,CAAC,aAAD,CAAjB,CAAiCc,KAAjC,EAAwC,eAAxC,IACHd,iBAAiB,CAAC,aAAD,CAAjB,CAAiCc,KAAjC,EAAwC,eAAxC,EAAyD,CAAzD,EAA4DE,IADzD,GAEHhB,iBAAiB,CAAC,aAAD,CAAjB,CAAiCc,KAAjC,EAAwC,gBAAxC,IACAd,iBAAiB,CAAC,aAAD,CAAjB,CAAiCc,KAAjC,EAAwC,gBAAxC,CADA,GAEAG,SAN4B;EAOhCC,aAAa,EAAEJ,KAAK,CAACI,aAAN,CAAoBA,aAApB,CAAkCC,MAAlC,CAAyCC,IAAI,IAAIA,IAAI,CAACC,IAAL,KAAc,KAA/D,CAPiB;EAQhCC,UAAU,EAAEd,KAAK,CAACe,QAAN,GAAiBC,aAAjB,CAA+BF,UARX;EAShCG,SAAS,EAAEjB,KAAK,CAACe,QAAN,GAAiBC,aAAjB,CAA+BC,SATV;EAUhCC,WAAW,EAAElB,KAAK,CAACe,QAAN,GAAiBC,aAAjB,CAA+BE,WAVZ;EAWhCC,gBAAgB,EAAEb,KAAK,CAACF,IAAN,IAAcE,KAAK,CAACF,IAAN,CAAWgB,WAAzB,IAAwCd,KAAK,CAACF,IAAN,CAAWgB,WAAX,CAAuBC;AAXjD,CAAL,CAA7B;;AAcA,MAAMC,kBAAkB,GAAG;EACzB3B,2BADyB;EAEzBE,aAFyB;EAGzBD,6BAHyB;EAIzBE,oBAJyB;EAKzBC,SALyB;EAMzBwB;AANyB,CAA3B;AAQA,eAAe9B,OAAO,CAACY,eAAD,EAAkBiB,kBAAlB,CAAP,CAA6CnB,uBAA7C,CAAf"},"metadata":{},"sourceType":"module"}