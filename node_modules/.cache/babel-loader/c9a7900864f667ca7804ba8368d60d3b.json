{"ast":null,"code":"var _jsxFileName = \"/Users/eduardkazeks/Documents/GitHub/JobPortalEE/src/components/companies/ads/adDetails.component.js\";\nimport React, { useEffect, useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Divider, Grid, Button, Snackbar } from '@material-ui/core';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport store from '../../../store';\nimport { customURL } from '../../../utils/helperFunctions';\nimport { updateAdvertisement, changeCampaign, populateVacancyForm, changeActivePostToInactive, closeSnackbar } from '../../../actions';\nimport { MySnackbarContentWrapper } from '../../../utils/snackbar.utils';\nimport { customTranslateCampaign, customTranslateStatus } from '../../../utils/customTranslate';\nimport Loader from '../../../utils/loader';\nimport axios from 'axios';\n\nconst styles = theme => ({\n  titleMargin: {\n    margin: '20px auto 24px auto',\n    [theme.breakpoints.down('sm')]: {\n      marginTop: 4\n    }\n  },\n  companyLogo: {\n    minHeight: 80,\n    minWidth: 150,\n    backgroundSize: 'contain',\n    backgroundRepeat: 'no-repeat',\n    marginBottom: 6\n  },\n  companyImgFrame: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  companyImage: {\n    minHeight: 420,\n    maxHeight: 600,\n    maxWidth: '100%',\n    [theme.breakpoints.down('xs')]: {\n      minHeight: 190,\n      maxHeight: 190,\n      width: '100%'\n    },\n    [theme.breakpoints.only('sm')]: {\n      minHeight: 360,\n      maxHeight: 420,\n      width: '100%'\n    }\n  },\n  adDetail: {\n    margin: '0px 0 50px 0',\n    padding: '0 0 50px',\n    border: '1px solid lightgray'\n  },\n  jobDesc: {\n    padding: 40\n  },\n  ctaBtn: {\n    marginBottom: 50,\n    [theme.breakpoints.up('md')]: {\n      justifyContent: 'flex-end'\n    }\n  },\n  backBtnText: {\n    color: theme.palette.secondary.main,\n    '&:hover': {\n      textDecoration: 'none',\n      color: theme.palette.primary.main\n    }\n  },\n  backBtnContainer: {\n    marginTop: 2\n  },\n  campaignType: {\n    marginRight: 16\n  }\n});\n\nconst AdDetails = _ref => {\n  let {\n    classes,\n    viewSelectedAd,\n    userRole,\n    showSuccessSnackbar,\n    showFailedSnackbar,\n    showSpinner,\n    selectedPage,\n    campaignsList,\n    props\n  } = _ref;\n  const {\n    t\n  } = useTranslation('adDetails');\n  const [jobsToRender, setJobsToRender] = useState([]);\n  selectedPage = 1; //const jobsPostNumber =  useSelector(state => state.getState().jobPostNumber);\n\n  const jobPostNumber = 653536;\n  useEffect(() => {\n    axios.get(`https://localhost:7262/jobsEn`).then(res => {\n      setJobsToRender(res.data);\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   {jobsToRender.slice(selectedPage * 10, selectedPage * 10 + 10).map(item => {\n    //     return (\n    //       <div key={item.jobPostNumber}>\n    //       <Grid>\n    //         <div>\n    //           <h1>\n    //             {item.jobTags}\n    //             {console.log(item.jobPostNumber)}\n    //           </h1>\n    //         </div>\n    //       </Grid>\n    //       </div>\n    //     )\n    //   })}\n    //   <h1>Test</h1>\n    // </div>\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }\n    }, jobsToRender !== [] && jobsToRender.jobPostNumber !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.backBtnContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: userRole === 'company' ? '/omat-ilmoitukseni' : '/tyopaikat',\n      className: classes.backBtnText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }), \" \", t('jobs:backButton'))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.titleMargin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"ad_title_1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, `${viewSelectedAd.job_title}, ${viewSelectedAd.job_location}`), /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"ad_title_2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      style: {\n        marginRight: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }\n    }, `${viewSelectedAd.status === 0 ? t('draft') : viewSelectedAd.status === 1 ? t('active') : t('inactive')}`, \":\"), /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 19\n      }\n    }, viewSelectedAd && viewSelectedAd.created && `${new Intl.DateTimeFormat('fi-FI').format(new Date(viewSelectedAd.created))} - ${new Intl.DateTimeFormat('fi-FI').format(new Date(viewSelectedAd.due_date))}`))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      className: classes.ctaBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 19\n      }\n    }, viewSelectedAd.status === 2 ? /*#__PURE__*/React.createElement(Link, {\n      to: \"/tyopaikkailmoitus/\",\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => {\n        store.dispatch(populateVacancyForm(viewSelectedAd.post_id, false));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }, t('common:copyBtn'))) : viewSelectedAd.status === 1 ? /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => {\n        // alert('updateJOBPOSTSTATUS');\n        store.dispatch(changeActivePostToInactive(userRole === 'admin' ? `${viewSelectedAd.post_id}admin${viewSelectedAd.company_id}` : viewSelectedAd.post_id));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }, t('common:inactiveBtn')) : ''), viewSelectedAd.status === 1 && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/tyopaikkailmoitus/${viewSelectedAd.post_id}`,\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => store.dispatch(updateAdvertisement()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 25\n      }\n    }, t('editBtn')))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 19\n      }\n    }, viewSelectedAd.job_title && /*#__PURE__*/React.createElement(Link, {\n      to: customURL(viewSelectedAd.job_post_link, 'campaign'),\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => store.dispatch(changeCampaign(campaignsList.find(campaign => campaign.id === viewSelectedAd.campaign_id))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    }, t('boostBtn'))))))), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.addMargin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.campaignType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 21\n      }\n    }, t('postType'), \": \"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, customTranslateCampaign(viewSelectedAd.campaign_id))), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, t('postStatus'), \": \"), customTranslateStatus(viewSelectedAd.status)))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 4,\n      style: {\n        display: 'flex',\n        justifyContent: 'flex-end'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.companyLogo,\n      style: {\n        backgroundImage: `url(${viewSelectedAd.company_logo ? viewSelectedAd.company_logo[0].path : ''})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.adDetail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.companyImgFrame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: viewSelectedAd.company_image && viewSelectedAd.company_image[0].path,\n      alt: viewSelectedAd.company_image ? `${viewSelectedAd.job_title} Company-Image` : '',\n      className: viewSelectedAd.company_image ? classes.companyImage : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.jobDesc,\n      dangerouslySetInnerHTML: {\n        __html: viewSelectedAd.job_description\n      } // To convert rte string into html\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      className: classes.ctaBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }\n    }, viewSelectedAd.status === 2 ? /*#__PURE__*/React.createElement(Link, {\n      to: \"/tyopaikkailmoitus/\",\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => {\n        store.dispatch(populateVacancyForm(viewSelectedAd.post_id, false));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 23\n      }\n    }, t('common:copyBtn'))) : viewSelectedAd.status === 1 ? /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => {\n        store.dispatch(changeActivePostToInactive(userRole === 'admin' ? `${viewSelectedAd.post_id}admin${viewSelectedAd.company_id}` : viewSelectedAd.post_id));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }\n    }, t('common:inactiveBtn')) : ''), viewSelectedAd.status === 1 && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/tyopaikkailmoitus/${viewSelectedAd.post_id}`,\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: () => store.dispatch(updateAdvertisement()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 23\n      }\n    }, t('editBtn')))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }\n    }, viewSelectedAd.job_title && /*#__PURE__*/React.createElement(Link, {\n      to: customURL(viewSelectedAd.job_post_link, 'campaign'),\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => store.dispatch(changeCampaign(campaignsList.find(campaign => campaign.id === viewSelectedAd.campaign_id))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 23\n      }\n    }, t('boostBtn')))))))) : '', /*#__PURE__*/React.createElement(Loader, {\n      showSpinner: showSpinner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      open: showSuccessSnackbar,\n      autoHideDuration: 2000,\n      onClose: () => store.dispatch(closeSnackbar()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper, {\n      onClose: () => store.dispatch(closeSnackbar()),\n      variant: \"success\",\n      message: t('successMsg'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      open: showFailedSnackbar,\n      autoHideDuration: 2000,\n      onClose: () => store.dispatch(closeSnackbar()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper, {\n      onClose: () => store.dispatch(closeSnackbar()),\n      variant: \"error\",\n      message: t('failedMsg'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }\n    })))\n  );\n};\n\nexport default withStyles(styles)(AdDetails);","map":{"version":3,"names":["React","useEffect","useState","withStyles","Divider","Grid","Button","Snackbar","ArrowBackIosIcon","Link","useTranslation","store","customURL","updateAdvertisement","changeCampaign","populateVacancyForm","changeActivePostToInactive","closeSnackbar","MySnackbarContentWrapper","customTranslateCampaign","customTranslateStatus","Loader","axios","styles","theme","titleMargin","margin","breakpoints","down","marginTop","companyLogo","minHeight","minWidth","backgroundSize","backgroundRepeat","marginBottom","companyImgFrame","display","alignItems","justifyContent","companyImage","maxHeight","maxWidth","width","only","adDetail","padding","border","jobDesc","ctaBtn","up","backBtnText","color","palette","secondary","main","textDecoration","primary","backBtnContainer","campaignType","marginRight","AdDetails","classes","viewSelectedAd","userRole","showSuccessSnackbar","showFailedSnackbar","showSpinner","selectedPage","campaignsList","props","t","jobsToRender","setJobsToRender","jobPostNumber","get","then","res","data","undefined","job_title","job_location","status","created","Intl","DateTimeFormat","format","Date","due_date","dispatch","post_id","company_id","job_post_link","find","campaign","id","campaign_id","addMargin","backgroundImage","company_logo","path","company_image","__html","job_description","vertical","horizontal"],"sources":["/Users/eduardkazeks/Documents/GitHub/JobPortalEE/src/components/companies/ads/adDetails.component.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Divider, Grid, Button, Snackbar } from '@material-ui/core';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\nimport store from '../../../store';\nimport { customURL } from '../../../utils/helperFunctions';\nimport { updateAdvertisement, changeCampaign, populateVacancyForm, changeActivePostToInactive, closeSnackbar } from '../../../actions';\nimport { MySnackbarContentWrapper } from '../../../utils/snackbar.utils';\nimport { customTranslateCampaign, customTranslateStatus } from '../../../utils/customTranslate';\nimport Loader from '../../../utils/loader';\nimport axios from 'axios';\n\nconst styles = theme => ({\n  titleMargin: {\n    margin: '20px auto 24px auto',\n    [theme.breakpoints.down('sm')]: {\n      marginTop: 4,\n    },\n  },\n  companyLogo: {\n    minHeight: 80,\n    minWidth: 150,\n    backgroundSize: 'contain',\n    backgroundRepeat: 'no-repeat',\n    marginBottom: 6,\n  },\n  companyImgFrame: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  companyImage: {\n    minHeight: 420,\n    maxHeight: 600,\n    maxWidth: '100%',\n    [theme.breakpoints.down('xs')]: {\n      minHeight: 190,\n      maxHeight: 190,\n      width: '100%',\n    },\n    [theme.breakpoints.only('sm')]: {\n      minHeight: 360,\n      maxHeight: 420,\n      width: '100%',\n    },\n  },\n  adDetail: {\n    margin: '0px 0 50px 0',\n    padding: '0 0 50px',\n    border: '1px solid lightgray',\n  },\n  jobDesc: {\n    padding: 40,\n  },\n  ctaBtn: {\n    marginBottom: 50,\n    [theme.breakpoints.up('md')]: {\n      justifyContent: 'flex-end',\n    },\n  },\n  backBtnText: {\n    color: theme.palette.secondary.main,\n    '&:hover': {\n      textDecoration: 'none',\n      color: theme.palette.primary.main,\n    },\n  },\n  backBtnContainer: {\n    marginTop: 2,\n  },\n  campaignType: {\n    marginRight: 16,\n  },\n});\n\nconst AdDetails = ({ classes, viewSelectedAd, userRole, showSuccessSnackbar, showFailedSnackbar, showSpinner, selectedPage, campaignsList, props }) => {\n  const { t } = useTranslation('adDetails');\n  const [jobsToRender, setJobsToRender] = useState([]);\n  selectedPage = 1;\n  //const jobsPostNumber =  useSelector(state => state.getState().jobPostNumber);\n  const jobPostNumber = 653536;\n\n  useEffect(() => {\n    axios\n    .get(`https://localhost:7262/jobsEn`)\n    .then(res => {\n      setJobsToRender(res.data);\n    });\n  }, []);\n\n  return (\n    // <div>\n    //   {jobsToRender.slice(selectedPage * 10, selectedPage * 10 + 10).map(item => {\n    //     return (\n    //       <div key={item.jobPostNumber}>\n    //       <Grid>\n    //         <div>\n    //           <h1>\n\n    //             {item.jobTags}\n    //             {console.log(item.jobPostNumber)}\n    //           </h1>\n    //         </div>\n    //       </Grid>\n    //       </div>\n    //     )\n    //   })}\n    //   <h1>Test</h1>\n    // </div>\n    <div>\n              {jobsToRender !== [] && jobsToRender.jobPostNumber !== undefined ? (\n        <div className=\"container\">\n          <div className={classes.backBtnContainer}>\n            <Link to={userRole === 'company' ? '/omat-ilmoitukseni' : '/tyopaikat'} className={classes.backBtnText}>\n              <ArrowBackIosIcon /> {t('jobs:backButton')}\n            </Link>\n          </div>\n\n          <div className={classes.titleMargin}>\n            <Grid container>\n              <Grid item sm={12} md={7}>\n                <h2 className=\"ad_title_1\">{`${viewSelectedAd.job_title}, ${viewSelectedAd.job_location}`}</h2>\n                <h6 className=\"ad_title_2\">\n                  <strong style={{ marginRight: 10 }}>\n                    {`${viewSelectedAd.status === 0 ? t('draft') : viewSelectedAd.status === 1 ? t('active') : t('inactive')}`}:\n                  </strong>\n                  <strong>\n                    {viewSelectedAd &&\n                      viewSelectedAd.created &&\n                      `${new Intl.DateTimeFormat('fi-FI').format(new Date(viewSelectedAd.created))} - ${new Intl.DateTimeFormat('fi-FI').format(\n                        new Date(viewSelectedAd.due_date),\n                      )}`}\n                  </strong>\n                </h6>\n              </Grid>\n              <Grid item sm={12} md={5}>\n                <Grid container spacing={2} className={classes.ctaBtn}>\n                  <Grid item>\n                    {/* If post is active post, show Inactive btn. If it is inactive post, show copy btn in Addetails */}\n                    {viewSelectedAd.status === 2 ? (\n                      <Link to=\"/tyopaikkailmoitus/\" className=\"btnLink\">\n                        <Button\n                          variant=\"outlined\"\n                          color=\"primary\"\n                          onClick={() => {\n                            store.dispatch(populateVacancyForm(viewSelectedAd.post_id, false));\n                          }}\n                        >\n                          {t('common:copyBtn')}\n                        </Button>\n                      </Link>\n                    ) : viewSelectedAd.status === 1 ? (\n                      <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={() => {\n                          // alert('updateJOBPOSTSTATUS');\n                          store.dispatch(\n                            changeActivePostToInactive(\n                              userRole === 'admin' ? `${viewSelectedAd.post_id}admin${viewSelectedAd.company_id}` : viewSelectedAd.post_id,\n                            ),\n                          );\n                        }}\n                      >\n                        {t('common:inactiveBtn')}\n                      </Button>\n                    ) : (\n                      ''\n                    )}\n                  </Grid>\n                  {viewSelectedAd.status === 1 && (\n                    <Grid item>\n                      <Link to={`/tyopaikkailmoitus/${viewSelectedAd.post_id}`} className=\"btnLink\">\n                        <Button variant=\"outlined\" color=\"primary\" onClick={() => store.dispatch(updateAdvertisement())}>\n                          {t('editBtn')}\n                        </Button>\n                      </Link>\n                    </Grid>\n                  )}\n                  <Grid item>\n                    {/* To avoid errors when viewSelectedAd is empty array */}\n                    {viewSelectedAd.job_title && (\n                      <Link to={customURL(viewSelectedAd.job_post_link, 'campaign')} className=\"btnLink\">\n                        <Button\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => store.dispatch(changeCampaign(campaignsList.find(campaign => campaign.id === viewSelectedAd.campaign_id)))}\n                        >\n                          {t('boostBtn')}\n                        </Button>\n                      </Link>\n                    )}\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n            <Divider />\n          </div>\n          <div className={classes.addMargin}>\n            <Grid container>\n              <Grid item sm={8}>\n                <div className={classes.campaignType}>\n                  <h6>\n                    <strong>{t('postType')}: </strong>\n                    <span>{customTranslateCampaign(viewSelectedAd.campaign_id)}</span>\n                  </h6>\n                  <h6>\n                    <strong>{t('postStatus')}: </strong>\n                    {customTranslateStatus(viewSelectedAd.status)}\n                  </h6>\n                </div>\n              </Grid>\n              <Grid item sm={4} style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <div\n                  className={classes.companyLogo}\n                  style={{\n                    backgroundImage: `url(${viewSelectedAd.company_logo ? viewSelectedAd.company_logo[0].path : ''})`,\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </div>\n          <div className={classes.adDetail}>\n            <div className={classes.companyImgFrame}>\n              <img\n                src={viewSelectedAd.company_image && viewSelectedAd.company_image[0].path}\n                alt={viewSelectedAd.company_image ? `${viewSelectedAd.job_title} Company-Image` : ''}\n                className={viewSelectedAd.company_image ? classes.companyImage : ''}\n              />\n            </div>\n            <div\n              className={classes.jobDesc}\n              dangerouslySetInnerHTML={{\n                __html: viewSelectedAd.job_description,\n              }} // To convert rte string into html\n            />\n          </div>\n          <Grid container>\n            <Grid item sm={12} md={6} />\n            <Grid item sm={12} md={6}>\n              <Grid container spacing={2} className={classes.ctaBtn}>\n                <Grid item>\n                  {/* If post is active post, show Inactive btn. If it is inactive post, show copy btn in Addetails */}\n                  {viewSelectedAd.status === 2 ? (\n                    <Link to=\"/tyopaikkailmoitus/\" className=\"btnLink\">\n                      <Button\n                        variant=\"outlined\"\n                        color=\"primary\"\n                        onClick={() => {\n                          store.dispatch(populateVacancyForm(viewSelectedAd.post_id, false));\n                        }}\n                      >\n                        {t('common:copyBtn')}\n                      </Button>\n                    </Link>\n                  ) : viewSelectedAd.status === 1 ? (\n                    <Button\n                      variant=\"outlined\"\n                      color=\"primary\"\n                      onClick={() => {\n                        store.dispatch(\n                          changeActivePostToInactive(\n                            userRole === 'admin' ? `${viewSelectedAd.post_id}admin${viewSelectedAd.company_id}` : viewSelectedAd.post_id,\n                          ),\n                        );\n                      }}\n                    >\n                      {t('common:inactiveBtn')}\n                    </Button>\n                  ) : (\n                    ''\n                  )}\n                </Grid>\n                {viewSelectedAd.status === 1 && (\n                  <Grid item>\n                    <Link to={`/tyopaikkailmoitus/${viewSelectedAd.post_id}`} className=\"btnLink\">\n                      <Button variant=\"outlined\" color=\"primary\" onClick={() => store.dispatch(updateAdvertisement())}>\n                        {t('editBtn')}\n                      </Button>\n                    </Link>\n                  </Grid>\n                )}\n                <Grid item>\n                  {/* To avoid errors when viewSelectedAd is empty array */}\n                  {viewSelectedAd.job_title && (\n                    <Link to={customURL(viewSelectedAd.job_post_link, 'campaign')} className=\"btnLink\">\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => store.dispatch(changeCampaign(campaignsList.find(campaign => campaign.id === viewSelectedAd.campaign_id)))}\n                      >\n                        {t('boostBtn')}\n                      </Button>\n                    </Link>\n                  )}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n      ) : (\n        ''\n      )}\n      \n      <Loader showSpinner={showSpinner} />\n\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={showSuccessSnackbar}\n        autoHideDuration={2000}\n        onClose={() => store.dispatch(closeSnackbar())}\n      >\n        <MySnackbarContentWrapper onClose={() => store.dispatch(closeSnackbar())} variant=\"success\" message={t('successMsg')} />\n      </Snackbar>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={showFailedSnackbar}\n        autoHideDuration={2000}\n        onClose={() => store.dispatch(closeSnackbar())}\n      >\n        <MySnackbarContentWrapper onClose={() => store.dispatch(closeSnackbar())} variant=\"error\" message={t('failedMsg')} />\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default withStyles(styles)(AdDetails);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}