{"ast":null,"code":"import { connect } from 'react-redux';\nimport { reduxForm } from 'redux-form';\nimport { saveAndPublishAdvertisement, closeDialog } from '../../../actions';\nimport PaymentInfoComponent from '../../../components/companies/advertisements/paymentInfo.component';\nimport { HELP_SERVICE_FEE, SOS_SERVICE_FEE } from '../../../constants';\nimport { customTranslateCampaign } from '../../../utils/customTranslate';\nimport { formatToFinnishCurrency } from '../../../utils/helperFunctions';\nconst PaymentInfoContainerForm = reduxForm({\n  form: 'paymentInfo'\n})(PaymentInfoComponent);\n\nconst mapStateToProps = state => {\n  const {\n    selectedCampaign,\n    viewSelectedAd,\n    isToChangeCampaign\n  } = state.advertisement;\n  const {\n    id,\n    value,\n    includes_mktbudget\n  } = selectedCampaign;\n  const addedBudget = state.advertisement.marketingDetails.marketing_budget;\n  const mktBudget = parseInt(includes_mktbudget && addedBudget ? addedBudget : 0);\n  let newCampValue;\n\n  if (isToChangeCampaign) {\n    const currentCampValue = viewSelectedAd.value;\n    newCampValue = value - currentCampValue; //Only charge if new campaign type is selected and the difference\n  }\n\n  const isExtraServiceAdded = state.advertisement.extraService.help || state.advertisement.extraService.sos ? true : false;\n  const extraService = state.advertisement.extraService.help ? 'help' : state.advertisement.extraService.sos ? 'sos' : null;\n  const extraServiceSum = extraService === 'help' ? HELP_SERVICE_FEE : extraService === 'sos' ? SOS_SERVICE_FEE : 0;\n  const totalSum = isExtraServiceAdded ? extraServiceSum : isToChangeCampaign ? newCampValue + mktBudget : value + mktBudget;\n  const userRole = state.client.user && state.client.user.data[5];\n  return {\n    /* initialValues: {\r\n      payment_method: userRole === 1 ? 'invoice' : null\r\n    }, */\n    campaignType: customTranslateCampaign(id),\n    campaignid: id,\n    campaignValue: value,\n    marketingBudget: formatToFinnishCurrency(mktBudget),\n    campaignPrice: formatToFinnishCurrency(value),\n    sumWithoutVAT: formatToFinnishCurrency(totalSum),\n    VAT: formatToFinnishCurrency(totalSum * 0.24),\n    totalSumWithVAT: formatToFinnishCurrency(totalSum * 1.24),\n    extraService: extraService,\n    totalSum: totalSum,\n    roleId: userRole,\n    isToChangeCampaign: isToChangeCampaign,\n    newCampValue: formatToFinnishCurrency(newCampValue),\n    jobPostStatus: viewSelectedAd === null || viewSelectedAd === void 0 ? void 0 : viewSelectedAd.status\n  };\n};\n\nconst mapDispatchToProps = {\n  saveAndPublishAdvertisement,\n  closeDialog\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentInfoContainerForm);","map":{"version":3,"names":["connect","reduxForm","saveAndPublishAdvertisement","closeDialog","PaymentInfoComponent","HELP_SERVICE_FEE","SOS_SERVICE_FEE","customTranslateCampaign","formatToFinnishCurrency","PaymentInfoContainerForm","form","mapStateToProps","state","selectedCampaign","viewSelectedAd","isToChangeCampaign","advertisement","id","value","includes_mktbudget","addedBudget","marketingDetails","marketing_budget","mktBudget","parseInt","newCampValue","currentCampValue","isExtraServiceAdded","extraService","help","sos","extraServiceSum","totalSum","userRole","client","user","data","campaignType","campaignid","campaignValue","marketingBudget","campaignPrice","sumWithoutVAT","VAT","totalSumWithVAT","roleId","jobPostStatus","status","mapDispatchToProps"],"sources":["C:/Users/shuli/OneDrive/Desktop/Work/JobportalN/JobPortalEE/src/containers/companies/advertisements/paymentInfo.container.js"],"sourcesContent":["import { connect } from 'react-redux';\r\nimport { reduxForm } from 'redux-form';\r\nimport { saveAndPublishAdvertisement, closeDialog } from '../../../actions';\r\nimport PaymentInfoComponent from '../../../components/companies/advertisements/paymentInfo.component';\r\nimport { HELP_SERVICE_FEE, SOS_SERVICE_FEE } from '../../../constants';\r\nimport { customTranslateCampaign } from '../../../utils/customTranslate';\r\nimport { formatToFinnishCurrency } from '../../../utils/helperFunctions';\r\n\r\nconst PaymentInfoContainerForm = reduxForm({\r\n  form: 'paymentInfo',\r\n})(PaymentInfoComponent);\r\n\r\nconst mapStateToProps = state => {\r\n  const { selectedCampaign, viewSelectedAd, isToChangeCampaign } = state.advertisement;\r\n  const { id, value, includes_mktbudget } = selectedCampaign;\r\n  const addedBudget = state.advertisement.marketingDetails.marketing_budget;\r\n  const mktBudget = parseInt(includes_mktbudget && addedBudget ? addedBudget : 0);\r\n\r\n  let newCampValue;\r\n  if (isToChangeCampaign) {\r\n    const currentCampValue = viewSelectedAd.value;\r\n    newCampValue = value - currentCampValue; //Only charge if new campaign type is selected and the difference\r\n  }\r\n  const isExtraServiceAdded = state.advertisement.extraService.help || state.advertisement.extraService.sos ? true : false;\r\n  const extraService = state.advertisement.extraService.help ? 'help' : state.advertisement.extraService.sos ? 'sos' : null;\r\n\r\n  const extraServiceSum = extraService === 'help' ? HELP_SERVICE_FEE : extraService === 'sos' ? SOS_SERVICE_FEE : 0;\r\n  const totalSum = isExtraServiceAdded ? extraServiceSum : isToChangeCampaign ? newCampValue + mktBudget : value + mktBudget;\r\n\r\n  const userRole = state.client.user && state.client.user.data[5];\r\n  return {\r\n    /* initialValues: {\r\n      payment_method: userRole === 1 ? 'invoice' : null\r\n    }, */\r\n    campaignType: customTranslateCampaign(id),\r\n    campaignid: id,\r\n    campaignValue: value,\r\n    marketingBudget: formatToFinnishCurrency(mktBudget),\r\n    campaignPrice: formatToFinnishCurrency(value),\r\n    sumWithoutVAT: formatToFinnishCurrency(totalSum),\r\n    VAT: formatToFinnishCurrency(totalSum * 0.24),\r\n    totalSumWithVAT: formatToFinnishCurrency(totalSum * 1.24),\r\n    extraService: extraService,\r\n    totalSum: totalSum,\r\n    roleId: userRole,\r\n    isToChangeCampaign: isToChangeCampaign,\r\n    newCampValue: formatToFinnishCurrency(newCampValue),\r\n    jobPostStatus: viewSelectedAd?.status,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  saveAndPublishAdvertisement,\r\n  closeDialog,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PaymentInfoContainerForm);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}