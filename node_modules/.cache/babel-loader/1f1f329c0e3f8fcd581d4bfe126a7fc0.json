{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shuli\\\\OneDrive\\\\Desktop\\\\Work\\\\JobportalN\\\\JobPortalEE\\\\src\\\\components\\\\companies\\\\ads\\\\adDetails.component.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Divider, Grid, Button, Snackbar } from \"@material-ui/core\";\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport store from \"../../../store\";\nimport { customURL } from \"../../../utils/helperFunctions\";\nimport { updateAdvertisement, changeCampaign, populateVacancyForm, changeActivePostToInactive, closeSnackbar } from \"../../../actions\";\nimport { MySnackbarContentWrapper } from \"../../../utils/snackbar.utils\";\nimport { customTranslateCampaign, customTranslateStatus } from \"../../../utils/customTranslate\";\nimport Loader from \"../../../utils/loader\";\nimport axios from \"axios\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst styles = theme => ({\n  titleMargin: {\n    margin: \"20px auto 24px auto\",\n    [theme.breakpoints.down(\"sm\")]: {\n      marginTop: 4\n    }\n  },\n  companyLogo: {\n    minHeight: 80,\n    minWidth: 150,\n    backgroundSize: \"contain\",\n    backgroundRepeat: \"no-repeat\",\n    marginBottom: 6\n  },\n  companyImgFrame: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  companyImage: {\n    minHeight: 420,\n    maxHeight: 600,\n    maxWidth: \"100%\",\n    [theme.breakpoints.down(\"xs\")]: {\n      minHeight: 190,\n      maxHeight: 190,\n      width: \"100%\"\n    },\n    [theme.breakpoints.only(\"sm\")]: {\n      minHeight: 360,\n      maxHeight: 420,\n      width: \"100%\"\n    }\n  },\n  adDetail: {\n    margin: \"0px 0 50px 0\",\n    padding: \"0 0 50px\",\n    border: \"1px solid lightgray\"\n  },\n  jobDesc: {\n    padding: 40\n  },\n  ctaBtn: {\n    marginBottom: 50,\n    [theme.breakpoints.up(\"md\")]: {\n      justifyContent: \"flex-end\"\n    }\n  },\n  backBtnText: {\n    color: theme.palette.secondary.main,\n    \"&:hover\": {\n      textDecoration: \"none\",\n      color: theme.palette.primary.main\n    }\n  },\n  backBtnContainer: {\n    marginTop: 2\n  },\n  campaignType: {\n    marginRight: 16\n  }\n});\n\nconst AdDetails = _ref => {\n  let {\n    classes,\n    viewSelectedAd,\n    userRole,\n    showSuccessSnackbar,\n    showFailedSnackbar,\n    showSpinner,\n    selectedPage,\n    campaignsList,\n    props\n  } = _ref;\n  const {\n    t\n  } = useTranslation(\"adDetails\");\n  const dispatch = useDispatch();\n  const {\n    jobPostNumber\n  } = useSelector(state => state.jobs);\n  const [jobsToRender, setJobsToRender] = useState([]);\n  selectedPage = 1; //const jobsPostNumber =  useSelector(state => state.getState().jobPostNumber);\n  // const jobPostNumber = 653536;\n\n  useEffect(() => {\n    axios.get(`https://localhost:7262/jobsEn/${jobPostNumber}`).then(res => {\n      setJobsToRender(res.data);\n    });\n  }, []);\n  return (\n    /*#__PURE__*/\n    // <div>\n    //   {jobsToRender.slice(selectedPage * 10, selectedPage * 10 + 10).map(item => {\n    //     return (\n    //       <div key={item.jobPostNumber}>\n    //       <Grid>\n    //         <div>\n    //           <h1>\n    //             {item.jobTags}\n    //             {console.log(item.jobPostNumber)}\n    //           </h1>\n    //         </div>\n    //       </Grid>\n    //       </div>\n    //     )\n    //   })}\n    //   <h1>Test</h1>\n    // </div>\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 5\n      }\n    }, jobsToRender.slice(selectedPage * 1, selectedPage * 1 + 1).map(item => {\n      return item !== [] && item.jobPostNumber !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        key: item.jobPostNumber,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.backBtnContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: userRole === \"company\" ? \"/omat-ilmoitukseni\" : \"/tyopaikat\",\n        className: classes.backBtnText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 19\n        }\n      }), \" \", t(\"jobs:backButton\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.titleMargin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        md: 7,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        className: \"ad_title_1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }\n      }, item.jobName, \"adress\"), /*#__PURE__*/React.createElement(\"h6\", {\n        className: \"ad_title_2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        style: {\n          marginRight: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 23\n        }\n      }, `${item.status === 0 ? t(\"draft\") : item.status === 1 ? t(\"active\") : t(\"inactive\")}`, \":\"), /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 23\n        }\n      }, item.dateOfApplication))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        md: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        className: classes.ctaBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 23\n        }\n      }, item.campaignType === \"Free\" ? /*#__PURE__*/React.createElement(Link, {\n        to: \"/tyopaikkailmoitus/\",\n        className: \"btnLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: () => {\n          store.dispatch(populateVacancyForm(item.jobPostNumber, false));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 29\n        }\n      }, t(\"common:copyBtn\"))) : item.campaignType === \"Free\" ? /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: () => {\n          // alert('updateJOBPOSTSTATUS');\n          store.dispatch(changeActivePostToInactive(userRole === \"admin\" ? `${item.jobPostNumber}admin${item.companyBusinessId}` : item.jobPostNumber));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 27\n        }\n      }, t(\"common:inactiveBtn\")) : \"\"), item.campaignType === \"Free\" && /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/tyopaikkailmoitus/${item.jobPostNumber}`,\n        className: \"btnLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: () => store.dispatch(updateAdvertisement()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 29\n        }\n      }, t(\"editBtn\")))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 23\n        }\n      }, item.jobName && /*#__PURE__*/React.createElement(Link, {\n        to: customURL(item.url, \"campaign\"),\n        className: \"btnLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => store.dispatch(changeCampaign(campaignsList.find(campaign => campaign.id === item.campaignType))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 29\n        }\n      }, t(\"boostBtn\"))))))), /*#__PURE__*/React.createElement(Divider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.addMargin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.campaignType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }\n      }, t(\"postType\"), \": \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }\n      }, item.campaignType)), /*#__PURE__*/React.createElement(\"h6\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 25\n        }\n      }, t(\"postStatus\"), \": \"), `Active`))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 4,\n        style: {\n          display: \"flex\",\n          justifyContent: \"flex-end\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.companyLogo,\n        style: {\n          backgroundImage: `url(${item.logo ? item.logo[0].path : \"\"})`\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.adDetail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.companyImgFrame,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: item.logo && item.logo[0].path,\n        alt: item.logo ? `${item.jobName} Company-Image` : \"\",\n        className: item.company_image ? classes.companyImage : \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.jobDesc,\n        dangerouslySetInnerHTML: {\n          __html: item.jobDescription\n        } // To convert rte string into html\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        sm: 12,\n        md: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 2,\n        className: classes.ctaBtn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }\n      }, item.campaignType === \"Free\" ? /*#__PURE__*/React.createElement(Link, {\n        to: \"/tyopaikkailmoitus/\",\n        className: \"btnLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: () => {\n          store.dispatch(populateVacancyForm(item.jobPostNumber, false));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 27\n        }\n      }, t(\"common:copyBtn\"))) : item.campaignType === \"Free\" ? /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: () => {\n          store.dispatch(changeActivePostToInactive(userRole === \"admin\" ? `${item.jobPostNumber}admin${item.companyBusinessId}` : item.jobPostNumber));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 25\n        }\n      }, t(\"common:inactiveBtn\")) : \"\"), item.campaignType === \"Free\" && /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: `/tyopaikkailmoitus/${item.jobPostNumber}`,\n        className: \"btnLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"primary\",\n        onClick: () => store.dispatch(updateAdvertisement()),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 27\n        }\n      }, t(\"editBtn\")))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 21\n        }\n      }, item.jobName && /*#__PURE__*/React.createElement(Link, {\n        to: customURL(item.url, \"campaign\"),\n        className: \"btnLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => store.dispatch(changeCampaign(campaignsList.find(campaign => campaign.id === item.campaign_id))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 27\n        }\n      }, t(\"boostBtn\")))))))) : \" \";\n    }), /*#__PURE__*/React.createElement(Loader, {\n      showSpinner: showSpinner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      open: showSuccessSnackbar,\n      autoHideDuration: 2000,\n      onClose: () => store.dispatch(closeSnackbar()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper, {\n      onClose: () => store.dispatch(closeSnackbar()),\n      variant: \"success\",\n      message: t(\"successMsg\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      open: showFailedSnackbar,\n      autoHideDuration: 2000,\n      onClose: () => store.dispatch(closeSnackbar()),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper, {\n      onClose: () => store.dispatch(closeSnackbar()),\n      variant: \"error\",\n      message: t(\"failedMsg\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }\n    })))\n  );\n};\n\nexport default withStyles(styles)(AdDetails);","map":{"version":3,"names":["React","useEffect","useState","withStyles","Divider","Grid","Button","Snackbar","ArrowBackIosIcon","Link","useTranslation","store","customURL","updateAdvertisement","changeCampaign","populateVacancyForm","changeActivePostToInactive","closeSnackbar","MySnackbarContentWrapper","customTranslateCampaign","customTranslateStatus","Loader","axios","useDispatch","useSelector","styles","theme","titleMargin","margin","breakpoints","down","marginTop","companyLogo","minHeight","minWidth","backgroundSize","backgroundRepeat","marginBottom","companyImgFrame","display","alignItems","justifyContent","companyImage","maxHeight","maxWidth","width","only","adDetail","padding","border","jobDesc","ctaBtn","up","backBtnText","color","palette","secondary","main","textDecoration","primary","backBtnContainer","campaignType","marginRight","AdDetails","classes","viewSelectedAd","userRole","showSuccessSnackbar","showFailedSnackbar","showSpinner","selectedPage","campaignsList","props","t","dispatch","jobPostNumber","state","jobs","jobsToRender","setJobsToRender","get","then","res","data","slice","map","item","undefined","jobName","status","dateOfApplication","companyBusinessId","url","find","campaign","id","addMargin","backgroundImage","logo","path","company_image","__html","jobDescription","campaign_id","vertical","horizontal"],"sources":["C:/Users/shuli/OneDrive/Desktop/Work/JobportalN/JobPortalEE/src/components/companies/ads/adDetails.component.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Divider, Grid, Button, Snackbar } from \"@material-ui/core\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport store from \"../../../store\";\r\nimport { customURL } from \"../../../utils/helperFunctions\";\r\nimport {\r\n  updateAdvertisement,\r\n  changeCampaign,\r\n  populateVacancyForm,\r\n  changeActivePostToInactive,\r\n  closeSnackbar,\r\n} from \"../../../actions\";\r\nimport { MySnackbarContentWrapper } from \"../../../utils/snackbar.utils\";\r\nimport {\r\n  customTranslateCampaign,\r\n  customTranslateStatus,\r\n} from \"../../../utils/customTranslate\";\r\nimport Loader from \"../../../utils/loader\";\r\nimport axios from \"axios\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nconst styles = (theme) => ({\r\n  titleMargin: {\r\n    margin: \"20px auto 24px auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginTop: 4,\r\n    },\r\n  },\r\n  companyLogo: {\r\n    minHeight: 80,\r\n    minWidth: 150,\r\n    backgroundSize: \"contain\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    marginBottom: 6,\r\n  },\r\n  companyImgFrame: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  companyImage: {\r\n    minHeight: 420,\r\n    maxHeight: 600,\r\n    maxWidth: \"100%\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      minHeight: 190,\r\n      maxHeight: 190,\r\n      width: \"100%\",\r\n    },\r\n    [theme.breakpoints.only(\"sm\")]: {\r\n      minHeight: 360,\r\n      maxHeight: 420,\r\n      width: \"100%\",\r\n    },\r\n  },\r\n  adDetail: {\r\n    margin: \"0px 0 50px 0\",\r\n    padding: \"0 0 50px\",\r\n    border: \"1px solid lightgray\",\r\n  },\r\n  jobDesc: {\r\n    padding: 40,\r\n  },\r\n  ctaBtn: {\r\n    marginBottom: 50,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      justifyContent: \"flex-end\",\r\n    },\r\n  },\r\n  backBtnText: {\r\n    color: theme.palette.secondary.main,\r\n    \"&:hover\": {\r\n      textDecoration: \"none\",\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n  backBtnContainer: {\r\n    marginTop: 2,\r\n  },\r\n  campaignType: {\r\n    marginRight: 16,\r\n  },\r\n});\r\n\r\nconst AdDetails = ({\r\n  classes,\r\n  viewSelectedAd,\r\n  userRole,\r\n  showSuccessSnackbar,\r\n  showFailedSnackbar,\r\n  showSpinner,\r\n  selectedPage,\r\n  campaignsList,\r\n  props,\r\n}) => {\r\n  const { t } = useTranslation(\"adDetails\");\r\n  const dispatch = useDispatch();\r\n  const { jobPostNumber } = useSelector((state) => state.jobs);\r\n  const [jobsToRender, setJobsToRender] = useState([]);\r\n  selectedPage = 1;\r\n  //const jobsPostNumber =  useSelector(state => state.getState().jobPostNumber);\r\n  // const jobPostNumber = 653536;\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://localhost:7262/jobsEn/${jobPostNumber}`).then((res) => {\r\n      setJobsToRender(res.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    // <div>\r\n    //   {jobsToRender.slice(selectedPage * 10, selectedPage * 10 + 10).map(item => {\r\n    //     return (\r\n    //       <div key={item.jobPostNumber}>\r\n    //       <Grid>\r\n    //         <div>\r\n    //           <h1>\r\n\r\n    //             {item.jobTags}\r\n    //             {console.log(item.jobPostNumber)}\r\n    //           </h1>\r\n    //         </div>\r\n    //       </Grid>\r\n    //       </div>\r\n    //     )\r\n    //   })}\r\n    //   <h1>Test</h1>\r\n    // </div>\r\n    <div>\r\n      {jobsToRender\r\n        .slice(selectedPage * 1, selectedPage * 1 + 1)\r\n        .map((item) => {\r\n          return item !== [] && item.jobPostNumber !== undefined ? (\r\n            <div className=\"container\" key={item.jobPostNumber}>\r\n              <div className={classes.backBtnContainer}>\r\n                <Link\r\n                  to={\r\n                    userRole === \"company\" ? \"/omat-ilmoitukseni\" : \"/tyopaikat\"\r\n                  }\r\n                  className={classes.backBtnText}\r\n                >\r\n                  <ArrowBackIosIcon /> {t(\"jobs:backButton\")}\r\n                </Link>\r\n              </div>\r\n              <div className={classes.titleMargin}>\r\n                <Grid container>\r\n                  <Grid item sm={12} md={7}>\r\n                    <h2 className=\"ad_title_1\">\r\n                      {/* {`${item.jobName}, ${item.jobPostAsukohaAddress.map(address => {\r\n                    {\r\n                      if (address.address[17]) {\r\n                        return address.address\r\n                          .split(',')\r\n                          .splice(1)\r\n                          .toString();\r\n                      } else return address.address;\r\n                    }\r\n                  })}`} */}\r\n                      {item.jobName}\r\n                      {\"adress\"}\r\n                    </h2>\r\n                    <h6 className=\"ad_title_2\">\r\n                      <strong style={{ marginRight: 10 }}>\r\n                        {`${\r\n                          item.status === 0\r\n                            ? t(\"draft\")\r\n                            : item.status === 1\r\n                            ? t(\"active\")\r\n                            : t(\"inactive\")\r\n                        }`}\r\n                        :\r\n                      </strong>\r\n                      <strong>{item.dateOfApplication}</strong>\r\n                    </h6>\r\n                  </Grid>\r\n                  <Grid item sm={12} md={5}>\r\n                    <Grid container spacing={2} className={classes.ctaBtn}>\r\n                      <Grid item>\r\n                        {/* If post is active post, show Inactive btn. If it is inactive post, show copy btn in Addetails */}\r\n                        {item.campaignType === \"Free\" ? (\r\n                          <Link to=\"/tyopaikkailmoitus/\" className=\"btnLink\">\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              onClick={() => {\r\n                                store.dispatch(\r\n                                  populateVacancyForm(item.jobPostNumber, false)\r\n                                );\r\n                              }}\r\n                            >\r\n                              {t(\"common:copyBtn\")}\r\n                            </Button>\r\n                          </Link>\r\n                        ) : item.campaignType === \"Free\" ? (\r\n                          <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              // alert('updateJOBPOSTSTATUS');\r\n                              store.dispatch(\r\n                                changeActivePostToInactive(\r\n                                  userRole === \"admin\"\r\n                                    ? `${item.jobPostNumber}admin${item.companyBusinessId}`\r\n                                    : item.jobPostNumber\r\n                                )\r\n                              );\r\n                            }}\r\n                          >\r\n                            {t(\"common:inactiveBtn\")}\r\n                          </Button>\r\n                        ) : (\r\n                          \"\"\r\n                        )}\r\n                      </Grid>\r\n                      {item.campaignType === \"Free\" && (\r\n                        <Grid item>\r\n                          <Link\r\n                            to={`/tyopaikkailmoitus/${item.jobPostNumber}`}\r\n                            className=\"btnLink\"\r\n                          >\r\n                            <Button\r\n                              variant=\"outlined\"\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                store.dispatch(updateAdvertisement())\r\n                              }\r\n                            >\r\n                              {t(\"editBtn\")}\r\n                            </Button>\r\n                          </Link>\r\n                        </Grid>\r\n                      )}\r\n                      <Grid item>\r\n                        {/* To avoid errors when viewSelectedAd is empty array */}\r\n                        {item.jobName && (\r\n                          <Link\r\n                            to={customURL(item.url, \"campaign\")}\r\n                            className=\"btnLink\"\r\n                          >\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                              onClick={() =>\r\n                                store.dispatch(\r\n                                  changeCampaign(\r\n                                    campaignsList.find(\r\n                                      (campaign) =>\r\n                                        campaign.id === item.campaignType\r\n                                    )\r\n                                  )\r\n                                )\r\n                              }\r\n                            >\r\n                              {t(\"boostBtn\")}\r\n                            </Button>\r\n                          </Link>\r\n                        )}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                <Divider />\r\n              </div>\r\n              <div className={classes.addMargin}>\r\n                <Grid container>\r\n                  <Grid item sm={8}>\r\n                    <div className={classes.campaignType}>\r\n                      <h6>\r\n                        <strong>{t(\"postType\")}: </strong>\r\n                        {/* <span>{customTranslateCampaign(item.campaignType)}</span> */}\r\n                        <span>{item.campaignType}</span>\r\n                      </h6>\r\n                      <h6>\r\n                        <strong>{t(\"postStatus\")}: </strong>\r\n                        {/* {customTranslateStatus(item.campaignType)} */}\r\n                        {`Active`}\r\n                      </h6>\r\n                    </div>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    sm={4}\r\n                    style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n                  >\r\n                    <div\r\n                      className={classes.companyLogo}\r\n                      style={{\r\n                        backgroundImage: `url(${\r\n                          item.logo ? item.logo[0].path : \"\"\r\n                        })`,\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n              <div className={classes.adDetail}>\r\n                <div className={classes.companyImgFrame}>\r\n                  <img\r\n                    src={item.logo && item.logo[0].path}\r\n                    alt={item.logo ? `${item.jobName} Company-Image` : \"\"}\r\n                    className={item.company_image ? classes.companyImage : \"\"}\r\n                  />\r\n                </div>\r\n                <div\r\n                  className={classes.jobDesc}\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: item.jobDescription,\r\n                  }} // To convert rte string into html\r\n                />\r\n              </div>\r\n              <Grid container>\r\n                <Grid item sm={12} md={6} />\r\n                <Grid item sm={12} md={6}>\r\n                  <Grid container spacing={2} className={classes.ctaBtn}>\r\n                    <Grid item>\r\n                      {/* If post is active post, show Inactive btn. If it is inactive post, show copy btn in Addetails */}\r\n                      {item.campaignType === \"Free\" ? (\r\n                        <Link to=\"/tyopaikkailmoitus/\" className=\"btnLink\">\r\n                          <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              store.dispatch(\r\n                                populateVacancyForm(item.jobPostNumber, false)\r\n                              );\r\n                            }}\r\n                          >\r\n                            {t(\"common:copyBtn\")}\r\n                          </Button>\r\n                        </Link>\r\n                      ) : item.campaignType === \"Free\" ? (\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            store.dispatch(\r\n                              changeActivePostToInactive(\r\n                                userRole === \"admin\"\r\n                                  ? `${item.jobPostNumber}admin${item.companyBusinessId}`\r\n                                  : item.jobPostNumber\r\n                              )\r\n                            );\r\n                          }}\r\n                        >\r\n                          {t(\"common:inactiveBtn\")}\r\n                        </Button>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Grid>\r\n                    {item.campaignType === \"Free\" && (\r\n                      <Grid item>\r\n                        <Link\r\n                          to={`/tyopaikkailmoitus/${item.jobPostNumber}`}\r\n                          className=\"btnLink\"\r\n                        >\r\n                          <Button\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            onClick={() =>\r\n                              store.dispatch(updateAdvertisement())\r\n                            }\r\n                          >\r\n                            {t(\"editBtn\")}\r\n                          </Button>\r\n                        </Link>\r\n                      </Grid>\r\n                    )}\r\n                    <Grid item>\r\n                      {/* To avoid errors when viewSelectedAd is empty array */}\r\n                      {item.jobName && (\r\n                        <Link\r\n                          to={customURL(item.url, \"campaign\")}\r\n                          className=\"btnLink\"\r\n                        >\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() =>\r\n                              store.dispatch(\r\n                                changeCampaign(\r\n                                  campaignsList.find(\r\n                                    (campaign) =>\r\n                                      campaign.id === item.campaign_id\r\n                                  )\r\n                                )\r\n                              )\r\n                            }\r\n                          >\r\n                            {t(\"boostBtn\")}\r\n                          </Button>\r\n                        </Link>\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          ) : (\r\n            \" \"\r\n          );\r\n        })}\r\n\r\n      <Loader showSpinner={showSpinner} />\r\n\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        open={showSuccessSnackbar}\r\n        autoHideDuration={2000}\r\n        onClose={() => store.dispatch(closeSnackbar())}\r\n      >\r\n        <MySnackbarContentWrapper\r\n          onClose={() => store.dispatch(closeSnackbar())}\r\n          variant=\"success\"\r\n          message={t(\"successMsg\")}\r\n        />\r\n      </Snackbar>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        open={showFailedSnackbar}\r\n        autoHideDuration={2000}\r\n        onClose={() => store.dispatch(closeSnackbar())}\r\n      >\r\n        <MySnackbarContentWrapper\r\n          onClose={() => store.dispatch(closeSnackbar())}\r\n          variant=\"error\"\r\n          message={t(\"failedMsg\")}\r\n        />\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(AdDetails);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}