{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduard\\\\Desktop\\\\EeJobPortal\\\\src\\\\components\\\\jobs\\\\jobDetails.component.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Button, Grid, Divider, Snackbar, Hidden } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport { useTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { MySnackbarContentWrapper } from '../../utils/snackbar.utils';\nimport { FavBtn } from '../../utils/favBtn.js';\nimport { convertJobHoursToStr, convertJobTypeToStr, convertJobWorksStartToStr, customURL } from '../../utils/helperFunctions';\nimport CustomizedDialogs from '../../utils/customizedDialog';\nimport NotFoundPage from '../../utils/notFoundPage';\nimport Loader from '../../utils/loader'; //import { isRteEmpty } from '../../containers/validate';\n\nimport { SEO } from '../seo/metaInfo.component';\nimport { mol_page_url } from '../../constants';\nimport axios from 'axios';\n\nconst styles = theme => ({\n  addMargin: {\n    margin: '20px auto 20px auto'\n  },\n  backBtnContainer: {\n    margin: '16px auto'\n  },\n  backBtnText: {\n    color: theme.palette.secondary.main,\n    '&:hover': {\n      textDecoration: 'none',\n      color: theme.palette.primary.main\n    }\n  },\n  companyImage: {\n    minHeight: 420,\n    maxHeight: 600,\n    maxWidth: '100%',\n    [theme.breakpoints.down('xs')]: {\n      minHeight: 190,\n      maxHeight: 190,\n      width: '100%'\n    },\n    [theme.breakpoints.only('sm')]: {\n      minHeight: 360,\n      maxHeight: 420,\n      width: '100%'\n    }\n  },\n  companyImgFrame: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  companyLogo: {\n    minHeight: 80,\n    minWidth: 150,\n    backgroundSize: 'contain',\n    backgroundRepeat: 'no-repeat'\n  },\n  jobDetail: {\n    margin: '20px 0 50px 0',\n    padding: '0 0 50px',\n    border: '1px solid lightgray'\n  },\n  jobDesc: {\n    padding: '20px 40px'\n  },\n  additionalInfo: {\n    padding: '10px 40px'\n  },\n  sourceInfo: {\n    padding: '10px 40px',\n    float: 'right'\n  },\n  metaData: {\n    color: theme.palette.secondary.main\n  },\n  metaDataTitle: {\n    color: theme.palette.primary.main\n  },\n  ctaBtn: {\n    marginBottom: 20,\n    [theme.breakpoints.up('md')]: {\n      justifyContent: 'flex-end',\n      marginBottom: 50\n    }\n  }\n});\n\nconst JobDetailsComponent = _ref => {\n  let {\n    jobDetails,\n    workStart,\n    toggleFavoriteJobs,\n    favBtnstatus,\n    showSuccessSnackbar,\n    showFailedSnackbar,\n    closeSnackbar,\n    showDialog,\n    showSpinner,\n    classes,\n    changePagination\n  } = _ref;\n  const [jobsToRender, setJobsToRender] = useState([]);\n  useEffect(() => {\n    axios.get('https://localhost:7262/jobsEn').then(res => {\n      setJobsToRender(res.data);\n      console.log(jobsToRender);\n    });\n  }, []);\n  const {\n    t\n  } = useTranslation('jobDetails', 'jobhours', 'jobtype');\n  const heroImage = jobsToRender.logo && jobsToRender.logo[0].path;\n  const title = `${jobsToRender === null || jobsToRender === void 0 ? void 0 : jobsToRender.jobName} - ${jobsToRender === null || jobsToRender === void 0 ? void 0 : jobsToRender.companyName}, ${jobsToRender === null || jobsToRender === void 0 ? void 0 : jobsToRender.jobPostAsukohaAddress.address} | Avoimet tyÃ¶paikat`;\n  const selectedPage = 1;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, jobsToRender.slice(selectedPage * 1, selectedPage * 1 + 1).map(item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SEO, {\n      title: title,\n      location: item === null || item === void 0 ? void 0 : item.url,\n      heroImage: item === null || item === void 0 ? void 0 : item.logo // Incase we want to use post specific image..Right now, we are using same default image for all posts as marketing wanted.\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.addMargin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.backBtnContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      onClick: () => changePagination(false),\n      to: {\n        pathname: '/tyopaikat'\n      },\n      className: classes.backBtnText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }), \" \", t('backToJobList'))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"ad_title_1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, `${item.jobName}, ${item.jobPostAsukohaAddress.address}`), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: classes.metaDataTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, t('applyPeriod'), \": \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.metaData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, item.dateOfApplication && `${new Intl.DateTimeFormat('fi-FI').format(new Date(item.dateOfApplication))} -\n                        {/* ${new Intl.DateTimeFormat('fi-FI').format(new Date(item.due_date))} */}`))), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: classes.metaDataTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 21\n      }\n    }, t('jobtype:jobTypeLabel'), \": \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.metaData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, convertJobTypeToStr(t, item.durationOfEmployment)))), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: classes.metaDataTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, t('jobhours:jobHoursLabel'), \": \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.metaData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, convertJobHoursToStr(t, item.workingTime)))), item.status === 2 && /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 39\n      }\n    }, t('inactiveBtn'))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }, item.status === 1 && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      className: classes.ctaBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FavBtn, {\n      isFav: !!item.favourite,\n      handleFav: () => toggleFavoriteJobs(item.companyBusinessId, item.jobPostNumber, !favBtnstatus),\n      btnText: !item.favourite ? t('addFav') : t('deleteFav'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, item.url ? /*#__PURE__*/React.createElement(\"a\", {\n      className: \"btnLink\",\n      href: item.url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(DescriptionIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 29\n      }\n    }, t('applyBtn')))) : /*#__PURE__*/React.createElement(Link, {\n      className: \"btnLink\",\n      to: customURL(item.url, 'application'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(DescriptionIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 29\n      }\n    }, t('applyBtn')))))))), /*#__PURE__*/React.createElement(Divider, {\n      style: {\n        margin: '15px 0 0 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justifyContent: \"flex-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: item.logo ? classes.logo : null,\n      style: {\n        backgroundImage: `url(${item.logo ? item.logo[0].path : null})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.jobDetail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }\n    }, item.logo && /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.companyImgFrame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: heroImage,\n      alt: \"company-img\",\n      className: item.logo ? classes.companyImage : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.jobDesc,\n      dangerouslySetInnerHTML: {\n        __html: item.jobDescription\n      } // To convert rte string into html\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    }), item.companyPageUrl && /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.additionalInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 15\n      }\n    }, `${t('readMore')} : `, /*#__PURE__*/React.createElement(\"a\", {\n      href: item.companyPageUrl,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, `${item.companyPageUrl}`)), !!(item === null || item === void 0 ? void 0 : item.url) && /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.sourceInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"em\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }, t('source'), /*#__PURE__*/React.createElement(\"a\", {\n      href: `${mol_page_url}/${item === null || item === void 0 ? void 0 : item.url}`,\n      className: classes.metaData,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 19\n      }\n    }, t('mol'))))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 4,\n      alignItems: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Hidden, {\n      smDown: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 13\n      }\n    }, jobDetails.status === 1 && /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 2,\n      className: classes.ctaBtn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FavBtn, {\n      isFav: !!item.favourite,\n      handleFav: () => toggleFavoriteJobs(item.companyBusinessId, item.jobPostNumber, !favBtnstatus),\n      btnText: !item.favourite ? t('addFav') : t('deleteFav'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 19\n      }\n    }, item.url ? /*#__PURE__*/React.createElement(\"a\", {\n      className: \"btnLink\",\n      href: item.url,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DescriptionIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 27\n      }\n    }, t('applyBtn')))) : /*#__PURE__*/React.createElement(Link, {\n      className: \"btnLink\",\n      to: customURL(item.url, 'application'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DescriptionIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: 8\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 27\n      }\n    }, t('applyBtn')))))))));\n  })\n  /* Display structure for mol ads --Copy code from molAds.js if needed in future otherwise delete that file */\n  , /*#__PURE__*/React.createElement(Loader, {\n    showSpinner: showSpinner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    open: showSuccessSnackbar,\n    autoHideDuration: 2000,\n    onClose: () => {\n      closeSnackbar();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper, {\n    variant: \"success\",\n    message: t('successMsg'),\n    onClose: () => {\n      closeSnackbar();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    open: showFailedSnackbar,\n    autoHideDuration: 2000,\n    onClose: () => {\n      closeSnackbar();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MySnackbarContentWrapper, {\n    onClose: () => {\n      closeSnackbar();\n    },\n    variant: \"error\",\n    message: t('failedMsg'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(CustomizedDialogs, {\n    showDialog: showDialog,\n    dialogText: t('loginText'),\n    loginModal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default withStyles(styles)(JobDetailsComponent);","map":{"version":3,"names":["React","useEffect","useState","Button","Grid","Divider","Snackbar","Hidden","withStyles","useTranslation","Link","DescriptionIcon","ArrowBackIosIcon","MySnackbarContentWrapper","FavBtn","convertJobHoursToStr","convertJobTypeToStr","convertJobWorksStartToStr","customURL","CustomizedDialogs","NotFoundPage","Loader","SEO","mol_page_url","axios","styles","theme","addMargin","margin","backBtnContainer","backBtnText","color","palette","secondary","main","textDecoration","primary","companyImage","minHeight","maxHeight","maxWidth","breakpoints","down","width","only","companyImgFrame","display","alignItems","justifyContent","companyLogo","minWidth","backgroundSize","backgroundRepeat","jobDetail","padding","border","jobDesc","additionalInfo","sourceInfo","float","metaData","metaDataTitle","ctaBtn","marginBottom","up","JobDetailsComponent","jobDetails","workStart","toggleFavoriteJobs","favBtnstatus","showSuccessSnackbar","showFailedSnackbar","closeSnackbar","showDialog","showSpinner","classes","changePagination","jobsToRender","setJobsToRender","get","then","res","data","console","log","t","heroImage","logo","path","title","jobName","companyName","jobPostAsukohaAddress","address","selectedPage","slice","map","item","url","pathname","dateOfApplication","Intl","DateTimeFormat","format","Date","due_date","durationOfEmployment","workingTime","status","favourite","companyBusinessId","jobPostNumber","marginLeft","backgroundImage","__html","jobDescription","companyPageUrl","vertical","horizontal"],"sources":["C:/Users/Eduard/Desktop/EeJobPortal/src/components/jobs/jobDetails.component.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, Grid, Divider, Snackbar, Hidden } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Link } from 'react-router-dom';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { MySnackbarContentWrapper } from '../../utils/snackbar.utils';\r\nimport { FavBtn } from '../../utils/favBtn.js';\r\nimport { convertJobHoursToStr, convertJobTypeToStr, convertJobWorksStartToStr, customURL } from '../../utils/helperFunctions';\r\nimport CustomizedDialogs from '../../utils/customizedDialog';\r\nimport NotFoundPage from '../../utils/notFoundPage';\r\nimport Loader from '../../utils/loader';\r\n//import { isRteEmpty } from '../../containers/validate';\r\nimport { SEO } from '../seo/metaInfo.component';\r\nimport { mol_page_url } from '../../constants';\r\nimport axios from 'axios';\r\n\r\nconst styles = theme => ({\r\n  addMargin: {\r\n    margin: '20px auto 20px auto',\r\n  },\r\n  backBtnContainer: {\r\n    margin: '16px auto',\r\n  },\r\n  backBtnText: {\r\n    color: theme.palette.secondary.main,\r\n    '&:hover': {\r\n      textDecoration: 'none',\r\n      color: theme.palette.primary.main,\r\n    },\r\n  },\r\n\r\n  companyImage: {\r\n    minHeight: 420,\r\n    maxHeight: 600,\r\n    maxWidth: '100%',\r\n    [theme.breakpoints.down('xs')]: {\r\n      minHeight: 190,\r\n      maxHeight: 190,\r\n      width: '100%',\r\n    },\r\n    [theme.breakpoints.only('sm')]: {\r\n      minHeight: 360,\r\n      maxHeight: 420,\r\n      width: '100%',\r\n    },\r\n  },\r\n  companyImgFrame: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  companyLogo: {\r\n    minHeight: 80,\r\n    minWidth: 150,\r\n    backgroundSize: 'contain',\r\n    backgroundRepeat: 'no-repeat',\r\n  },\r\n  jobDetail: {\r\n    margin: '20px 0 50px 0',\r\n    padding: '0 0 50px',\r\n    border: '1px solid lightgray',\r\n  },\r\n  jobDesc: {\r\n    padding: '20px 40px',\r\n  },\r\n  additionalInfo: {\r\n    padding: '10px 40px',\r\n  },\r\n  sourceInfo: {\r\n    padding: '10px 40px',\r\n    float: 'right',\r\n  },\r\n  metaData: {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  metaDataTitle: {\r\n    color: theme.palette.primary.main,\r\n  },\r\n\r\n  ctaBtn: {\r\n    marginBottom: 20,\r\n    [theme.breakpoints.up('md')]: {\r\n      justifyContent: 'flex-end',\r\n      marginBottom: 50,\r\n    },\r\n  },\r\n});\r\n\r\nconst JobDetailsComponent = ({\r\n  jobDetails,\r\n  workStart,\r\n  toggleFavoriteJobs,\r\n  favBtnstatus,\r\n  showSuccessSnackbar,\r\n  showFailedSnackbar,\r\n  closeSnackbar,\r\n  showDialog,\r\n  showSpinner,\r\n  classes,\r\n  changePagination,\r\n}) => {\r\n  const [jobsToRender, setJobsToRender] = useState([]);\r\n  useEffect(() => {\r\n    axios.get('https://localhost:7262/jobsEn').then(res => {\r\n      setJobsToRender(res.data);\r\n      console.log(jobsToRender);\r\n    });\r\n  },[]);\r\n\r\n  const { t } = useTranslation('jobDetails', 'jobhours', 'jobtype');\r\n  const heroImage = jobsToRender.logo && jobsToRender.logo[0].path;\r\n  const title = `${jobsToRender?.jobName} - ${jobsToRender?.companyName}, ${jobsToRender?.jobPostAsukohaAddress.address} | Avoimet tyÃ¶paikat`;\r\n  const selectedPage = 1;\r\n  \r\n  return (\r\n    <div>\r\n      {jobsToRender.slice(selectedPage * 1, selectedPage * 1 + 1).map(item => {\r\n        return (\r\n          <div className=\"container\">\r\n          <SEO\r\n            title={title}\r\n            location={item?.url}\r\n            heroImage={item?.logo} // Incase we want to use post specific image..Right now, we are using same default image for all posts as marketing wanted.\r\n          />\r\n          <div className={classes.addMargin}>\r\n            <div className={classes.backBtnContainer}>\r\n              <Link\r\n                onClick={() => changePagination(false)}\r\n                to={{\r\n                  pathname: '/tyopaikat',\r\n                }}\r\n                className={classes.backBtnText}\r\n              >\r\n                <ArrowBackIosIcon /> {t('backToJobList')}\r\n              </Link>\r\n            </div>\r\n            <Grid container spacing={4} alignItems=\"center\">\r\n              <Grid item sm={12} md={7}>\r\n                <h2 className=\"ad_title_1\">{`${item.jobName}, ${item.jobPostAsukohaAddress.address}`}</h2>\r\n                <h6>\r\n                  <strong className={classes.metaDataTitle}>\r\n                    <span>{t('applyPeriod')}: </span>\r\n                    <span className={classes.metaData}>\r\n                      {item.dateOfApplication &&\r\n                        `${new Intl.DateTimeFormat('fi-FI').format(new Date(item.dateOfApplication))} -\r\n                        {/* ${new Intl.DateTimeFormat('fi-FI').format(\r\n                          new Date(item.due_date),\r\n                        )} */}`}\r\n                    </span>\r\n                  </strong>\r\n                </h6>\r\n                <h6>\r\n                  <strong className={classes.metaDataTitle}>\r\n                    <span>{t('jobtype:jobTypeLabel')}: </span>\r\n                    <span className={classes.metaData}>{convertJobTypeToStr(t, item.durationOfEmployment)}</span>\r\n                  </strong>\r\n                </h6>\r\n                <h6>\r\n                  <strong className={classes.metaDataTitle}>\r\n                    <span>{t('jobhours:jobHoursLabel')}: </span>\r\n                    <span className={classes.metaData}>{convertJobHoursToStr(t, item.workingTime)}</span>\r\n                  </strong>\r\n                </h6>\r\n                {/* {workStart != null ? (\r\n                  <h6>\r\n                    <strong className={classes.metaDataTitle}>\r\n                      <span>{t('jobhours:workStartLabel')}: </span>\r\n                      <span className={classes.metaData}>{convertJobWorksStartToStr(t, workStart)}</span>\r\n                    </strong>\r\n                  </h6>\r\n                ) : null} */}\r\n                {item.status === 2 && <p style={{ color: 'red' }}>{t('inactiveBtn')}</p>}\r\n              </Grid>\r\n              <Grid item sm={12} md={5}>\r\n                {item.status === 1 && (\r\n                  <Grid container spacing={2} className={classes.ctaBtn}>\r\n                    {/* <Grid item>\r\n                  <Button color='primary' variant='outlined'>\r\n                    {t('shareBtn')}\r\n                  </Button>\r\n                </Grid> */}\r\n                    <Grid item>\r\n                      <FavBtn\r\n                        isFav={!!item.favourite}\r\n                        handleFav={() => toggleFavoriteJobs(item.companyBusinessId, item.jobPostNumber, !favBtnstatus)}\r\n                        btnText={!item.favourite ? t('addFav') : t('deleteFav')}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      {item.url ? (\r\n                        <a className=\"btnLink\" href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                          <Button color=\"primary\" variant=\"contained\">\r\n                            <DescriptionIcon />\r\n                            <span style={{ marginLeft: 8 }}>{t('applyBtn')}</span>\r\n                          </Button>\r\n                        </a>\r\n                      ) : (\r\n                        <Link className=\"btnLink\" to={customURL(item.url, 'application')}>\r\n                          <Button color=\"primary\" variant=\"contained\">\r\n                            <DescriptionIcon />\r\n                            <span style={{ marginLeft: 8 }}>{t('applyBtn')}</span>\r\n                          </Button>\r\n                        </Link>\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n            <Divider style={{ margin: '15px 0 0 0' }} />\r\n          </div>\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <div\r\n              className={item.logo ? classes.logo : null}\r\n              style={{\r\n                backgroundImage: `url(${item.logo ? item.logo[0].path : null})`,\r\n              }}\r\n            />\r\n          </Grid>\r\n          <div className={classes.jobDetail}>\r\n            {item.logo && (\r\n              <div className={classes.companyImgFrame}>\r\n                <img src={heroImage} alt=\"company-img\" className={item.logo ? classes.companyImage : ''} />\r\n              </div>\r\n            )}\r\n            <div\r\n              className={classes.jobDesc}\r\n              dangerouslySetInnerHTML={{ __html: item.jobDescription }} // To convert rte string into html\r\n            />\r\n            {/* {jobsToRender.profile_description && !isRteEmpty(jobsToRender.profile_description) && (\r\n              <div className={classes.additionalInfo}>\r\n                <p>\r\n                  <strong>{t('aboutUs')}</strong>\r\n                </p>\r\n                <div\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: jobDetails.profile_description,\r\n                  }} // To convert rte string into html\r\n                />\r\n              </div>\r\n            )} */}\r\n            {item.companyPageUrl && (\r\n              <p className={classes.additionalInfo}>\r\n                {`${t('readMore')} : `}\r\n                <a href={item.companyPageUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  {`${item.companyPageUrl}`}\r\n                </a>\r\n              </p>\r\n            )}\r\n            {!!item?.url && (\r\n              <p className={classes.sourceInfo}>\r\n                <em>\r\n                  {t('source')}\r\n                  <a href={`${mol_page_url}/${item?.url}`} className={classes.metaData} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {t('mol')}\r\n                  </a>\r\n                </em>\r\n              </p>\r\n            )}\r\n          </div>\r\n          <Grid container spacing={4} alignItems=\"center\">\r\n            <Hidden smDown>\r\n              <Grid item sm={12} md={7} />\r\n            </Hidden>\r\n            <Grid item sm={12} md={5}>\r\n              {jobDetails.status === 1 && (\r\n                <Grid container spacing={2} className={classes.ctaBtn}>\r\n                  {/* <Grid item>\r\n                  <Button color='primary' variant='outlined'>\r\n                    {t('shareBtn')}\r\n                  </Button>\r\n                </Grid> */}\r\n                  <Grid item>\r\n                    <FavBtn\r\n                      isFav={!!item.favourite}\r\n                      handleFav={() => toggleFavoriteJobs(item.companyBusinessId, item.jobPostNumber, !favBtnstatus)}\r\n                      btnText={!item.favourite ? t('addFav') : t('deleteFav')}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    {item.url ? (\r\n                      <a className=\"btnLink\" href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <Button color=\"primary\" variant=\"contained\">\r\n                          <DescriptionIcon />\r\n                          <span style={{ marginLeft: 8 }}>{t('applyBtn')}</span>\r\n                        </Button>\r\n                      </a>\r\n                    ) : (\r\n                      <Link className=\"btnLink\" to={customURL(item.url, 'application')}>\r\n                        <Button color=\"primary\" variant=\"contained\">\r\n                          <DescriptionIcon />\r\n                          <span style={{ marginLeft: 8 }}>{t('applyBtn')}</span>\r\n                        </Button>\r\n                      </Link>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        )\r\n      }\r\n      )\r\n      /* Display structure for mol ads --Copy code from molAds.js if needed in future otherwise delete that file */\r\n      }\r\n      <Loader showSpinner={showSpinner} />\r\n\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        open={showSuccessSnackbar}\r\n        autoHideDuration={2000}\r\n        onClose={() => {\r\n          closeSnackbar();\r\n        }}\r\n      >\r\n        <MySnackbarContentWrapper\r\n          variant=\"success\"\r\n          message={t('successMsg')}\r\n          onClose={() => {\r\n            closeSnackbar();\r\n          }}\r\n        />\r\n      </Snackbar>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        open={showFailedSnackbar}\r\n        autoHideDuration={2000}\r\n        onClose={() => {\r\n          closeSnackbar();\r\n        }}\r\n      >\r\n        <MySnackbarContentWrapper\r\n          onClose={() => {\r\n            closeSnackbar();\r\n          }}\r\n          variant=\"error\"\r\n          message={t('failedMsg')}\r\n        />\r\n      </Snackbar>\r\n\r\n      <CustomizedDialogs showDialog={showDialog} dialogText={t('loginText')} loginModal />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles)(JobDetailsComponent);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}