{"ast":null,"code":"var _jsxFileName = \"/Users/eduardkazeks/Documents/GitHub/JobPortalEE/src/components/companies/ads/activeAds.component.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Grid, Paper, Button } from \"@material-ui/core\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport { useTranslation } from \"react-i18next\";\nimport { customURL, dateFormat } from \"../../../utils/helperFunctions\";\nimport CustomizedDialogs from \"../../../utils/customizedDialog\";\nimport i18n from \"../../../utils/i18n\";\nimport axios from \"axios\";\nimport { changeRoute } from \"../../../actions\";\n\nconst ActiveAdsComponent = _ref => {\n  let {\n    warnToDelete,\n    populateVacancyForm,\n    deleteJobOffer,\n    changeAdvertPage,\n    selectedPage,\n    advertPages,\n    openAdToSeeJobPost,\n    postAdvertisement,\n    showDialog,\n    isToDeleteAdvertisementId,\n    fetchJobById,\n    editOffer\n  } = _ref;\n  const {\n    t\n  } = useTranslation(\"jobs\");\n  const [isDesktop, setIsDesktop] = useState(window.innerWidth);\n  const [jobsToRender, setJobsToRender] = useState([]);\n  const [toEdit, setToEdit] = useState();\n  const [jobCategorys, setJobCategorys] = useState([]); // useEffect(() => {\n  //     axios.get('https://www.tootukassa.ee/api/toopakkumised').then((res) => {\n  //         setJobCategorys(res.data)\n  //     })\n  //     console.log(jobCategorys);\n  // },[])\n\n  useEffect(() => {\n    axios.get(`https://localhost:7262/jobsEn`).then(res => {\n      setJobsToRender(res.data);\n    });\n  }, []);\n\n  const updateSize = () => {\n    setIsDesktop(window.innerWidth >= 1440);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateSize);\n    return () => window.removeEventListener(\"resize\", updateSize);\n  });\n  return (\n    /*#__PURE__*/\n    //  <div>\n    //   {jobsToRender.map(job => {\n    //     return (\n    //       <div key={job.id}>\n    //       <Grid>\n    //         <div>\n    //           <h1>\n    //             {applicants && applicants.map((applicant) => {\n    //               return (\n    //                 <h1>\n    //                   {applicant.firstName}\n    //                 </h1>\n    //               )\n    //             })}\n    //             {/* {console.log(applicants.length)} */}\n    //           </h1>\n    //         </div>\n    //       </Grid>\n    //       </div>\n    //     )\n    //   })}\n    //   </div>\n    React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      style: {\n        margin: \"30px 0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, t(\"activeJobsTitle\"), \" (\", `${jobsToRender && jobsToRender.length === null ? jobsToRender.length : jobsToRender.length}`, \"):\")), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, jobsToRender.companyBusinessId !== 0 && jobsToRender.companyBusinessId === null ? /*#__PURE__*/React.createElement(Link, {\n      to: \"/tyopaikkailmoitus\",\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: postAdvertisement,\n      variant: \"contained\",\n      size: i18n.language === \"ru\" ? \"small\" : \"medium\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, t(\"addPost\"))) : /*#__PURE__*/React.createElement(Link, {\n      to: \"/tyopaikkailmoitus\",\n      className: \"btnLink\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: postAdvertisement,\n      variant: \"contained\",\n      size: i18n.language === \"ru\" ? \"small\" : \"medium\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, t(\"addPost\"))))), jobsToRender.slice(selectedPage * 10, selectedPage * 10 + 10).map(item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: item.id === null ? item.id : item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Paper, {\n        style: {\n          marginTop: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 3,\n        style: {\n          padding: 20\n        },\n        alignItems: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: customURL(item.url, \"internal\"),\n        className: \"btnLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        onClick: () => {\n          fetchJobById(item.id);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }\n      }, item.jobName === null ? item.jobName : item.jobName, \",\", item.jobPostAsukohaAddress.map(address => {\n        {\n          if (address.address[17] === null) {\n            return address.address.split(\",\").splice(1).toString();\n          } else return address.address;\n        }\n      }) === null || undefined ? item.jobPostAsukohaAddress.map(address => {\n        {\n          if (address.address[17] === null) {\n            return address.address.split(\",\").splice(1).toString();\n          } else return address.address;\n        }\n      }) : item.jobPostAddress.address))), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 23\n        }\n      }, t(\"applicationsInTotal\"), \":\", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"red\",\n          margin: \"0 5px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 25\n        }\n      }, \"(\", item.jobPostApplications.length, \")\")), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 23\n        }\n      }, t(\"viewed\"), \": \", /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 40\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"red\",\n          margin: \"0 5px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }\n      }, \"(\", `${item.totalViewed}`, \")\"), t(\"times\")))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 3,\n        style: {\n          color: \"#34495E \"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 23\n        }\n      }, dateFormat(item.dateOfApplication)))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"outlined\",\n        color: \"secondary\",\n        onClick: () => warnToDelete(item.id) === null ? warnToDelete(item.id) : warnToDelete(item.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 25\n        }\n      }, t(\"common:deleteBtn\"))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/tyopaikkailmoitus/\",\n        className: \"btnLink\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Button //style={ isDesktop && i18n.language === 'ru' ? {left: '15px'} : null }\n      , {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: () => {\n          setToEdit(true);\n          editOffer(item.id);\n          populateVacancyForm(item.id, true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 27\n        }\n      }, t(\"common:copyBtn\")))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        className: \"btnLink\",\n        to: customURL(item.url, \"internal\") === null ? customURL(item.url, \"internal\") : customURL(item.url, \"internal\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        variant: \"contained\",\n        style: isDesktop && i18n.language === \"ru\" ? {\n          left: \"29px\"\n        } : null,\n        color: \"primary\",\n        onClick: () => fetchJobById(item.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 29\n        }\n      }, t(\"common:openBtn\"))))))))));\n    }), /*#__PURE__*/React.createElement(CustomizedDialogs, {\n      showDialog: showDialog,\n      dialogText: t(\"warnToDeletePostText\"),\n      warnToDeleteModal: true,\n      handleClick: () => {\n        deleteJobOffer(isToDeleteAdvertisementId);\n        changeRoute();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"pagination-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ReactPaginate, {\n      previousLabel: /*#__PURE__*/React.createElement(NavigateBeforeIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 26\n        }\n      }),\n      nextLabel: /*#__PURE__*/React.createElement(NavigateNextIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 22\n        }\n      }),\n      breakLabel: \"...\",\n      breakClassName: \"break-me\",\n      pageCount: 6,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 5,\n      onPageChange: changeAdvertPage,\n      containerClassName: \"pagination\",\n      subContainerClassName: \"pages pagination\",\n      activeClassName: \"active\",\n      forcePage: selectedPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }\n    })))\n  );\n};\n\nexport default ActiveAdsComponent;","map":{"version":3,"names":["React","useEffect","useState","Grid","Paper","Button","Link","Redirect","ReactPaginate","NavigateNextIcon","NavigateBeforeIcon","useTranslation","customURL","dateFormat","CustomizedDialogs","i18n","axios","changeRoute","ActiveAdsComponent","warnToDelete","populateVacancyForm","deleteJobOffer","changeAdvertPage","selectedPage","advertPages","openAdToSeeJobPost","postAdvertisement","showDialog","isToDeleteAdvertisementId","fetchJobById","editOffer","t","isDesktop","setIsDesktop","window","innerWidth","jobsToRender","setJobsToRender","toEdit","setToEdit","jobCategorys","setJobCategorys","get","then","res","data","updateSize","addEventListener","removeEventListener","margin","length","companyBusinessId","language","slice","map","item","id","marginTop","padding","url","jobName","jobPostAsukohaAddress","address","split","splice","toString","undefined","jobPostAddress","color","jobPostApplications","totalViewed","dateOfApplication","left"],"sources":["/Users/eduardkazeks/Documents/GitHub/JobPortalEE/src/components/companies/ads/activeAds.component.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Grid, Paper, Button } from \"@material-ui/core\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport NavigateNextIcon from \"@material-ui/icons/NavigateNext\";\nimport NavigateBeforeIcon from \"@material-ui/icons/NavigateBefore\";\nimport { useTranslation } from \"react-i18next\";\nimport { customURL, dateFormat } from \"../../../utils/helperFunctions\";\nimport CustomizedDialogs from \"../../../utils/customizedDialog\";\nimport i18n from \"../../../utils/i18n\";\nimport axios from \"axios\";\nimport { changeRoute } from \"../../../actions\";\n\nconst ActiveAdsComponent = ({\n  warnToDelete,\n  populateVacancyForm,\n  deleteJobOffer,\n  changeAdvertPage,\n  selectedPage,\n  advertPages,\n  openAdToSeeJobPost,\n  postAdvertisement,\n  showDialog,\n  isToDeleteAdvertisementId,\n  fetchJobById,\n  editOffer,\n}) => {\n  const { t } = useTranslation(\"jobs\");\n  const [isDesktop, setIsDesktop] = useState(window.innerWidth);\n  const [jobsToRender, setJobsToRender] = useState([]);\n  const [toEdit, setToEdit] = useState();\n  const [jobCategorys, setJobCategorys] = useState([]);\n\n  // useEffect(() => {\n  //     axios.get('https://www.tootukassa.ee/api/toopakkumised').then((res) => {\n  //         setJobCategorys(res.data)\n  //     })\n  //     console.log(jobCategorys);\n  // },[])\n\n  useEffect(() => {\n    axios.get(`https://localhost:7262/jobsEn`).then((res) => {\n      setJobsToRender(res.data);\n    });\n  }, []);\n\n  const updateSize = () => {\n    setIsDesktop(window.innerWidth >= 1440);\n  };\n  useEffect(() => {\n    window.addEventListener(\"resize\", updateSize);\n    return () => window.removeEventListener(\"resize\", updateSize);\n  });\n\n  return (\n    //  <div>\n    //   {jobsToRender.map(job => {\n\n    //     return (\n    //       <div key={job.id}>\n    //       <Grid>\n    //         <div>\n    //           <h1>\n    //             {applicants && applicants.map((applicant) => {\n    //               return (\n    //                 <h1>\n    //                   {applicant.firstName}\n\n    //                 </h1>\n    //               )\n    //             })}\n    //             {/* {console.log(applicants.length)} */}\n    //           </h1>\n    //         </div>\n    //       </Grid>\n    //       </div>\n    //     )\n    //   })}\n    //   </div>\n    <div className=\"container\">\n      <Grid container style={{ margin: \"30px 0px\" }}>\n        <Grid item sm={10}>\n          <h3>\n            {t(\"activeJobsTitle\")} (\n            {`${\n              jobsToRender && jobsToRender.length === null\n                ? jobsToRender.length\n                : jobsToRender.length\n            }`}\n            ):\n          </h3>\n        </Grid>\n        <Grid item sm={2}>\n          {jobsToRender.companyBusinessId !== 0 &&\n          jobsToRender.companyBusinessId === null ? (\n            <Link to=\"/tyopaikkailmoitus\" className=\"btnLink\">\n              <Button\n                onClick={postAdvertisement}\n                variant=\"contained\"\n                size={i18n.language === \"ru\" ? \"small\" : \"medium\"}\n                color=\"primary\"\n              >\n                {t(\"addPost\")}\n              </Button>\n            </Link>\n          ) : (\n            <Link to=\"/tyopaikkailmoitus\" className=\"btnLink\">\n              <Button\n                onClick={postAdvertisement}\n                variant=\"contained\"\n                size={i18n.language === \"ru\" ? \"small\" : \"medium\"}\n                color=\"primary\"\n              >\n                {t(\"addPost\")}\n              </Button>\n            </Link>\n          )}\n        </Grid>\n      </Grid>\n      {jobsToRender\n        .slice(selectedPage * 10, selectedPage * 10 + 10)\n        .map((item) => {\n          return (\n            <div key={item.id === null ? item.id : item.id}>\n              <Paper style={{ marginTop: 20 }}>\n                <Grid\n                  container\n                  spacing={3}\n                  style={{ padding: 20 }}\n                  alignItems=\"center\"\n                >\n                  <Grid item md={5}>\n                    <div>\n                      <Link\n                        to={customURL(item.url, \"internal\")}\n                        className=\"btnLink\"\n                      >\n                        <h4\n                          onClick={() => {\n                            fetchJobById(item.id);\n                          }}\n                        >\n                          {item.jobName === null ? item.jobName : item.jobName},\n                          {item.jobPostAsukohaAddress.map((address) => {\n                            {\n                              if (address.address[17] === null) {\n                                return address.address\n                                  .split(\",\")\n                                  .splice(1)\n                                  .toString();\n                              } else return address.address;\n                            }\n                          }) === null || undefined\n                            ? item.jobPostAsukohaAddress.map((address) => {\n                                {\n                                  if (address.address[17] === null) {\n                                    return address.address\n                                      .split(\",\")\n                                      .splice(1)\n                                      .toString();\n                                  } else return address.address;\n                                }\n                              })\n                            : item.jobPostAddress.address}\n                        </h4>\n                      </Link>\n                    </div>\n                    <div>\n                      <span>\n                        {t(\"applicationsInTotal\")}:\n                        <span style={{ color: \"red\", margin: \"0 5px\" }}>\n                          ({item.jobPostApplications.length})\n                        </span>\n                      </span>\n                      <span />\n                      <span>\n                        {t(\"viewed\")}: <span />\n                        <span style={{ color: \"red\", margin: \"0 5px\" }}>\n                          ({`${item.totalViewed}`})\n                        </span>\n                        {t(\"times\")}\n                      </span>\n                    </div>\n                  </Grid>\n                  <Grid item md={3} style={{ color: \"#34495E \" }}>\n                    <div>\n                      <h5>{dateFormat(item.dateOfApplication)}</h5>\n                    </div>\n                  </Grid>\n                  <Grid item md={4}>\n                    <Grid container spacing={1}>\n                      <Grid item md={4}>\n                        <Button\n                          variant=\"outlined\"\n                          color=\"secondary\"\n                          onClick={() =>\n                            warnToDelete(item.id) === null\n                              ? warnToDelete(item.id)\n                              : warnToDelete(item.id)\n                          }\n                        >\n                          {t(\"common:deleteBtn\")}\n                        </Button>\n                      </Grid>\n                      <Grid item md={4}>\n                        <Link to=\"/tyopaikkailmoitus/\" className=\"btnLink\">\n                          <Button\n                            //style={ isDesktop && i18n.language === 'ru' ? {left: '15px'} : null }\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={() => {\n                              setToEdit(true);\n                              editOffer(item.id);\n                              populateVacancyForm(item.id, true);\n                            }}\n                          >\n                            {t(\"common:copyBtn\")}\n                          </Button>\n                        </Link>\n                      </Grid>\n                      <Grid item md={4}>\n                        <div>\n                          <Link\n                            className=\"btnLink\"\n                            to={\n                              customURL(item.url, \"internal\") === null\n                                ? customURL(item.url, \"internal\")\n                                : customURL(item.url, \"internal\")\n                            }\n                          >\n                            <Button\n                              variant=\"contained\"\n                              style={\n                                isDesktop && i18n.language === \"ru\"\n                                  ? { left: \"29px\" }\n                                  : null\n                              }\n                              color=\"primary\"\n                              onClick={() => fetchJobById(item.id)}\n                            >\n                              {t(\"common:openBtn\")}\n                            </Button>\n                          </Link>\n                        </div>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Paper>\n            </div>\n          );\n        })}\n      <CustomizedDialogs\n        showDialog={showDialog}\n        dialogText={t(\"warnToDeletePostText\")}\n        warnToDeleteModal\n        handleClick={() => {\n          deleteJobOffer(isToDeleteAdvertisementId);\n          changeRoute();\n        }}\n      />\n      <div className=\"pagination-body\">\n        <ReactPaginate\n          previousLabel={<NavigateBeforeIcon />}\n          nextLabel={<NavigateNextIcon />}\n          breakLabel=\"...\"\n          breakClassName=\"break-me\"\n          pageCount={6}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={5}\n          onPageChange={changeAdvertPage}\n          containerClassName=\"pagination\"\n          subContainerClassName=\"pages pagination\"\n          activeClassName=\"active\"\n          forcePage={selectedPage}\n        />\n      </div>\n    </div>\n  );\n};\nexport default ActiveAdsComponent;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,mBAApC;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,gCAAtC;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,kBAAkB,GAAG,QAarB;EAAA,IAbsB;IAC1BC,YAD0B;IAE1BC,mBAF0B;IAG1BC,cAH0B;IAI1BC,gBAJ0B;IAK1BC,YAL0B;IAM1BC,WAN0B;IAO1BC,kBAP0B;IAQ1BC,iBAR0B;IAS1BC,UAT0B;IAU1BC,yBAV0B;IAW1BC,YAX0B;IAY1BC;EAZ0B,CAatB;EACJ,MAAM;IAAEC;EAAF,IAAQpB,cAAc,CAAC,MAAD,CAA5B;EACA,MAAM,CAACqB,SAAD,EAAYC,YAAZ,IAA4B/B,QAAQ,CAACgC,MAAM,CAACC,UAAR,CAA1C;EACA,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCnC,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACoC,MAAD,EAASC,SAAT,IAAsBrC,QAAQ,EAApC;EACA,MAAM,CAACsC,YAAD,EAAeC,eAAf,IAAkCvC,QAAQ,CAAC,EAAD,CAAhD,CALI,CAOJ;EACA;EACA;EACA;EACA;EACA;;EAEAD,SAAS,CAAC,MAAM;IACde,KAAK,CAAC0B,GAAN,CAAW,+BAAX,EAA2CC,IAA3C,CAAiDC,GAAD,IAAS;MACvDP,eAAe,CAACO,GAAG,CAACC,IAAL,CAAf;IACD,CAFD;EAGD,CAJQ,EAIN,EAJM,CAAT;;EAMA,MAAMC,UAAU,GAAG,MAAM;IACvBb,YAAY,CAACC,MAAM,CAACC,UAAP,IAAqB,IAAtB,CAAZ;EACD,CAFD;;EAGAlC,SAAS,CAAC,MAAM;IACdiC,MAAM,CAACa,gBAAP,CAAwB,QAAxB,EAAkCD,UAAlC;IACA,OAAO,MAAMZ,MAAM,CAACc,mBAAP,CAA2B,QAA3B,EAAqCF,UAArC,CAAb;EACD,CAHQ,CAAT;EAKA;IAAA;IACE;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;MAAK,SAAS,EAAC,WAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,IAAD;MAAM,SAAS,MAAf;MAAgB,KAAK,EAAE;QAAEG,MAAM,EAAE;MAAV,CAAvB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,IAAD;MAAM,IAAI,MAAV;MAAW,EAAE,EAAE,EAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACGlB,CAAC,CAAC,iBAAD,CADJ,QAEI,GACAK,YAAY,IAAIA,YAAY,CAACc,MAAb,KAAwB,IAAxC,GACId,YAAY,CAACc,MADjB,GAEId,YAAY,CAACc,MAClB,EANH,OADF,CADF,eAYE,oBAAC,IAAD;MAAM,IAAI,MAAV;MAAW,EAAE,EAAE,CAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACGd,YAAY,CAACe,iBAAb,KAAmC,CAAnC,IACDf,YAAY,CAACe,iBAAb,KAAmC,IADlC,gBAEC,oBAAC,IAAD;MAAM,EAAE,EAAC,oBAAT;MAA8B,SAAS,EAAC,SAAxC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,MAAD;MACE,OAAO,EAAEzB,iBADX;MAEE,OAAO,EAAC,WAFV;MAGE,IAAI,EAAEX,IAAI,CAACqC,QAAL,KAAkB,IAAlB,GAAyB,OAAzB,GAAmC,QAH3C;MAIE,KAAK,EAAC,SAJR;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAMGrB,CAAC,CAAC,SAAD,CANJ,CADF,CAFD,gBAaC,oBAAC,IAAD;MAAM,EAAE,EAAC,oBAAT;MAA8B,SAAS,EAAC,SAAxC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,MAAD;MACE,OAAO,EAAEL,iBADX;MAEE,OAAO,EAAC,WAFV;MAGE,IAAI,EAAEX,IAAI,CAACqC,QAAL,KAAkB,IAAlB,GAAyB,OAAzB,GAAmC,QAH3C;MAIE,KAAK,EAAC,SAJR;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAMGrB,CAAC,CAAC,SAAD,CANJ,CADF,CAdJ,CAZF,CADF,EAwCGK,YAAY,CACViB,KADF,CACQ9B,YAAY,GAAG,EADvB,EAC2BA,YAAY,GAAG,EAAf,GAAoB,EAD/C,EAEE+B,GAFF,CAEOC,IAAD,IAAU;MACb,oBACE;QAAK,GAAG,EAAEA,IAAI,CAACC,EAAL,KAAY,IAAZ,GAAmBD,IAAI,CAACC,EAAxB,GAA6BD,IAAI,CAACC,EAA5C;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,KAAD;QAAO,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAb,CAAd;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,IAAD;QACE,SAAS,MADX;QAEE,OAAO,EAAE,CAFX;QAGE,KAAK,EAAE;UAAEC,OAAO,EAAE;QAAX,CAHT;QAIE,UAAU,EAAC,QAJb;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAME,oBAAC,IAAD;QAAM,IAAI,MAAV;QAAW,EAAE,EAAE,CAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,IAAD;QACE,EAAE,EAAE9C,SAAS,CAAC2C,IAAI,CAACI,GAAN,EAAW,UAAX,CADf;QAEE,SAAS,EAAC,SAFZ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAIE;QACE,OAAO,EAAE,MAAM;UACb9B,YAAY,CAAC0B,IAAI,CAACC,EAAN,CAAZ;QACD,CAHH;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAKGD,IAAI,CAACK,OAAL,KAAiB,IAAjB,GAAwBL,IAAI,CAACK,OAA7B,GAAuCL,IAAI,CAACK,OAL/C,OAMGL,IAAI,CAACM,qBAAL,CAA2BP,GAA3B,CAAgCQ,OAAD,IAAa;QAC3C;UACE,IAAIA,OAAO,CAACA,OAAR,CAAgB,EAAhB,MAAwB,IAA5B,EAAkC;YAChC,OAAOA,OAAO,CAACA,OAAR,CACJC,KADI,CACE,GADF,EAEJC,MAFI,CAEG,CAFH,EAGJC,QAHI,EAAP;UAID,CALD,MAKO,OAAOH,OAAO,CAACA,OAAf;QACR;MACF,CATA,MASM,IATN,IAScI,SATd,GAUGX,IAAI,CAACM,qBAAL,CAA2BP,GAA3B,CAAgCQ,OAAD,IAAa;QAC1C;UACE,IAAIA,OAAO,CAACA,OAAR,CAAgB,EAAhB,MAAwB,IAA5B,EAAkC;YAChC,OAAOA,OAAO,CAACA,OAAR,CACJC,KADI,CACE,GADF,EAEJC,MAFI,CAEG,CAFH,EAGJC,QAHI,EAAP;UAID,CALD,MAKO,OAAOH,OAAO,CAACA,OAAf;QACR;MACF,CATD,CAVH,GAoBGP,IAAI,CAACY,cAAL,CAAoBL,OA1B1B,CAJF,CADF,CADF,eAoCE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACG/B,CAAC,CAAC,qBAAD,CADJ,oBAEE;QAAM,KAAK,EAAE;UAAEqC,KAAK,EAAE,KAAT;UAAgBnB,MAAM,EAAE;QAAxB,CAAb;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,QACIM,IAAI,CAACc,mBAAL,CAAyBnB,MAD7B,MAFF,CADF,eAOE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAPF,eAQE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACGnB,CAAC,CAAC,QAAD,CADJ,qBACiB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADjB,eAEE;QAAM,KAAK,EAAE;UAAEqC,KAAK,EAAE,KAAT;UAAgBnB,MAAM,EAAE;QAAxB,CAAb;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,QACK,GAAEM,IAAI,CAACe,WAAY,EADxB,MAFF,EAKGvC,CAAC,CAAC,OAAD,CALJ,CARF,CApCF,CANF,eA2DE,oBAAC,IAAD;QAAM,IAAI,MAAV;QAAW,EAAE,EAAE,CAAf;QAAkB,KAAK,EAAE;UAAEqC,KAAK,EAAE;QAAT,CAAzB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAAKvD,UAAU,CAAC0C,IAAI,CAACgB,iBAAN,CAAf,CADF,CADF,CA3DF,eAgEE,oBAAC,IAAD;QAAM,IAAI,MAAV;QAAW,EAAE,EAAE,CAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,IAAD;QAAM,SAAS,MAAf;QAAgB,OAAO,EAAE,CAAzB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,IAAD;QAAM,IAAI,MAAV;QAAW,EAAE,EAAE,CAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,MAAD;QACE,OAAO,EAAC,UADV;QAEE,KAAK,EAAC,WAFR;QAGE,OAAO,EAAE,MACPpD,YAAY,CAACoC,IAAI,CAACC,EAAN,CAAZ,KAA0B,IAA1B,GACIrC,YAAY,CAACoC,IAAI,CAACC,EAAN,CADhB,GAEIrC,YAAY,CAACoC,IAAI,CAACC,EAAN,CANpB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GASGzB,CAAC,CAAC,kBAAD,CATJ,CADF,CADF,eAcE,oBAAC,IAAD;QAAM,IAAI,MAAV;QAAW,EAAE,EAAE,CAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,IAAD;QAAM,EAAE,EAAC,qBAAT;QAA+B,SAAS,EAAC,SAAzC;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,MAAD,CACE;MADF;QAEE,OAAO,EAAC,WAFV;QAGE,KAAK,EAAC,WAHR;QAIE,OAAO,EAAE,MAAM;UACbQ,SAAS,CAAC,IAAD,CAAT;UACAT,SAAS,CAACyB,IAAI,CAACC,EAAN,CAAT;UACApC,mBAAmB,CAACmC,IAAI,CAACC,EAAN,EAAU,IAAV,CAAnB;QACD,CARH;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAUGzB,CAAC,CAAC,gBAAD,CAVJ,CADF,CADF,CAdF,eA8BE,oBAAC,IAAD;QAAM,IAAI,MAAV;QAAW,EAAE,EAAE,CAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,IAAD;QACE,SAAS,EAAC,SADZ;QAEE,EAAE,EACAnB,SAAS,CAAC2C,IAAI,CAACI,GAAN,EAAW,UAAX,CAAT,KAAoC,IAApC,GACI/C,SAAS,CAAC2C,IAAI,CAACI,GAAN,EAAW,UAAX,CADb,GAEI/C,SAAS,CAAC2C,IAAI,CAACI,GAAN,EAAW,UAAX,CALjB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBAQE,oBAAC,MAAD;QACE,OAAO,EAAC,WADV;QAEE,KAAK,EACH3B,SAAS,IAAIjB,IAAI,CAACqC,QAAL,KAAkB,IAA/B,GACI;UAAEoB,IAAI,EAAE;QAAR,CADJ,GAEI,IALR;QAOE,KAAK,EAAC,SAPR;QAQE,OAAO,EAAE,MAAM3C,YAAY,CAAC0B,IAAI,CAACC,EAAN,CAR7B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GAUGzB,CAAC,CAAC,gBAAD,CAVJ,CARF,CADF,CADF,CA9BF,CADF,CAhEF,CADF,CADF,CADF;IAiID,CApIF,CAxCH,eA6KE,oBAAC,iBAAD;MACE,UAAU,EAAEJ,UADd;MAEE,UAAU,EAAEI,CAAC,CAAC,sBAAD,CAFf;MAGE,iBAAiB,MAHnB;MAIE,WAAW,EAAE,MAAM;QACjBV,cAAc,CAACO,yBAAD,CAAd;QACAX,WAAW;MACZ,CAPH;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EA7KF,eAsLE;MAAK,SAAS,EAAC,iBAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE,oBAAC,aAAD;MACE,aAAa,eAAE,oBAAC,kBAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADjB;MAEE,SAAS,eAAE,oBAAC,gBAAD;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAFb;MAGE,UAAU,EAAC,KAHb;MAIE,cAAc,EAAC,UAJjB;MAKE,SAAS,EAAE,CALb;MAME,oBAAoB,EAAE,CANxB;MAOE,kBAAkB,EAAE,CAPtB;MAQE,YAAY,EAAEK,gBARhB;MASE,kBAAkB,EAAC,YATrB;MAUE,qBAAqB,EAAC,kBAVxB;MAWE,eAAe,EAAC,QAXlB;MAYE,SAAS,EAAEC,YAZb;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADF,CAtLF;EAzBF;AAiOD,CA1QD;;AA2QA,eAAeL,kBAAf"},"metadata":{},"sourceType":"module"}