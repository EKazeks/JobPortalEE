{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { getFormValues, reset } from 'redux-form';\nimport { API_SERVER, RESET_PASSWORD } from '../constants';\nimport store from '../store';\nimport { loginPost } from '../utils/request';\nimport { resetPasswordSubmitSuccess, resetPasswordSubmitFailed } from '../actions';\n\nfunction* resetPassword() {\n  try {\n    const url = `${API_SERVER}/ResetPassword`;\n    const {\n      email\n    } = getFormValues('resetPassword')(store.getState());\n    const result = yield call(loginPost, url, JSON.stringify({\n      email\n    }));\n\n    if (result.data === 'User password reset successfully!') {\n      yield put(resetPasswordSubmitSuccess());\n    } else {\n      yield put(resetPasswordSubmitFailed());\n    }\n\n    yield put(reset('resetPassword'));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* watchResetPassword() {\n  yield takeEvery(RESET_PASSWORD, resetPassword);\n}","map":{"version":3,"names":["takeEvery","call","put","getFormValues","reset","API_SERVER","RESET_PASSWORD","store","loginPost","resetPasswordSubmitSuccess","resetPasswordSubmitFailed","resetPassword","url","email","getState","result","JSON","stringify","data","error","console","log","watchResetPassword"],"sources":["/Users/eduardkazeks/Documents/GitHub/JobPortalEE/src/sagas/resetPassword.saga.js"],"sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\nimport { getFormValues, reset } from 'redux-form';\nimport { API_SERVER, RESET_PASSWORD } from '../constants';\nimport store from '../store';\nimport { loginPost } from '../utils/request';\nimport { resetPasswordSubmitSuccess, resetPasswordSubmitFailed } from '../actions';\n\nfunction* resetPassword() {\n  try {\n    const url = `${API_SERVER}/ResetPassword`;\n    const { email } = getFormValues('resetPassword')(store.getState());\n    const result = yield call(loginPost, url, JSON.stringify({ email }));\n    if (result.data === 'User password reset successfully!') {\n      yield put(resetPasswordSubmitSuccess());\n    } else {\n      yield put(resetPasswordSubmitFailed());\n    }\n    yield put(reset('resetPassword'));\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* watchResetPassword() {\n  yield takeEvery(RESET_PASSWORD, resetPassword);\n}\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,YAArC;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,cAA3C;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,0BAAT,EAAqCC,yBAArC,QAAsE,YAAtE;;AAEA,UAAUC,aAAV,GAA0B;EACxB,IAAI;IACF,MAAMC,GAAG,GAAI,GAAEP,UAAW,gBAA1B;IACA,MAAM;MAAEQ;IAAF,IAAYV,aAAa,CAAC,eAAD,CAAb,CAA+BI,KAAK,CAACO,QAAN,EAA/B,CAAlB;IACA,MAAMC,MAAM,GAAG,MAAMd,IAAI,CAACO,SAAD,EAAYI,GAAZ,EAAiBI,IAAI,CAACC,SAAL,CAAe;MAAEJ;IAAF,CAAf,CAAjB,CAAzB;;IACA,IAAIE,MAAM,CAACG,IAAP,KAAgB,mCAApB,EAAyD;MACvD,MAAMhB,GAAG,CAACO,0BAA0B,EAA3B,CAAT;IACD,CAFD,MAEO;MACL,MAAMP,GAAG,CAACQ,yBAAyB,EAA1B,CAAT;IACD;;IACD,MAAMR,GAAG,CAACE,KAAK,CAAC,eAAD,CAAN,CAAT;EACD,CAVD,CAUE,OAAOe,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD;AACF;;AACD,OAAO,UAAUG,kBAAV,GAA+B;EACpC,MAAMtB,SAAS,CAACM,cAAD,EAAiBK,aAAjB,CAAf;AACD"},"metadata":{},"sourceType":"module"}