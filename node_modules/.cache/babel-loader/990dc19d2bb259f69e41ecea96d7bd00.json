{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduard\\\\Desktop\\\\EeJobPortal\\\\src\\\\containers\\\\applicants\\\\applicationForm.container.js\";\nimport React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport ApplicationForm from '../../components/applicants/applicationForm.component';\nimport { getJobDetailsById, sendApplication, closeSnackbar, resetApplicationSent } from '../../actions';\nimport { applicationFormValidate as validate } from '../validate';\n\nclass ApplicationContainer extends React.Component {\n  componentDidMount() {\n    this.props.getJobDetailsById(`${this.props.match.params.id.split('JP')[1]}$$${this.props.match.params.id.split('JP')[0]}`);\n  }\n\n  componentWillUnmount() {\n    if (this.props.isApplicationSent) {\n      this.props.resetApplicationSent();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ApplicationForm, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }\n    }));\n  }\n\n}\n\nconst ApplicationFormContainer = reduxForm({\n  form: 'applicationForm',\n  validate\n})(ApplicationContainer);\n\nconst mapStateToProps = state => {\n  var _state$form, _state$form$applicati, _state$form$applicati2, _state$form$applicati3;\n\n  const populateApplicationForm = {\n    firstname: state.jobseekerProfile.profile.firstname,\n    lastname: state.jobseekerProfile.profile.lastname,\n    email: state.jobseekerProfile.profile.email,\n    contact_number: state.jobseekerProfile.profile.contact_number,\n    linkedin: state.jobseekerProfile.profile.linkedin,\n    portfolio: state.jobseekerProfile.profile.portfolio,\n    application_description: state.jobseekerProfile.profile.profile_description\n  };\n  return {\n    uploadedDocument: state.jobs.uploadedDocument && state.jobs.uploadedDocument[0] ? state.jobs.uploadedDocument[0] : '',\n    showSpinner: state.asyncActions.showSpinner,\n    isApplicationSent: state.asyncActions.applicantSent,\n    showThankyouDialog: state.asyncActions.showThankyouDialog,\n    showFailedSnackbar: state.asyncActions.showFailedSnackbar,\n    isLoggedIn: state.client.user !== null,\n    initialValues: populateApplicationForm,\n    applicant_cv: state.jobseekerProfile.profile.cv_document && state.jobseekerProfile.profile.cv_document[0].path,\n    cv_filename: state.jobseekerProfile.profile.cv_document && state.jobseekerProfile.profile.cv_document[0].filename,\n    jobDetails: state.jobs.jobDetails,\n    showErrorMsg: (state === null || state === void 0 ? void 0 : (_state$form = state.form) === null || _state$form === void 0 ? void 0 : (_state$form$applicati = _state$form.applicationForm) === null || _state$form$applicati === void 0 ? void 0 : (_state$form$applicati2 = _state$form$applicati.syncErrors) === null || _state$form$applicati2 === void 0 ? void 0 : (_state$form$applicati3 = _state$form$applicati2.application_description) === null || _state$form$applicati3 === void 0 ? void 0 : _state$form$applicati3.length) > 0 ? true : false\n  };\n};\n\nconst mapDispatchToProps = {\n  getJobDetailsById,\n  sendApplication,\n  closeSnackbar,\n  resetApplicationSent\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ApplicationFormContainer);","map":{"version":3,"names":["React","reduxForm","connect","ApplicationForm","getJobDetailsById","sendApplication","closeSnackbar","resetApplicationSent","applicationFormValidate","validate","ApplicationContainer","Component","componentDidMount","props","match","params","id","split","componentWillUnmount","isApplicationSent","render","ApplicationFormContainer","form","mapStateToProps","state","populateApplicationForm","firstname","jobseekerProfile","profile","lastname","email","contact_number","linkedin","portfolio","application_description","profile_description","uploadedDocument","jobs","showSpinner","asyncActions","applicantSent","showThankyouDialog","showFailedSnackbar","isLoggedIn","client","user","initialValues","applicant_cv","cv_document","path","cv_filename","filename","jobDetails","showErrorMsg","applicationForm","syncErrors","length","mapDispatchToProps"],"sources":["C:/Users/Eduard/Desktop/EeJobPortal/src/containers/applicants/applicationForm.container.js"],"sourcesContent":["import React from 'react';\r\nimport { reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport ApplicationForm from '../../components/applicants/applicationForm.component';\r\nimport { getJobDetailsById, sendApplication, closeSnackbar, resetApplicationSent } from '../../actions';\r\nimport { applicationFormValidate as validate } from '../validate';\r\n\r\nclass ApplicationContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getJobDetailsById(`${this.props.match.params.id.split('JP')[1]}$$${this.props.match.params.id.split('JP')[0]}`);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.props.isApplicationSent) {\r\n      this.props.resetApplicationSent();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <ApplicationForm {...this.props} />;\r\n  }\r\n}\r\nconst ApplicationFormContainer = reduxForm({\r\n  form: 'applicationForm',\r\n  validate,\r\n})(ApplicationContainer);\r\n\r\nconst mapStateToProps = state => {\r\n  const populateApplicationForm = {\r\n    firstname: state.jobseekerProfile.profile.firstname,\r\n    lastname: state.jobseekerProfile.profile.lastname,\r\n    email: state.jobseekerProfile.profile.email,\r\n    contact_number: state.jobseekerProfile.profile.contact_number,\r\n    linkedin: state.jobseekerProfile.profile.linkedin,\r\n    portfolio: state.jobseekerProfile.profile.portfolio,\r\n    application_description: state.jobseekerProfile.profile.profile_description,\r\n  };\r\n  return {\r\n    uploadedDocument: state.jobs.uploadedDocument && state.jobs.uploadedDocument[0] ? state.jobs.uploadedDocument[0] : '',\r\n    showSpinner: state.asyncActions.showSpinner,\r\n    isApplicationSent: state.asyncActions.applicantSent,\r\n    showThankyouDialog: state.asyncActions.showThankyouDialog,\r\n    showFailedSnackbar: state.asyncActions.showFailedSnackbar,\r\n    isLoggedIn: state.client.user !== null,\r\n    initialValues: populateApplicationForm,\r\n    applicant_cv: state.jobseekerProfile.profile.cv_document && state.jobseekerProfile.profile.cv_document[0].path,\r\n    cv_filename: state.jobseekerProfile.profile.cv_document && state.jobseekerProfile.profile.cv_document[0].filename,\r\n    jobDetails: state.jobs.jobDetails,\r\n    showErrorMsg: state?.form?.applicationForm?.syncErrors?.application_description?.length > 0 ? true : false,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  getJobDetailsById,\r\n  sendApplication,\r\n  closeSnackbar,\r\n  resetApplicationSent,\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ApplicationFormContainer);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}