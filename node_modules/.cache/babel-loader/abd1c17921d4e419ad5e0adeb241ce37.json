{"ast":null,"code":"import { takeEvery, put, call } from 'redux-saga/effects';\nimport { SEARCH_COMPANY_DETAILS, LOAD_SELECTED_COMPANY } from '../constants';\nimport { searchCompanyDetailsSuccess } from '../actions';\nimport { change } from 'redux-form';\n\nfunction* companyDetailsSearch(_ref) {\n  let {\n    companyName\n  } = _ref;\n\n  try {\n    const api = 'https://avoindata.prh.fi/bis/v1/?name=';\n    const url = `${api}${companyName}`;\n    const response = yield call(fetch, url);\n    const data = yield call([response, response.json]);\n    const companyDetails = data.results;\n    yield put(searchCompanyDetailsSuccess(companyDetails));\n  } catch (err) {\n    console.warn(err);\n  }\n} // fetch company address\n\n\nfunction* loadSelectedCompanySaga(_ref2) {\n  let {\n    selectedCompany,\n    formName\n  } = _ref2;\n\n  try {\n    const response = yield call(fetch, selectedCompany);\n    const data = yield call([response, response.json]);\n    const selectedCompanyDetails = data.results;\n    const compName = selectedCompanyDetails[0].name;\n    yield put(change(formName, 'company_name', compName));\n    const compBusinessId = selectedCompanyDetails[0].businessId;\n    yield put(change(formName, 'business_id', compBusinessId));\n    const compStreet = selectedCompanyDetails[0].addresses[0] && selectedCompanyDetails[0].addresses[0].street;\n    yield put(change(formName, 'address', compStreet));\n    const compCity = selectedCompanyDetails[0].addresses[0] && selectedCompanyDetails[0].addresses[0].city;\n    yield put(change(formName, 'city', compCity));\n    const phone = selectedCompanyDetails[0].contactDetails[0] && selectedCompanyDetails[0].contactDetails[0].value;\n    const formattedPhone = !!phone && phone.replace(/\\s/g, '').replace('+358', 0);\n\n    if (formattedPhone) {\n      yield put(change(formName, 'contact_number', formattedPhone));\n    }\n\n    const compPostCode = selectedCompanyDetails[0].addresses[0] && selectedCompanyDetails[0].addresses[0].postCode;\n    yield put(change(formName, 'zip_code', compPostCode));\n  } catch (e) {\n    console.warn(e);\n  }\n} // fetch company\n\n\nexport function* watchCompanyDetailsSearch() {\n  yield takeEvery(SEARCH_COMPANY_DETAILS, companyDetailsSearch);\n} //fetch company address\n\nexport function* watchLoadSelectedCompanySaga() {\n  yield takeEvery(LOAD_SELECTED_COMPANY, loadSelectedCompanySaga);\n}","map":{"version":3,"names":["takeEvery","put","call","SEARCH_COMPANY_DETAILS","LOAD_SELECTED_COMPANY","searchCompanyDetailsSuccess","change","companyDetailsSearch","companyName","api","url","response","fetch","data","json","companyDetails","results","err","console","warn","loadSelectedCompanySaga","selectedCompany","formName","selectedCompanyDetails","compName","name","compBusinessId","businessId","compStreet","addresses","street","compCity","city","phone","contactDetails","value","formattedPhone","replace","compPostCode","postCode","e","watchCompanyDetailsSearch","watchLoadSelectedCompanySaga"],"sources":["C:/Users/shuli/OneDrive/Desktop/Work/JobportalN/JobPortalEE/src/sagas/searchCompanyDetailsSaga.js"],"sourcesContent":["import { takeEvery, put, call } from 'redux-saga/effects';\r\nimport { SEARCH_COMPANY_DETAILS, LOAD_SELECTED_COMPANY } from '../constants';\r\nimport { searchCompanyDetailsSuccess } from '../actions';\r\nimport { change } from 'redux-form';\r\n\r\nfunction* companyDetailsSearch({ companyName }) {\r\n  try {\r\n    const api = 'https://avoindata.prh.fi/bis/v1/?name=';\r\n    const url = `${api}${companyName}`;\r\n\r\n    const response = yield call(fetch, url);\r\n    const data = yield call([response, response.json]);\r\n    const companyDetails = data.results;\r\n\r\n    yield put(searchCompanyDetailsSuccess(companyDetails));\r\n  } catch (err) {\r\n    console.warn(err);\r\n  }\r\n}\r\n\r\n// fetch company address\r\n\r\nfunction* loadSelectedCompanySaga({ selectedCompany, formName }) {\r\n  try {\r\n    const response = yield call(fetch, selectedCompany);\r\n    const data = yield call([response, response.json]);\r\n    const selectedCompanyDetails = data.results;\r\n\r\n    const compName = selectedCompanyDetails[0].name;\r\n\r\n    yield put(change(formName, 'company_name', compName));\r\n\r\n    const compBusinessId = selectedCompanyDetails[0].businessId;\r\n\r\n    yield put(change(formName, 'business_id', compBusinessId));\r\n\r\n    const compStreet = selectedCompanyDetails[0].addresses[0] && selectedCompanyDetails[0].addresses[0].street;\r\n\r\n    yield put(change(formName, 'address', compStreet));\r\n\r\n    const compCity = selectedCompanyDetails[0].addresses[0] && selectedCompanyDetails[0].addresses[0].city;\r\n    yield put(change(formName, 'city', compCity));\r\n\r\n    const phone = selectedCompanyDetails[0].contactDetails[0] && selectedCompanyDetails[0].contactDetails[0].value;\r\n\r\n    const formattedPhone = !!phone && phone.replace(/\\s/g, '').replace('+358', 0);\r\n\r\n    if (formattedPhone) {\r\n      yield put(change(formName, 'contact_number', formattedPhone));\r\n    }\r\n\r\n    const compPostCode = selectedCompanyDetails[0].addresses[0] && selectedCompanyDetails[0].addresses[0].postCode;\r\n\r\n    yield put(change(formName, 'zip_code', compPostCode));\r\n  } catch (e) {\r\n    console.warn(e);\r\n  }\r\n}\r\n\r\n// fetch company\r\nexport function* watchCompanyDetailsSearch() {\r\n  yield takeEvery(SEARCH_COMPANY_DETAILS, companyDetailsSearch);\r\n}\r\n\r\n//fetch company address\r\nexport function* watchLoadSelectedCompanySaga() {\r\n  yield takeEvery(LOAD_SELECTED_COMPANY, loadSelectedCompanySaga);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}